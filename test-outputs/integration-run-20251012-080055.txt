ts-jest[ts-jest-transformer] (WARN) Define `ts-jest` config under `globals` is deprecated. Please do
transform: {
    <transform_regex>: ['ts-jest', { /* ts-jest config goes here in Jest */ }],
},
See more at https://kulshekhar.github.io/ts-jest/docs/getting-started/presets#advanced
ts-jest[ts-jest-transformer] (WARN) Define `ts-jest` config under `globals` is deprecated. Please do
transform: {
    <transform_regex>: ['ts-jest', { /* ts-jest config goes here in Jest */ }],
},
See more at https://kulshekhar.github.io/ts-jest/docs/getting-started/presets#advanced
ts-jest[ts-jest-transformer] (WARN) Define `ts-jest` config under `globals` is deprecated. Please do
transform: {
    <transform_regex>: ['ts-jest', { /* ts-jest config goes here in Jest */ }],
},
See more at https://kulshekhar.github.io/ts-jest/docs/getting-started/presets#advanced
ts-jest[ts-jest-transformer] (WARN) Define `ts-jest` config under `globals` is deprecated. Please do
transform: {
    <transform_regex>: ['ts-jest', { /* ts-jest config goes here in Jest */ }],
},
See more at https://kulshekhar.github.io/ts-jest/docs/getting-started/presets#advanced
ts-jest[ts-jest-transformer] (WARN) Define `ts-jest` config under `globals` is deprecated. Please do
transform: {
    <transform_regex>: ['ts-jest', { /* ts-jest config goes here in Jest */ }],
},
See more at https://kulshekhar.github.io/ts-jest/docs/getting-started/presets#advanced
ts-jest[ts-jest-transformer] (WARN) Define `ts-jest` config under `globals` is deprecated. Please do
transform: {
    <transform_regex>: ['ts-jest', { /* ts-jest config goes here in Jest */ }],
},
See more at https://kulshekhar.github.io/ts-jest/docs/getting-started/presets#advanced
ts-jest[ts-jest-transformer] (WARN) Define `ts-jest` config under `globals` is deprecated. Please do
transform: {
    <transform_regex>: ['ts-jest', { /* ts-jest config goes here in Jest */ }],
},
See more at https://kulshekhar.github.io/ts-jest/docs/getting-started/presets#advanced
ts-jest[ts-jest-transformer] (WARN) Define `ts-jest` config under `globals` is deprecated. Please do
transform: {
    <transform_regex>: ['ts-jest', { /* ts-jest config goes here in Jest */ }],
},
See more at https://kulshekhar.github.io/ts-jest/docs/getting-started/presets#advanced
ts-jest[ts-jest-transformer] (WARN) Define `ts-jest` config under `globals` is deprecated. Please do
transform: {
    <transform_regex>: ['ts-jest', { /* ts-jest config goes here in Jest */ }],
},
See more at https://kulshekhar.github.io/ts-jest/docs/getting-started/presets#advanced
  console.log
    [dotenv@17.2.3] injecting env (39) from .env -- tip: üîÑ add secrets lifecycle management: https://dotenvx.com/ops

      at _log (../../.yarn/berry/cache/dotenv-npm-17.2.3-2f9ab93ea1-10c0.zip/node_modules/dotenv/lib/main.js:142:11)

ts-jest[ts-jest-transformer] (WARN) Define `ts-jest` config under `globals` is deprecated. Please do
transform: {
    <transform_regex>: ['ts-jest', { /* ts-jest config goes here in Jest */ }],
},
See more at https://kulshekhar.github.io/ts-jest/docs/getting-started/presets#advanced
ts-jest[ts-jest-transformer] (WARN) Define `ts-jest` config under `globals` is deprecated. Please do
transform: {
    <transform_regex>: ['ts-jest', { /* ts-jest config goes here in Jest */ }],
},
See more at https://kulshekhar.github.io/ts-jest/docs/getting-started/presets#advanced
  console.log
    [dotenv@17.2.3] injecting env (39) from .env -- tip: üîê prevent committing .env to code: https://dotenvx.com/precommit

      at _log (../../.yarn/berry/cache/dotenv-npm-17.2.3-2f9ab93ea1-10c0.zip/node_modules/dotenv/lib/main.js:142:11)

  console.log
    [dotenv@17.2.3] injecting env (39) from .env -- tip: üîê prevent committing .env to code: https://dotenvx.com/precommit

      at _log (../../.yarn/berry/cache/dotenv-npm-17.2.3-2f9ab93ea1-10c0.zip/node_modules/dotenv/lib/main.js:142:11)

  console.log
    [dotenv@17.2.3] injecting env (39) from .env -- tip: ‚úÖ audit secrets and track compliance: https://dotenvx.com/ops

      at _log (../../.yarn/berry/cache/dotenv-npm-17.2.3-2f9ab93ea1-10c0.zip/node_modules/dotenv/lib/main.js:142:11)

  console.log
    [dotenv@17.2.3] injecting env (0) from .env -- tip: ‚úÖ audit secrets and track compliance: https://dotenvx.com/ops

      at _log (../../.yarn/berry/cache/dotenv-npm-17.2.3-2f9ab93ea1-10c0.zip/node_modules/dotenv/lib/main.js:142:11)

  console.error
    ‚úì Registered 30 comprehensive waste management tools:

      94 |   server.registerTool(new DatabaseResetTool(apiBaseUrl));
      95 |
    > 96 |   console.error("‚úì Registered 30 comprehensive waste management tools:");
         |           ^
      97 |   console.error("  - 20 CRUD operations (list/get/create/update/delete for 4 resources)");
      98 |   console.error("  - 4 Analytics tools");
      99 |   console.error("  - 5 Relationship tools");

      at registerAllTools (src/tools/index.ts:96:11)
      at Object.<anonymous> (src/tests/integration/agents/executor.integration.test.ts:19:21)

  console.error
      - 20 CRUD operations (list/get/create/update/delete for 4 resources)

       95 |
       96 |   console.error("‚úì Registered 30 comprehensive waste management tools:");
    >  97 |   console.error("  - 20 CRUD operations (list/get/create/update/delete for 4 resources)");
          |           ^
       98 |   console.error("  - 4 Analytics tools");
       99 |   console.error("  - 5 Relationship tools");
      100 |   console.error("  - 1 Database management tool");

      at registerAllTools (src/tools/index.ts:97:11)
      at Object.<anonymous> (src/tests/integration/agents/executor.integration.test.ts:19:21)

  console.log
    [LLMProvider] Using openai provider

      at LLMProvider.generate (src/shared/llm/provider.ts:42:17)

  console.error
      - 4 Analytics tools

       96 |   console.error("‚úì Registered 30 comprehensive waste management tools:");
       97 |   console.error("  - 20 CRUD operations (list/get/create/update/delete for 4 resources)");
    >  98 |   console.error("  - 4 Analytics tools");
          |           ^
       99 |   console.error("  - 5 Relationship tools");
      100 |   console.error("  - 1 Database management tool");
      101 | }

      at registerAllTools (src/tools/index.ts:98:11)
      at Object.<anonymous> (src/tests/integration/agents/executor.integration.test.ts:19:21)

  console.error
      - 5 Relationship tools

       97 |   console.error("  - 20 CRUD operations (list/get/create/update/delete for 4 resources)");
       98 |   console.error("  - 4 Analytics tools");
    >  99 |   console.error("  - 5 Relationship tools");
          |           ^
      100 |   console.error("  - 1 Database management tool");
      101 | }
      102 |

      at registerAllTools (src/tools/index.ts:99:11)
      at Object.<anonymous> (src/tests/integration/agents/executor.integration.test.ts:19:21)

  console.error
      - 1 Database management tool

       98 |   console.error("  - 4 Analytics tools");
       99 |   console.error("  - 5 Relationship tools");
    > 100 |   console.error("  - 1 Database management tool");
          |           ^
      101 | }
      102 |
      103 | // Export all tools for testing

      at registerAllTools (src/tools/index.ts:100:11)
      at Object.<anonymous> (src/tests/integration/agents/executor.integration.test.ts:19:21)

  console.log
    [ExecutorAgent] Executing plan with 1 steps

      at ExecutorAgent.execute (src/agents/executor.ts:35:13)

  console.log
    [dotenv@17.2.3] injecting env (39) from .env -- tip: üóÇÔ∏è backup and recover secrets: https://dotenvx.com/ops

      at _log (../../.yarn/berry/cache/dotenv-npm-17.2.3-2f9ab93ea1-10c0.zip/node_modules/dotenv/lib/main.js:142:11)

  console.log
    [ExecutorAgent] Executing 1 steps in parallel

      at ExecutorAgent.execute (src/agents/executor.ts:52:15)

  console.log
    [ExecutorAgent] Executing step 0: shipments/list

      at ExecutorAgent.executeStep (src/agents/executor.ts:177:13)
          at Array.map (<anonymous>)

  console.error
    [ExecutorAgent] Step 0 (shipments/list) failed: Tool not found: shipments/list

      202 |
      203 |     } catch (error: any) {
    > 204 |       console.error(`[ExecutorAgent] Step ${index} (${step.tool}) failed:`, error.message);
          |               ^
      205 |
      206 |       return {
      207 |         success: false,

      at ExecutorAgent.executeStep (src/agents/executor.ts:204:15)
      at src/agents/executor.ts:166:19
          at Array.map (<anonymous>)
      at ExecutorAgent.executeBatch (src/agents/executor.ts:161:34)
      at ExecutorAgent.execute (src/agents/executor.ts:55:39)
      at Object.<anonymous> (src/tests/integration/agents/executor.integration.test.ts:35:38)

  console.log
    [ExecutorAgent] Plan execution complete. 1 results

      at ExecutorAgent.execute (src/agents/executor.ts:79:13)

  console.log
    [LLMProvider] Using openai provider

      at LLMProvider.generate (src/shared/llm/provider.ts:42:17)

  console.log
    [ExecutorAgent] Executing plan with 1 steps

      at ExecutorAgent.execute (src/agents/executor.ts:35:13)

  console.log
    [ExecutorAgent] Executing 1 steps in parallel

      at ExecutorAgent.execute (src/agents/executor.ts:52:15)

  console.log
    [ExecutorAgent] Executing step 0: facilities/list

      at ExecutorAgent.executeStep (src/agents/executor.ts:177:13)
          at Array.map (<anonymous>)

  console.error
    [ExecutorAgent] Step 0 (facilities/list) failed: Tool not found: facilities/list

      202 |
      203 |     } catch (error: any) {
    > 204 |       console.error(`[ExecutorAgent] Step ${index} (${step.tool}) failed:`, error.message);
          |               ^
      205 |
      206 |       return {
      207 |         success: false,

      at ExecutorAgent.executeStep (src/agents/executor.ts:204:15)
      at src/agents/executor.ts:166:19
          at Array.map (<anonymous>)
      at ExecutorAgent.executeBatch (src/agents/executor.ts:161:34)
      at ExecutorAgent.execute (src/agents/executor.ts:55:39)
      at Object.<anonymous> (src/tests/integration/agents/executor.integration.test.ts:53:38)

  console.log
    [ExecutorAgent] Plan execution complete. 1 results

      at ExecutorAgent.execute (src/agents/executor.ts:79:13)

  console.log
    [ExecutorAgent] Executing plan with 3 steps

      at ExecutorAgent.execute (src/agents/executor.ts:35:13)

  console.log
    [ExecutorAgent] Executing 3 steps in parallel

      at ExecutorAgent.execute (src/agents/executor.ts:52:15)

  console.log
    [ExecutorAgent] Executing step 0: shipments/list

      at ExecutorAgent.executeStep (src/agents/executor.ts:177:13)
          at Array.map (<anonymous>)

  console.error
    [ExecutorAgent] Step 0 (shipments/list) failed: Tool not found: shipments/list

      202 |
      203 |     } catch (error: any) {
    > 204 |       console.error(`[ExecutorAgent] Step ${index} (${step.tool}) failed:`, error.message);
          |               ^
      205 |
      206 |       return {
      207 |         success: false,

      at ExecutorAgent.executeStep (src/agents/executor.ts:204:15)
      at src/agents/executor.ts:166:19
          at Array.map (<anonymous>)
      at ExecutorAgent.executeBatch (src/agents/executor.ts:161:34)
      at ExecutorAgent.execute (src/agents/executor.ts:55:39)
      at Object.<anonymous> (src/tests/integration/agents/executor.integration.test.ts:72:38)

  console.log
    [ExecutorAgent] Executing step 1: facilities/list

      at ExecutorAgent.executeStep (src/agents/executor.ts:177:13)
          at Array.map (<anonymous>)

  console.error
    [ExecutorAgent] Step 1 (facilities/list) failed: Tool not found: facilities/list

      202 |
      203 |     } catch (error: any) {
    > 204 |       console.error(`[ExecutorAgent] Step ${index} (${step.tool}) failed:`, error.message);
          |               ^
      205 |
      206 |       return {
      207 |         success: false,

      at ExecutorAgent.executeStep (src/agents/executor.ts:204:15)
      at src/agents/executor.ts:166:19
          at Array.map (<anonymous>)
      at ExecutorAgent.executeBatch (src/agents/executor.ts:161:34)
      at ExecutorAgent.execute (src/agents/executor.ts:55:39)
      at Object.<anonymous> (src/tests/integration/agents/executor.integration.test.ts:72:38)

  console.log
    [ExecutorAgent] Executing step 2: inspections/list

      at ExecutorAgent.executeStep (src/agents/executor.ts:177:13)
          at Array.map (<anonymous>)

  console.error
    [ExecutorAgent] Step 2 (inspections/list) failed: Tool not found: inspections/list

      202 |
      203 |     } catch (error: any) {
    > 204 |       console.error(`[ExecutorAgent] Step ${index} (${step.tool}) failed:`, error.message);
          |               ^
      205 |
      206 |       return {
      207 |         success: false,

      at ExecutorAgent.executeStep (src/agents/executor.ts:204:15)
      at src/agents/executor.ts:166:19
          at Array.map (<anonymous>)
      at ExecutorAgent.executeBatch (src/agents/executor.ts:161:34)
      at ExecutorAgent.execute (src/agents/executor.ts:55:39)
      at Object.<anonymous> (src/tests/integration/agents/executor.integration.test.ts:72:38)

  console.log
    [ExecutorAgent] Plan execution complete. 3 results

      at ExecutorAgent.execute (src/agents/executor.ts:79:13)

  console.log
    [ExecutorAgent] Executing plan with 2 steps

      at ExecutorAgent.execute (src/agents/executor.ts:35:13)

  console.log
    [ExecutorAgent] Executing 1 steps in parallel

      at ExecutorAgent.execute (src/agents/executor.ts:52:15)

  console.log
    [ExecutorAgent] Executing step 0: shipments/list

      at ExecutorAgent.executeStep (src/agents/executor.ts:177:13)
          at Array.map (<anonymous>)

  console.error
    [ExecutorAgent] Step 0 (shipments/list) failed: Tool not found: shipments/list

      202 |
      203 |     } catch (error: any) {
    > 204 |       console.error(`[ExecutorAgent] Step ${index} (${step.tool}) failed:`, error.message);
          |               ^
      205 |
      206 |       return {
      207 |         success: false,

      at ExecutorAgent.executeStep (src/agents/executor.ts:204:15)
      at src/agents/executor.ts:166:19
          at Array.map (<anonymous>)
      at ExecutorAgent.executeBatch (src/agents/executor.ts:161:34)
      at ExecutorAgent.execute (src/agents/executor.ts:55:39)
      at Object.<anonymous> (src/tests/integration/agents/executor.integration.test.ts:100:38)

  console.log
    [ExecutorAgent] Executing 1 steps in parallel

      at ExecutorAgent.execute (src/agents/executor.ts:52:15)

  console.log
    [ExecutorAgent] Executing step 1: contaminants/list

      at ExecutorAgent.executeStep (src/agents/executor.ts:177:13)
          at Array.map (<anonymous>)

  console.error
    [ExecutorAgent] Step 1 (contaminants/list) failed: Tool not found: contaminants/list

      202 |
      203 |     } catch (error: any) {
    > 204 |       console.error(`[ExecutorAgent] Step ${index} (${step.tool}) failed:`, error.message);
          |               ^
      205 |
      206 |       return {
      207 |         success: false,

      at ExecutorAgent.executeStep (src/agents/executor.ts:204:15)
      at src/agents/executor.ts:166:19
          at Array.map (<anonymous>)
      at ExecutorAgent.executeBatch (src/agents/executor.ts:161:34)
      at ExecutorAgent.execute (src/agents/executor.ts:55:39)
      at Object.<anonymous> (src/tests/integration/agents/executor.integration.test.ts:100:23)

  console.log
    [ExecutorAgent] Plan execution complete. 2 results

      at ExecutorAgent.execute (src/agents/executor.ts:79:13)

  console.log
    [ExecutorAgent] Executing plan with 1 steps

      at ExecutorAgent.execute (src/agents/executor.ts:35:13)

  console.log
    [ExecutorAgent] Executing 1 steps in parallel

      at ExecutorAgent.execute (src/agents/executor.ts:52:15)

  console.log
    [ExecutorAgent] Executing step 0: non-existent-tool

      at ExecutorAgent.executeStep (src/agents/executor.ts:177:13)
          at Array.map (<anonymous>)

  console.error
    [ExecutorAgent] Step 0 (non-existent-tool) failed: Tool not found: non-existent-tool

      202 |
      203 |     } catch (error: any) {
    > 204 |       console.error(`[ExecutorAgent] Step ${index} (${step.tool}) failed:`, error.message);
          |               ^
      205 |
      206 |       return {
      207 |         success: false,

      at ExecutorAgent.executeStep (src/agents/executor.ts:204:15)
      at src/agents/executor.ts:166:19
          at Array.map (<anonymous>)
      at ExecutorAgent.executeBatch (src/agents/executor.ts:161:34)
      at ExecutorAgent.execute (src/agents/executor.ts:55:39)
      at Object.<anonymous> (src/tests/integration/agents/executor.integration.test.ts:121:38)

  console.log
    [ExecutorAgent] Plan execution complete. 1 results

      at ExecutorAgent.execute (src/agents/executor.ts:79:13)

  console.log
    [ExecutorAgent] Executing plan with 3 steps

      at ExecutorAgent.execute (src/agents/executor.ts:35:13)

  console.log
    [ExecutorAgent] Executing 1 steps in parallel

      at ExecutorAgent.execute (src/agents/executor.ts:52:15)

  console.log
    [ExecutorAgent] Executing step 0: facilities/list

      at ExecutorAgent.executeStep (src/agents/executor.ts:177:13)
          at Array.map (<anonymous>)

  console.error
    [ExecutorAgent] Step 0 (facilities/list) failed: Tool not found: facilities/list

      202 |
      203 |     } catch (error: any) {
    > 204 |       console.error(`[ExecutorAgent] Step ${index} (${step.tool}) failed:`, error.message);
          |               ^
      205 |
      206 |       return {
      207 |         success: false,

      at ExecutorAgent.executeStep (src/agents/executor.ts:204:15)
      at src/agents/executor.ts:166:19
          at Array.map (<anonymous>)
      at ExecutorAgent.executeBatch (src/agents/executor.ts:161:34)
      at ExecutorAgent.execute (src/agents/executor.ts:55:39)
      at Object.<anonymous> (src/tests/integration/agents/executor.integration.test.ts:147:38)

  console.log
    [ExecutorAgent] Executing 1 steps in parallel

      at ExecutorAgent.execute (src/agents/executor.ts:52:15)

  console.log
    [ExecutorAgent] Executing step 1: shipments/list

      at ExecutorAgent.executeStep (src/agents/executor.ts:177:13)
          at Array.map (<anonymous>)

  console.error
    [ExecutorAgent] Step 1 (shipments/list) failed: Tool not found: shipments/list

      202 |
      203 |     } catch (error: any) {
    > 204 |       console.error(`[ExecutorAgent] Step ${index} (${step.tool}) failed:`, error.message);
          |               ^
      205 |
      206 |       return {
      207 |         success: false,

      at ExecutorAgent.executeStep (src/agents/executor.ts:204:15)
      at src/agents/executor.ts:166:19
          at Array.map (<anonymous>)
      at ExecutorAgent.executeBatch (src/agents/executor.ts:161:34)
      at ExecutorAgent.execute (src/agents/executor.ts:55:39)
      at Object.<anonymous> (src/tests/integration/agents/executor.integration.test.ts:147:23)

  console.log
    [ExecutorAgent] Executing 1 steps in parallel

      at ExecutorAgent.execute (src/agents/executor.ts:52:15)

  console.log
    [ExecutorAgent] Executing step 2: contaminants/list

      at ExecutorAgent.executeStep (src/agents/executor.ts:177:13)
          at Array.map (<anonymous>)

  console.error
    [ExecutorAgent] Step 2 (contaminants/list) failed: Tool not found: contaminants/list

      202 |
      203 |     } catch (error: any) {
    > 204 |       console.error(`[ExecutorAgent] Step ${index} (${step.tool}) failed:`, error.message);
          |               ^
      205 |
      206 |       return {
      207 |         success: false,

      at ExecutorAgent.executeStep (src/agents/executor.ts:204:15)
      at src/agents/executor.ts:166:19
          at Array.map (<anonymous>)
      at ExecutorAgent.executeBatch (src/agents/executor.ts:161:34)
      at ExecutorAgent.execute (src/agents/executor.ts:55:39)
      at Object.<anonymous> (src/tests/integration/agents/executor.integration.test.ts:147:23)

  console.log
    [ExecutorAgent] Plan execution complete. 3 results

      at ExecutorAgent.execute (src/agents/executor.ts:79:13)

  console.log
    [ExecutorAgent] Executing plan with 2 steps

      at ExecutorAgent.execute (src/agents/executor.ts:35:13)

  console.log
    [ExecutorAgent] Executing 1 steps in parallel

      at ExecutorAgent.execute (src/agents/executor.ts:52:15)

  console.log
    [ExecutorAgent] Executing step 0: facilities/list

      at ExecutorAgent.executeStep (src/agents/executor.ts:177:13)
          at Array.map (<anonymous>)

  console.error
    [ExecutorAgent] Step 0 (facilities/list) failed: Tool not found: facilities/list

      202 |
      203 |     } catch (error: any) {
    > 204 |       console.error(`[ExecutorAgent] Step ${index} (${step.tool}) failed:`, error.message);
          |               ^
      205 |
      206 |       return {
      207 |         success: false,

      at ExecutorAgent.executeStep (src/agents/executor.ts:204:15)
      at src/agents/executor.ts:166:19
          at Array.map (<anonymous>)
      at ExecutorAgent.executeBatch (src/agents/executor.ts:161:34)
      at ExecutorAgent.execute (src/agents/executor.ts:55:39)
      at Object.<anonymous> (src/tests/integration/agents/executor.integration.test.ts:174:38)

  console.log
    [ExecutorAgent] Executing 1 steps in parallel

      at ExecutorAgent.execute (src/agents/executor.ts:52:15)

  console.log
    [ExecutorAgent] Executing step 1: shipments/list

      at ExecutorAgent.executeStep (src/agents/executor.ts:177:13)
          at Array.map (<anonymous>)

  console.error
    [ExecutorAgent] Step 1 (shipments/list) failed: Tool not found: shipments/list

      202 |
      203 |     } catch (error: any) {
    > 204 |       console.error(`[ExecutorAgent] Step ${index} (${step.tool}) failed:`, error.message);
          |               ^
      205 |
      206 |       return {
      207 |         success: false,

      at ExecutorAgent.executeStep (src/agents/executor.ts:204:15)
      at src/agents/executor.ts:166:19
          at Array.map (<anonymous>)
      at ExecutorAgent.executeBatch (src/agents/executor.ts:161:34)
      at ExecutorAgent.execute (src/agents/executor.ts:55:39)
      at Object.<anonymous> (src/tests/integration/agents/executor.integration.test.ts:174:23)

  console.log
    [ExecutorAgent] Plan execution complete. 2 results

      at ExecutorAgent.execute (src/agents/executor.ts:79:13)

  console.log
    Error recovery results: [
      { success: false, error: 'Tool not found: facilities/list' },
      { success: false, error: 'Tool not found: shipments/list' }
    ]

      at Object.<anonymous> (src/tests/integration/agents/executor.integration.test.ts:181:15)

  console.log
    [ExecutorAgent] Executing plan with 1 steps

      at ExecutorAgent.execute (src/agents/executor.ts:35:13)

  console.log
    [ExecutorAgent] Executing 1 steps in parallel

      at ExecutorAgent.execute (src/agents/executor.ts:52:15)

  console.log
    [ExecutorAgent] Executing step 0: shipments/list

      at ExecutorAgent.executeStep (src/agents/executor.ts:177:13)
          at Array.map (<anonymous>)

  console.error
    [ExecutorAgent] Step 0 (shipments/list) failed: Tool not found: shipments/list

      202 |
      203 |     } catch (error: any) {
    > 204 |       console.error(`[ExecutorAgent] Step ${index} (${step.tool}) failed:`, error.message);
          |               ^
      205 |
      206 |       return {
      207 |         success: false,

      at ExecutorAgent.executeStep (src/agents/executor.ts:204:15)
      at src/agents/executor.ts:166:19
          at Array.map (<anonymous>)
      at ExecutorAgent.executeBatch (src/agents/executor.ts:161:34)
      at ExecutorAgent.execute (src/agents/executor.ts:55:39)
      at Object.<anonymous> (src/tests/integration/agents/executor.integration.test.ts:196:42)

  console.log
    [ExecutorAgent] Plan execution complete. 1 results

      at ExecutorAgent.execute (src/agents/executor.ts:79:13)

  console.log
    Timeout handling: { success: false, duration: 5 }

      at Object.<anonymous> (src/tests/integration/agents/executor.integration.test.ts:203:15)

  console.log
    [ExecutorAgent] Executing plan with 1 steps

      at ExecutorAgent.execute (src/agents/executor.ts:35:13)

  console.log
    [ExecutorAgent] Executing 1 steps in parallel

      at ExecutorAgent.execute (src/agents/executor.ts:52:15)

  console.log
    [ExecutorAgent] Executing step 0: shipments/list

      at ExecutorAgent.executeStep (src/agents/executor.ts:177:13)
          at Array.map (<anonymous>)

  console.error
    [ExecutorAgent] Step 0 (shipments/list) failed: Tool not found: shipments/list

      202 |
      203 |     } catch (error: any) {
    > 204 |       console.error(`[ExecutorAgent] Step ${index} (${step.tool}) failed:`, error.message);
          |               ^
      205 |
      206 |       return {
      207 |         success: false,

      at ExecutorAgent.executeStep (src/agents/executor.ts:204:15)
      at src/agents/executor.ts:166:19
          at Array.map (<anonymous>)
      at ExecutorAgent.executeBatch (src/agents/executor.ts:161:34)
      at ExecutorAgent.execute (src/agents/executor.ts:55:39)
      at Object.<anonymous> (src/tests/integration/agents/executor.integration.test.ts:213:38)

  console.log
    [ExecutorAgent] Plan execution complete. 1 results

      at ExecutorAgent.execute (src/agents/executor.ts:79:13)

  console.log
    [ExecutorAgent] Executing plan with 2 steps

      at ExecutorAgent.execute (src/agents/executor.ts:35:13)

  console.log
    [ExecutorAgent] Executing 1 steps in parallel

      at ExecutorAgent.execute (src/agents/executor.ts:52:15)

  console.log
    [ExecutorAgent] Executing step 0: shipments/list

      at ExecutorAgent.executeStep (src/agents/executor.ts:177:13)
          at Array.map (<anonymous>)

  console.error
    [ExecutorAgent] Step 0 (shipments/list) failed: Tool not found: shipments/list

      202 |
      203 |     } catch (error: any) {
    > 204 |       console.error(`[ExecutorAgent] Step ${index} (${step.tool}) failed:`, error.message);
          |               ^
      205 |
      206 |       return {
      207 |         success: false,

      at ExecutorAgent.executeStep (src/agents/executor.ts:204:15)
      at src/agents/executor.ts:166:19
          at Array.map (<anonymous>)
      at ExecutorAgent.executeBatch (src/agents/executor.ts:161:34)
      at ExecutorAgent.execute (src/agents/executor.ts:55:39)
      at Object.<anonymous> (src/tests/integration/agents/executor.integration.test.ts:241:38)

  console.log
    [ExecutorAgent] Executing 1 steps in parallel

      at ExecutorAgent.execute (src/agents/executor.ts:52:15)

  console.log
    [ExecutorAgent] Executing step 1: facilities/get

      at ExecutorAgent.executeStep (src/agents/executor.ts:177:13)
          at Array.map (<anonymous>)

  console.error
    [ExecutorAgent] Step 1 (facilities/get) failed: Tool not found: facilities/get

      202 |
      203 |     } catch (error: any) {
    > 204 |       console.error(`[ExecutorAgent] Step ${index} (${step.tool}) failed:`, error.message);
          |               ^
      205 |
      206 |       return {
      207 |         success: false,

      at ExecutorAgent.executeStep (src/agents/executor.ts:204:15)
      at src/agents/executor.ts:166:19
          at Array.map (<anonymous>)
      at ExecutorAgent.executeBatch (src/agents/executor.ts:161:34)
      at ExecutorAgent.execute (src/agents/executor.ts:55:39)
      at Object.<anonymous> (src/tests/integration/agents/executor.integration.test.ts:241:23)

  console.log
    [ExecutorAgent] Plan execution complete. 2 results

      at ExecutorAgent.execute (src/agents/executor.ts:79:13)

  console.log
    [ExecutorAgent] Executing plan with 3 steps

      at ExecutorAgent.execute (src/agents/executor.ts:35:13)

  console.log
    [ExecutorAgent] Executing 3 steps in parallel

      at ExecutorAgent.execute (src/agents/executor.ts:52:15)

  console.log
    [ExecutorAgent] Executing step 0: shipments/list

      at ExecutorAgent.executeStep (src/agents/executor.ts:177:13)
          at Array.map (<anonymous>)

  console.error
    [ExecutorAgent] Step 0 (shipments/list) failed: Tool not found: shipments/list

      202 |
      203 |     } catch (error: any) {
    > 204 |       console.error(`[ExecutorAgent] Step ${index} (${step.tool}) failed:`, error.message);
          |               ^
      205 |
      206 |       return {
      207 |         success: false,

      at ExecutorAgent.executeStep (src/agents/executor.ts:204:15)
      at src/agents/executor.ts:166:19
          at Array.map (<anonymous>)
      at ExecutorAgent.executeBatch (src/agents/executor.ts:161:34)
      at ExecutorAgent.execute (src/agents/executor.ts:55:39)
      at Object.<anonymous> (src/tests/integration/agents/executor.integration.test.ts:262:38)

  console.log
    [ExecutorAgent] Executing step 1: facilities/list

      at ExecutorAgent.executeStep (src/agents/executor.ts:177:13)
          at Array.map (<anonymous>)

  console.error
    [ExecutorAgent] Step 1 (facilities/list) failed: Tool not found: facilities/list

      202 |
      203 |     } catch (error: any) {
    > 204 |       console.error(`[ExecutorAgent] Step ${index} (${step.tool}) failed:`, error.message);
          |               ^
      205 |
      206 |       return {
      207 |         success: false,

      at ExecutorAgent.executeStep (src/agents/executor.ts:204:15)
      at src/agents/executor.ts:166:19
          at Array.map (<anonymous>)
      at ExecutorAgent.executeBatch (src/agents/executor.ts:161:34)
      at ExecutorAgent.execute (src/agents/executor.ts:55:39)
      at Object.<anonymous> (src/tests/integration/agents/executor.integration.test.ts:262:38)

  console.log
    [ExecutorAgent] Executing step 2: inspections/list

      at ExecutorAgent.executeStep (src/agents/executor.ts:177:13)
          at Array.map (<anonymous>)

  console.error
    [ExecutorAgent] Step 2 (inspections/list) failed: Tool not found: inspections/list

      202 |
      203 |     } catch (error: any) {
    > 204 |       console.error(`[ExecutorAgent] Step ${index} (${step.tool}) failed:`, error.message);
          |               ^
      205 |
      206 |       return {
      207 |         success: false,

      at ExecutorAgent.executeStep (src/agents/executor.ts:204:15)
      at src/agents/executor.ts:166:19
          at Array.map (<anonymous>)
      at ExecutorAgent.executeBatch (src/agents/executor.ts:161:34)
      at ExecutorAgent.execute (src/agents/executor.ts:55:39)
      at Object.<anonymous> (src/tests/integration/agents/executor.integration.test.ts:262:38)

  console.log
    [ExecutorAgent] Plan execution complete. 3 results

      at ExecutorAgent.execute (src/agents/executor.ts:79:13)

  console.log
    [ExecutorAgent] Executing plan with 3 steps

      at ExecutorAgent.execute (src/agents/executor.ts:35:13)

  console.log
    [ExecutorAgent] Executing 2 steps in parallel

      at ExecutorAgent.execute (src/agents/executor.ts:52:15)

  console.log
    [ExecutorAgent] Executing step 0: facilities/list

      at ExecutorAgent.executeStep (src/agents/executor.ts:177:13)
          at Array.map (<anonymous>)

  console.error
    [ExecutorAgent] Step 0 (facilities/list) failed: Tool not found: facilities/list

      202 |
      203 |     } catch (error: any) {
    > 204 |       console.error(`[ExecutorAgent] Step ${index} (${step.tool}) failed:`, error.message);
          |               ^
      205 |
      206 |       return {
      207 |         success: false,

      at ExecutorAgent.executeStep (src/agents/executor.ts:204:15)
      at src/agents/executor.ts:166:19
          at Array.map (<anonymous>)
      at ExecutorAgent.executeBatch (src/agents/executor.ts:161:34)
      at ExecutorAgent.execute (src/agents/executor.ts:55:39)
      at Object.<anonymous> (src/tests/integration/agents/executor.integration.test.ts:287:38)

  console.log
    [ExecutorAgent] Executing step 1: shipments/list

      at ExecutorAgent.executeStep (src/agents/executor.ts:177:13)
          at Array.map (<anonymous>)

  console.error
    [ExecutorAgent] Step 1 (shipments/list) failed: Tool not found: shipments/list

      202 |
      203 |     } catch (error: any) {
    > 204 |       console.error(`[ExecutorAgent] Step ${index} (${step.tool}) failed:`, error.message);
          |               ^
      205 |
      206 |       return {
      207 |         success: false,

      at ExecutorAgent.executeStep (src/agents/executor.ts:204:15)
      at src/agents/executor.ts:166:19
          at Array.map (<anonymous>)
      at ExecutorAgent.executeBatch (src/agents/executor.ts:161:34)
      at ExecutorAgent.execute (src/agents/executor.ts:55:39)
      at Object.<anonymous> (src/tests/integration/agents/executor.integration.test.ts:287:38)

  console.log
    [ExecutorAgent] Executing 1 steps in parallel

      at ExecutorAgent.execute (src/agents/executor.ts:52:15)

  console.log
    [ExecutorAgent] Executing step 2: contaminants/list

      at ExecutorAgent.executeStep (src/agents/executor.ts:177:13)
          at Array.map (<anonymous>)

  console.error
    [ExecutorAgent] Step 2 (contaminants/list) failed: Tool not found: contaminants/list

      202 |
      203 |     } catch (error: any) {
    > 204 |       console.error(`[ExecutorAgent] Step ${index} (${step.tool}) failed:`, error.message);
          |               ^
      205 |
      206 |       return {
      207 |         success: false,

      at ExecutorAgent.executeStep (src/agents/executor.ts:204:15)
      at src/agents/executor.ts:166:19
          at Array.map (<anonymous>)
      at ExecutorAgent.executeBatch (src/agents/executor.ts:161:34)
      at ExecutorAgent.execute (src/agents/executor.ts:55:39)
      at Object.<anonymous> (src/tests/integration/agents/executor.integration.test.ts:287:23)

  console.log
    [ExecutorAgent] Plan execution complete. 3 results

      at ExecutorAgent.execute (src/agents/executor.ts:79:13)

  console.log
    Mixed execution: [
      { success: false, tool: 'facilities/list' },
      { success: false, tool: 'shipments/list' },
      { success: false, tool: 'contaminants/list' }
    ]

      at Object.<anonymous> (src/tests/integration/agents/executor.integration.test.ts:292:15)

  console.log
    [ExecutorAgent] Executing plan with 4 steps

      at ExecutorAgent.execute (src/agents/executor.ts:35:13)

  console.log
    [ExecutorAgent] Executing 3 steps in parallel

      at ExecutorAgent.execute (src/agents/executor.ts:52:15)

  console.log
    [ExecutorAgent] Executing step 0: facilities/list

      at ExecutorAgent.executeStep (src/agents/executor.ts:177:13)
          at Array.map (<anonymous>)

  console.error
    [ExecutorAgent] Step 0 (facilities/list) failed: Tool not found: facilities/list

      202 |
      203 |     } catch (error: any) {
    > 204 |       console.error(`[ExecutorAgent] Step ${index} (${step.tool}) failed:`, error.message);
          |               ^
      205 |
      206 |       return {
      207 |         success: false,

      at ExecutorAgent.executeStep (src/agents/executor.ts:204:15)
      at src/agents/executor.ts:166:19
          at Array.map (<anonymous>)
      at ExecutorAgent.executeBatch (src/agents/executor.ts:161:34)
      at ExecutorAgent.execute (src/agents/executor.ts:55:39)
      at Object.<anonymous> (src/tests/integration/agents/executor.integration.test.ts:309:38)

  console.log
    [ExecutorAgent] Executing step 1: shipments/list

      at ExecutorAgent.executeStep (src/agents/executor.ts:177:13)
          at Array.map (<anonymous>)

  console.error
    [ExecutorAgent] Step 1 (shipments/list) failed: Tool not found: shipments/list

      202 |
      203 |     } catch (error: any) {
    > 204 |       console.error(`[ExecutorAgent] Step ${index} (${step.tool}) failed:`, error.message);
          |               ^
      205 |
      206 |       return {
      207 |         success: false,

      at ExecutorAgent.executeStep (src/agents/executor.ts:204:15)
      at src/agents/executor.ts:166:19
          at Array.map (<anonymous>)
      at ExecutorAgent.executeBatch (src/agents/executor.ts:161:34)
      at ExecutorAgent.execute (src/agents/executor.ts:55:39)
      at Object.<anonymous> (src/tests/integration/agents/executor.integration.test.ts:309:38)

  console.log
    [ExecutorAgent] Executing step 2: invalid-tool

      at ExecutorAgent.executeStep (src/agents/executor.ts:177:13)
          at Array.map (<anonymous>)

  console.error
    [ExecutorAgent] Step 2 (invalid-tool) failed: Tool not found: invalid-tool

      202 |
      203 |     } catch (error: any) {
    > 204 |       console.error(`[ExecutorAgent] Step ${index} (${step.tool}) failed:`, error.message);
          |               ^
      205 |
      206 |       return {
      207 |         success: false,

      at ExecutorAgent.executeStep (src/agents/executor.ts:204:15)
      at src/agents/executor.ts:166:19
          at Array.map (<anonymous>)
      at ExecutorAgent.executeBatch (src/agents/executor.ts:161:34)
      at ExecutorAgent.execute (src/agents/executor.ts:55:39)
      at Object.<anonymous> (src/tests/integration/agents/executor.integration.test.ts:309:38)

  console.log
    [ExecutorAgent] Executing 1 steps in parallel

      at ExecutorAgent.execute (src/agents/executor.ts:52:15)

  console.log
    [ExecutorAgent] Executing step 3: inspections/list

      at ExecutorAgent.executeStep (src/agents/executor.ts:177:13)
          at Array.map (<anonymous>)

  console.error
    [ExecutorAgent] Step 3 (inspections/list) failed: Tool not found: inspections/list

      202 |
      203 |     } catch (error: any) {
    > 204 |       console.error(`[ExecutorAgent] Step ${index} (${step.tool}) failed:`, error.message);
          |               ^
      205 |
      206 |       return {
      207 |         success: false,

      at ExecutorAgent.executeStep (src/agents/executor.ts:204:15)
      at src/agents/executor.ts:166:19
          at Array.map (<anonymous>)
      at ExecutorAgent.executeBatch (src/agents/executor.ts:161:34)
      at ExecutorAgent.execute (src/agents/executor.ts:55:39)
      at Object.<anonymous> (src/tests/integration/agents/executor.integration.test.ts:309:23)

  console.log
    [ExecutorAgent] Plan execution complete. 4 results

      at ExecutorAgent.execute (src/agents/executor.ts:79:13)

  console.log
    [ExecutorAgent] Executing plan with 2 steps

      at ExecutorAgent.execute (src/agents/executor.ts:35:13)

  console.log
    [ExecutorAgent] Executing 2 steps in parallel

      at ExecutorAgent.execute (src/agents/executor.ts:52:15)

  console.log
    [ExecutorAgent] Executing step 0: shipments/list

      at ExecutorAgent.executeStep (src/agents/executor.ts:177:13)
          at Array.map (<anonymous>)

  console.error
    [ExecutorAgent] Step 0 (shipments/list) failed: Tool not found: shipments/list

      202 |
      203 |     } catch (error: any) {
    > 204 |       console.error(`[ExecutorAgent] Step ${index} (${step.tool}) failed:`, error.message);
          |               ^
      205 |
      206 |       return {
      207 |         success: false,

      at ExecutorAgent.executeStep (src/agents/executor.ts:204:15)
      at src/agents/executor.ts:166:19
          at Array.map (<anonymous>)
      at ExecutorAgent.executeBatch (src/agents/executor.ts:161:34)
      at ExecutorAgent.execute (src/agents/executor.ts:55:39)
      at Object.<anonymous> (src/tests/integration/agents/executor.integration.test.ts:330:38)

  console.log
    [ExecutorAgent] Executing step 1: facilities/list

      at ExecutorAgent.executeStep (src/agents/executor.ts:177:13)
          at Array.map (<anonymous>)

  console.error
    [ExecutorAgent] Step 1 (facilities/list) failed: Tool not found: facilities/list

      202 |
      203 |     } catch (error: any) {
    > 204 |       console.error(`[ExecutorAgent] Step ${index} (${step.tool}) failed:`, error.message);
          |               ^
      205 |
      206 |       return {
      207 |         success: false,

      at ExecutorAgent.executeStep (src/agents/executor.ts:204:15)
      at src/agents/executor.ts:166:19
          at Array.map (<anonymous>)
      at ExecutorAgent.executeBatch (src/agents/executor.ts:161:34)
      at ExecutorAgent.execute (src/agents/executor.ts:55:39)
      at Object.<anonymous> (src/tests/integration/agents/executor.integration.test.ts:330:38)

  console.log
    [ExecutorAgent] Plan execution complete. 2 results

      at ExecutorAgent.execute (src/agents/executor.ts:79:13)

  console.log
    Metadata tracking: [
      { tool: 'shipments/list', execTime: 2 },
      { tool: 'facilities/list', execTime: 3 }
    ]

      at Object.<anonymous> (src/tests/integration/agents/executor.integration.test.ts:342:15)

  console.log
    [ExecutorAgent] Executing plan with 3 steps

      at ExecutorAgent.execute (src/agents/executor.ts:35:13)

  console.log
    [ExecutorAgent] Executing 3 steps in parallel

      at ExecutorAgent.execute (src/agents/executor.ts:52:15)

  console.log
    [ExecutorAgent] Executing step 0: shipments/list

      at ExecutorAgent.executeStep (src/agents/executor.ts:177:13)
          at Array.map (<anonymous>)

  console.error
    [ExecutorAgent] Step 0 (shipments/list) failed: Tool not found: shipments/list

      202 |
      203 |     } catch (error: any) {
    > 204 |       console.error(`[ExecutorAgent] Step ${index} (${step.tool}) failed:`, error.message);
          |               ^
      205 |
      206 |       return {
      207 |         success: false,

      at ExecutorAgent.executeStep (src/agents/executor.ts:204:15)
      at src/agents/executor.ts:166:19
          at Array.map (<anonymous>)
      at ExecutorAgent.executeBatch (src/agents/executor.ts:161:34)
      at ExecutorAgent.execute (src/agents/executor.ts:55:39)
      at Object.<anonymous> (src/tests/integration/agents/executor.integration.test.ts:351:22)

  console.log
    [ExecutorAgent] Executing step 1: facilities/list

      at ExecutorAgent.executeStep (src/agents/executor.ts:177:13)
          at Array.map (<anonymous>)

  console.error
    [ExecutorAgent] Step 1 (facilities/list) failed: Tool not found: facilities/list

      202 |
      203 |     } catch (error: any) {
    > 204 |       console.error(`[ExecutorAgent] Step ${index} (${step.tool}) failed:`, error.message);
          |               ^
      205 |
      206 |       return {
      207 |         success: false,

      at ExecutorAgent.executeStep (src/agents/executor.ts:204:15)
      at src/agents/executor.ts:166:19
          at Array.map (<anonymous>)
      at ExecutorAgent.executeBatch (src/agents/executor.ts:161:34)
      at ExecutorAgent.execute (src/agents/executor.ts:55:39)
      at Object.<anonymous> (src/tests/integration/agents/executor.integration.test.ts:351:22)

  console.log
    [ExecutorAgent] Executing step 2: inspections/list

      at ExecutorAgent.executeStep (src/agents/executor.ts:177:13)
          at Array.map (<anonymous>)

  console.error
    [ExecutorAgent] Step 2 (inspections/list) failed: Tool not found: inspections/list

      202 |
      203 |     } catch (error: any) {
    > 204 |       console.error(`[ExecutorAgent] Step ${index} (${step.tool}) failed:`, error.message);
          |               ^
      205 |
      206 |       return {
      207 |         success: false,

      at ExecutorAgent.executeStep (src/agents/executor.ts:204:15)
      at src/agents/executor.ts:166:19
          at Array.map (<anonymous>)
      at ExecutorAgent.executeBatch (src/agents/executor.ts:161:34)
      at ExecutorAgent.execute (src/agents/executor.ts:55:39)
      at Object.<anonymous> (src/tests/integration/agents/executor.integration.test.ts:351:22)

  console.log
    [ExecutorAgent] Plan execution complete. 3 results

      at ExecutorAgent.execute (src/agents/executor.ts:79:13)

  console.log
    Performance comparison: {
      parallelDuration: 15,
      note: 'Parallel should be faster than sequential'
    }

      at Object.<anonymous> (src/tests/integration/agents/executor.integration.test.ts:360:15)

  console.log
    [dotenv@17.2.3] injecting env (39) from .env -- tip: ‚öôÔ∏è  suppress all logs with { quiet: true }

      at _log (../../.yarn/berry/cache/dotenv-npm-17.2.3-2f9ab93ea1-10c0.zip/node_modules/dotenv/lib/main.js:142:11)

  console.log
    [dotenv@17.2.3] injecting env (39) from .env -- tip: üîë add access controls to secrets: https://dotenvx.com/ops

      at _log (../../.yarn/berry/cache/dotenv-npm-17.2.3-2f9ab93ea1-10c0.zip/node_modules/dotenv/lib/main.js:142:11)

  console.log
    [SummarizerAgent] Generating summary...

      at SummarizerAgent.summarize (src/agents/summarizer.ts:39:13)

  console.log
    [LLMProvider] Using openai provider

      at LLMProvider.generate (src/shared/llm/provider.ts:42:17)

  console.log
    [AnalyzerAgent] Analyzing 1 tool results

      at AnalyzerAgent.analyze (src/agents/analyzer.ts:33:13)

  console.log
    [AnalyzerAgent] Generating insights...

      at AnalyzerAgent.generateInsights (src/agents/analyzer.ts:85:13)

FAIL src/tests/integration/agents/executor.integration.test.ts
  ExecutorAgent Integration
    Simple Execution with Real API
      ‚úï should execute shipments query (21 ms)
      ‚úï should execute facilities query (16 ms)
    Parallel Execution with Real API
      ‚úï should execute independent queries in parallel (17 ms)
    Sequential Execution with Dependencies
      ‚úï should execute dependent steps in order (9 ms)
    Error Handling
      ‚úì should handle tool not found (5 ms)
    Complex Dependency Chains
      ‚úï should execute 3-level dependency chain with real API (15 ms)
      ‚úì should handle error recovery in dependency chain (11 ms)
      ‚úì should handle timeout for slow API responses (6 ms)
      ‚úï should resolve template with nested data ${step[0].data[0].facility.id} (5 ms)
      ‚úï should resolve template with array mapping ${step[0].data.*.id} (7 ms)
      ‚úï should verify parallel execution is faster than sequential (15 ms)
      ‚úì should handle mixed parallel and sequential execution (9 ms)
      ‚úï should handle partial failures in dependency chain (26 ms)
      ‚úì should track metadata across all steps (9 ms)
      ‚úì should measure performance difference: parallel vs sequential (16 ms)

  ‚óè ExecutorAgent Integration ‚Ä∫ Simple Execution with Real API ‚Ä∫ should execute shipments query

    expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

      36 |
      37 |       expect(results).toHaveLength(1);
    > 38 |       expect(results[0].success).toBe(true);
         |                                  ^
      39 |       expect(results[0].data).toBeDefined();
      40 |       expect(Array.isArray(results[0].data)).toBe(true);
      41 |     }, 30000);

      at Object.<anonymous> (src/tests/integration/agents/executor.integration.test.ts:38:34)

  ‚óè ExecutorAgent Integration ‚Ä∫ Simple Execution with Real API ‚Ä∫ should execute facilities query

    expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

      54 |
      55 |       expect(results).toHaveLength(1);
    > 56 |       expect(results[0].success).toBe(true);
         |                                  ^
      57 |       expect(Array.isArray(results[0].data)).toBe(true);
      58 |     }, 30000);
      59 |   });

      at Object.<anonymous> (src/tests/integration/agents/executor.integration.test.ts:56:34)

  ‚óè ExecutorAgent Integration ‚Ä∫ Parallel Execution with Real API ‚Ä∫ should execute independent queries in parallel

    expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

      74 |
      75 |       expect(results).toHaveLength(3);
    > 76 |       expect(results.every(r => r.success)).toBe(true);
         |                                             ^
      77 |
      78 |       // Should complete faster than sequential
      79 |       console.log('Parallel execution took:', duration, 'ms');

      at Object.<anonymous> (src/tests/integration/agents/executor.integration.test.ts:76:45)

  ‚óè ExecutorAgent Integration ‚Ä∫ Sequential Execution with Dependencies ‚Ä∫ should execute dependent steps in order

    expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

      103 |       
      104 |       // First step should succeed
    > 105 |       expect(results[0].success).toBe(true);
          |                                  ^
      106 |       expect(Array.isArray(results[0].data)).toBe(true);
      107 |
      108 |       // Second step may succeed or fail depending on data

      at Object.<anonymous> (src/tests/integration/agents/executor.integration.test.ts:105:34)

  ‚óè ExecutorAgent Integration ‚Ä∫ Complex Dependency Chains ‚Ä∫ should execute 3-level dependency chain with real API

    expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

      148 |
      149 |       expect(results).toHaveLength(3);
    > 150 |       expect(results[0].success).toBe(true);
          |                                  ^
      151 |       
      152 |       // Verify execution order and dependencies
      153 |       expect(results[0].metadata.timestamp).toBeDefined();

      at Object.<anonymous> (src/tests/integration/agents/executor.integration.test.ts:150:34)

  ‚óè ExecutorAgent Integration ‚Ä∫ Complex Dependency Chains ‚Ä∫ should resolve template with nested data ${step[0].data[0].facility.id}

    expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

      214 |
      215 |       expect(results).toHaveLength(1);
    > 216 |       expect(results[0].success).toBe(true);
          |                                  ^
      217 |       
      218 |       // Check data structure
      219 |       if (results[0].data && Array.isArray(results[0].data) && results[0].data.length > 0) {

      at Object.<anonymous> (src/tests/integration/agents/executor.integration.test.ts:216:34)

  ‚óè ExecutorAgent Integration ‚Ä∫ Complex Dependency Chains ‚Ä∫ should resolve template with array mapping ${step[0].data.*.id}

    expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

      242 |
      243 |       expect(results).toHaveLength(2);
    > 244 |       expect(results[0].success).toBe(true);
          |                                  ^
      245 |       
      246 |       console.log('Array mapping test:', {
      247 |         step0Success: results[0].success,

      at Object.<anonymous> (src/tests/integration/agents/executor.integration.test.ts:244:34)

  ‚óè ExecutorAgent Integration ‚Ä∫ Complex Dependency Chains ‚Ä∫ should verify parallel execution is faster than sequential

    expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

      264 |
      265 |       expect(results).toHaveLength(3);
    > 266 |       expect(results.every(r => r.success)).toBe(true);
          |                                             ^
      267 |       
      268 |       // Parallel execution should be reasonably fast
      269 |       expect(parallelDuration).toBeLessThan(10000);

      at Object.<anonymous> (src/tests/integration/agents/executor.integration.test.ts:266:45)

  ‚óè ExecutorAgent Integration ‚Ä∫ Complex Dependency Chains ‚Ä∫ should handle partial failures in dependency chain

    expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

      312 |       
      313 |       // First two and fourth should succeed, third should fail
    > 314 |       expect(results[0].success).toBe(true);
          |                                  ^
      315 |       expect(results[1].success).toBe(true);
      316 |       expect(results[2].success).toBe(false);
      317 |       expect(results[3].success).toBe(true);

      at Object.<anonymous> (src/tests/integration/agents/executor.integration.test.ts:314:34)

  console.log
    [AnalyzerAgent] Extracting entities...

      at AnalyzerAgent.extractEntities (src/agents/analyzer.ts:311:13)

  console.log
    [AnalyzerAgent] Detecting anomalies...

      at AnalyzerAgent.detectAnomalies (src/agents/analyzer.ts:373:13)

  console.log
    [AnalyzerAgent] Analyzing 1 tool results

      at AnalyzerAgent.analyze (src/agents/analyzer.ts:33:13)

  console.log
    [AnalyzerAgent] Generating insights...

      at AnalyzerAgent.generateInsights (src/agents/analyzer.ts:85:13)

  console.log
    [AnalyzerAgent] Extracting entities...

      at AnalyzerAgent.extractEntities (src/agents/analyzer.ts:311:13)

  console.log
    [AnalyzerAgent] Detecting anomalies...

      at AnalyzerAgent.detectAnomalies (src/agents/analyzer.ts:373:13)

  console.log
    [AnalyzerAgent] Analyzing 1 tool results

      at AnalyzerAgent.analyze (src/agents/analyzer.ts:33:13)

  console.log
    [AnalyzerAgent] Generating insights...

      at AnalyzerAgent.generateInsights (src/agents/analyzer.ts:85:13)

  console.log
    [AnalyzerAgent] Extracting entities...

      at AnalyzerAgent.extractEntities (src/agents/analyzer.ts:311:13)

  console.log
    [AnalyzerAgent] Detecting anomalies...

      at AnalyzerAgent.detectAnomalies (src/agents/analyzer.ts:373:13)

  console.log
    [LLMProvider] Using openai provider

      at LLMProvider.generate (src/shared/llm/provider.ts:42:17)

  console.log
    [dotenv@17.2.3] injecting env (39) from .env -- tip: üë• sync secrets across teammates & machines: https://dotenvx.com/ops

      at _log (../../.yarn/berry/cache/dotenv-npm-17.2.3-2f9ab93ea1-10c0.zip/node_modules/dotenv/lib/main.js:142:11)

  console.log
    [PlannerAgent] Planning for query: Get shipments from last week

      at PlannerAgent.plan (src/agents/planner.ts:60:13)

  console.log
    [LLMProvider] Using openai provider

      at LLMProvider.generate (src/shared/llm/provider.ts:42:17)

PASS src/tests/integration/conversation/dialog.integration.test.ts
  Conversational Dialog Integration
    Scenario: Ambiguous Query ‚Üí Clarification ‚Üí Response
      ‚úì should handle clarification flow (2 ms)
    Scenario: Uncertain Result ‚Üí Express Confidence
      ‚úì should express uncertainty for low confidence results (1 ms)
      ‚úì should express confidence for high-quality results
    Scenario: Multi-Step Task with Progress
      ‚úì should track and report progress through workflow (1 ms)
    Scenario: Follow-Up Questions
      ‚úì should detect and handle follow-ups (1 ms)
    Scenario: Yes/No Confirmation
      ‚úì should handle confirmation flow (1 ms)
      ‚úì should handle negative confirmation

PASS src/tests/integration/workflow/execution.integration.test.ts
  Workflow Execution Integration
    End-to-End Workflow
      ‚úì should execute a multi-step workflow
      ‚úì should handle conditional branching
    Workflow with Checkpointing
      ‚úì should create checkpoints during execution
      ‚úì should resume from checkpoint (1 ms)

FAIL src/tests/integration/memory/pinecone.integration.test.ts
  ‚óè Test suite failed to run

    Jest encountered an unexpected token

    Jest failed to parse a file. This happens e.g. when your code or its dependencies use non-standard JavaScript syntax, or when Jest is not configured to support such syntax.

    Out of the box Jest supports Babel, which will be used to transform your files into valid JS based on your Babel configuration.

    By default "node_modules" folder is ignored by transformers.

    Here's what you can do:
     ‚Ä¢ If you are trying to use ECMAScript Modules, see https://jestjs.io/docs/ecmascript-modules for how to enable it.
     ‚Ä¢ If you are trying to use TypeScript, see https://jestjs.io/docs/getting-started#using-typescript
     ‚Ä¢ To have some of your "node_modules" files transformed, you can specify a custom "transformIgnorePatterns" in your config.
     ‚Ä¢ If you need a custom transformation, specify a "transform" option in your config.
     ‚Ä¢ If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the "moduleNameMapper" config option.

    You'll find more details and examples of these config options in the docs:
    https://jestjs.io/docs/configuration
    For information about custom transformations, see:
    https://jestjs.io/docs/code-transformation

    Details:

    /Users/yab/Projects/clear-ai-v2/src/tests/integration/memory/pinecone.integration.test.ts:32
    const ollamaAvailable = await isOllamaAvailable();
                            ^^^^^

    SyntaxError: await is only valid in async functions and the top level bodies of modules

      at Runtime.createScriptFromCode (../../.yarn/berry/cache/jest-runtime-npm-30.2.0-d80efc730d-10c0.zip/node_modules/jest-runtime/build/index.js:1318:40)

FAIL src/tests/integration/memory/neo4j.integration.test.ts
  ‚óè Test suite failed to run

    Jest encountered an unexpected token

    Jest failed to parse a file. This happens e.g. when your code or its dependencies use non-standard JavaScript syntax, or when Jest is not configured to support such syntax.

    Out of the box Jest supports Babel, which will be used to transform your files into valid JS based on your Babel configuration.

    By default "node_modules" folder is ignored by transformers.

    Here's what you can do:
     ‚Ä¢ If you are trying to use ECMAScript Modules, see https://jestjs.io/docs/ecmascript-modules for how to enable it.
     ‚Ä¢ If you are trying to use TypeScript, see https://jestjs.io/docs/getting-started#using-typescript
     ‚Ä¢ To have some of your "node_modules" files transformed, you can specify a custom "transformIgnorePatterns" in your config.
     ‚Ä¢ If you need a custom transformation, specify a "transform" option in your config.
     ‚Ä¢ If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the "moduleNameMapper" config option.

    You'll find more details and examples of these config options in the docs:
    https://jestjs.io/docs/configuration
    For information about custom transformations, see:
    https://jestjs.io/docs/code-transformation

    Details:

    /Users/yab/Projects/clear-ai-v2/src/tests/integration/memory/neo4j.integration.test.ts:30
    const neo4jAvailable = await isNeo4jAvailable();
                           ^^^^^

    SyntaxError: await is only valid in async functions and the top level bodies of modules

      at Runtime.createScriptFromCode (../../.yarn/berry/cache/jest-runtime-npm-30.2.0-d80efc730d-10c0.zip/node_modules/jest-runtime/build/index.js:1318:40)

FAIL src/tests/integration/memory/manager.integration.test.ts
  ‚óè Test suite failed to run

    Jest encountered an unexpected token

    Jest failed to parse a file. This happens e.g. when your code or its dependencies use non-standard JavaScript syntax, or when Jest is not configured to support such syntax.

    Out of the box Jest supports Babel, which will be used to transform your files into valid JS based on your Babel configuration.

    By default "node_modules" folder is ignored by transformers.

    Here's what you can do:
     ‚Ä¢ If you are trying to use ECMAScript Modules, see https://jestjs.io/docs/ecmascript-modules for how to enable it.
     ‚Ä¢ If you are trying to use TypeScript, see https://jestjs.io/docs/getting-started#using-typescript
     ‚Ä¢ To have some of your "node_modules" files transformed, you can specify a custom "transformIgnorePatterns" in your config.
     ‚Ä¢ If you need a custom transformation, specify a "transform" option in your config.
     ‚Ä¢ If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the "moduleNameMapper" config option.

    You'll find more details and examples of these config options in the docs:
    https://jestjs.io/docs/configuration
    For information about custom transformations, see:
    https://jestjs.io/docs/code-transformation

    Details:

    /Users/yab/Projects/clear-ai-v2/src/tests/integration/memory/manager.integration.test.ts:47
    const neo4jAvailable = await isNeo4jAvailable();
                           ^^^^^

    SyntaxError: await is only valid in async functions and the top level bodies of modules

      at Runtime.createScriptFromCode (../../.yarn/berry/cache/jest-runtime-npm-30.2.0-d80efc730d-10c0.zip/node_modules/jest-runtime/build/index.js:1318:40)

  console.log
    [dotenv@17.2.3] injecting env (39) from .env -- tip: üîê prevent building .env in docker: https://dotenvx.com/prebuild

      at _log (../../.yarn/berry/cache/dotenv-npm-17.2.3-2f9ab93ea1-10c0.zip/node_modules/dotenv/lib/main.js:142:11)

  console.log
    [dotenv@17.2.3] injecting env (39) from .env -- tip: üì° add observability to secrets: https://dotenvx.com/ops

      at _log (../../.yarn/berry/cache/dotenv-npm-17.2.3-2f9ab93ea1-10c0.zip/node_modules/dotenv/lib/main.js:142:11)

  console.error
    ‚úì Registered 30 comprehensive waste management tools:

      94 |   server.registerTool(new DatabaseResetTool(apiBaseUrl));
      95 |
    > 96 |   console.error("‚úì Registered 30 comprehensive waste management tools:");
         |           ^
      97 |   console.error("  - 20 CRUD operations (list/get/create/update/delete for 4 resources)");
      98 |   console.error("  - 4 Analytics tools");
      99 |   console.error("  - 5 Relationship tools");

      at registerAllTools (src/tools/index.ts:96:11)
      at Object.<anonymous> (src/tests/integration/agents/orchestrator.integration.test.ts:63:21)

  console.error
      - 20 CRUD operations (list/get/create/update/delete for 4 resources)

       95 |
       96 |   console.error("‚úì Registered 30 comprehensive waste management tools:");
    >  97 |   console.error("  - 20 CRUD operations (list/get/create/update/delete for 4 resources)");
          |           ^
       98 |   console.error("  - 4 Analytics tools");
       99 |   console.error("  - 5 Relationship tools");
      100 |   console.error("  - 1 Database management tool");

      at registerAllTools (src/tools/index.ts:97:11)
      at Object.<anonymous> (src/tests/integration/agents/orchestrator.integration.test.ts:63:21)

  console.error
      - 4 Analytics tools

       96 |   console.error("‚úì Registered 30 comprehensive waste management tools:");
       97 |   console.error("  - 20 CRUD operations (list/get/create/update/delete for 4 resources)");
    >  98 |   console.error("  - 4 Analytics tools");
          |           ^
       99 |   console.error("  - 5 Relationship tools");
      100 |   console.error("  - 1 Database management tool");
      101 | }

      at registerAllTools (src/tools/index.ts:98:11)
      at Object.<anonymous> (src/tests/integration/agents/orchestrator.integration.test.ts:63:21)

  console.error
    ‚úì Registered 30 comprehensive waste management tools:

      94 |   server.registerTool(new DatabaseResetTool(apiBaseUrl));
      95 |
    > 96 |   console.error("‚úì Registered 30 comprehensive waste management tools:");
         |           ^
      97 |   console.error("  - 20 CRUD operations (list/get/create/update/delete for 4 resources)");
      98 |   console.error("  - 4 Analytics tools");
      99 |   console.error("  - 5 Relationship tools");

      at registerAllTools (src/tools/index.ts:96:11)
      at Object.<anonymous> (src/tests/integration/agents/system.integration.test.ts:65:21)

  console.error
      - 5 Relationship tools

       97 |   console.error("  - 20 CRUD operations (list/get/create/update/delete for 4 resources)");
       98 |   console.error("  - 4 Analytics tools");
    >  99 |   console.error("  - 5 Relationship tools");
          |           ^
      100 |   console.error("  - 1 Database management tool");
      101 | }
      102 |

      at registerAllTools (src/tools/index.ts:99:11)
      at Object.<anonymous> (src/tests/integration/agents/orchestrator.integration.test.ts:63:21)

  console.error
      - 1 Database management tool

       98 |   console.error("  - 4 Analytics tools");
       99 |   console.error("  - 5 Relationship tools");
    > 100 |   console.error("  - 1 Database management tool");
          |           ^
      101 | }
      102 |
      103 | // Export all tools for testing

      at registerAllTools (src/tools/index.ts:100:11)
      at Object.<anonymous> (src/tests/integration/agents/orchestrator.integration.test.ts:63:21)

  console.error
      - 20 CRUD operations (list/get/create/update/delete for 4 resources)

       95 |
       96 |   console.error("‚úì Registered 30 comprehensive waste management tools:");
    >  97 |   console.error("  - 20 CRUD operations (list/get/create/update/delete for 4 resources)");
          |           ^
       98 |   console.error("  - 4 Analytics tools");
       99 |   console.error("  - 5 Relationship tools");
      100 |   console.error("  - 1 Database management tool");

      at registerAllTools (src/tools/index.ts:97:11)
      at Object.<anonymous> (src/tests/integration/agents/system.integration.test.ts:65:21)

  console.error
      - 4 Analytics tools

       96 |   console.error("‚úì Registered 30 comprehensive waste management tools:");
       97 |   console.error("  - 20 CRUD operations (list/get/create/update/delete for 4 resources)");
    >  98 |   console.error("  - 4 Analytics tools");
          |           ^
       99 |   console.error("  - 5 Relationship tools");
      100 |   console.error("  - 1 Database management tool");
      101 | }

      at registerAllTools (src/tools/index.ts:98:11)
      at Object.<anonymous> (src/tests/integration/agents/system.integration.test.ts:65:21)

  console.error
      - 5 Relationship tools

       97 |   console.error("  - 20 CRUD operations (list/get/create/update/delete for 4 resources)");
       98 |   console.error("  - 4 Analytics tools");
    >  99 |   console.error("  - 5 Relationship tools");
          |           ^
      100 |   console.error("  - 1 Database management tool");
      101 | }
      102 |

      at registerAllTools (src/tools/index.ts:99:11)
      at Object.<anonymous> (src/tests/integration/agents/system.integration.test.ts:65:21)

  console.error
      - 1 Database management tool

       98 |   console.error("  - 4 Analytics tools");
       99 |   console.error("  - 5 Relationship tools");
    > 100 |   console.error("  - 1 Database management tool");
          |           ^
      101 | }
      102 |
      103 | // Export all tools for testing

      at registerAllTools (src/tools/index.ts:100:11)
      at Object.<anonymous> (src/tests/integration/agents/system.integration.test.ts:65:21)

  console.log
    [OrchestratorAgent][81b6dc5e-e468-4201-8c6d-acb9298d8f59] Processing query: Get shipments from last week

      at OrchestratorAgent.handleQuery (src/agents/orchestrator.ts:45:13)

  console.log
    [OrchestratorAgent][81b6dc5e-e468-4201-8c6d-acb9298d8f59] Loaded context: {
      semantic: undefined,
      episodic: undefined,
      entities: [ 'temporal:week', 'entity:shipment' ]
    }

      at OrchestratorAgent.handleQuery (src/agents/orchestrator.ts:52:17)

  console.log
    [OrchestratorAgent][81b6dc5e-e468-4201-8c6d-acb9298d8f59] Planning...

      at OrchestratorAgent.handleQuery (src/agents/orchestrator.ts:56:15)

  console.log
    [PlannerAgent] Planning for query: Get shipments from last week

      at PlannerAgent.plan (src/agents/planner.ts:60:13)

  console.log
    [LLMProvider] Using openai provider

      at LLMProvider.generate (src/shared/llm/provider.ts:42:17)

  console.log
    [OrchestratorAgent][bea87ad9-d555-41b1-b3cf-dac066996e04] Processing query: Get me last week's shipments that got contaminants

      at OrchestratorAgent.handleQuery (src/agents/orchestrator.ts:45:13)

  console.log
    [OrchestratorAgent][bea87ad9-d555-41b1-b3cf-dac066996e04] Loaded context: {
      semantic: undefined,
      episodic: undefined,
      entities: [ 'temporal:week', 'entity:shipment' ]
    }

      at OrchestratorAgent.handleQuery (src/agents/orchestrator.ts:52:17)

  console.log
    [OrchestratorAgent][bea87ad9-d555-41b1-b3cf-dac066996e04] Planning...

      at OrchestratorAgent.handleQuery (src/agents/orchestrator.ts:56:15)

  console.log
    [PlannerAgent] Planning for query: Get me last week's shipments that got contaminants

      at PlannerAgent.plan (src/agents/planner.ts:60:13)

  console.log
    [LLMProvider] Using openai provider

      at LLMProvider.generate (src/shared/llm/provider.ts:42:17)

  console.log
    [LLMProvider] Using openai provider

      at LLMProvider.generate (src/shared/llm/provider.ts:42:17)

  console.error
    [LLMProvider] openai failed: 401 Incorrect API key provided: invalid-***********fail. You can find your API key at https://platform.openai.com/account/api-keys.

      43 |         return await adapter.generate(request);
      44 |       } catch (error: any) {
    > 45 |         console.error(`[LLMProvider] ${adapter.name} failed:`, error.message);
         |                 ^
      46 |         errors.push(error);
      47 |       }
      48 |     }

      at LLMProvider.generate (src/shared/llm/provider.ts:45:17)
      at Object.<anonymous> (src/tests/integration/llm/provider.integration.test.ts:93:22)

  console.log
    [LLMProvider] Using openai provider

      at LLMProvider.generate (src/shared/llm/provider.ts:42:17)

  console.log
    [LLMProvider] Using openai provider

      at LLMProvider.generate (src/shared/llm/provider.ts:42:17)

  console.log
    
    üìù Generated summary: Five contaminated shipments were identified during the analysis, indicating a high contamination rate of 50% among the shipments with a confidence level of 90%. No anomalies were detected in the data.

      at Object.<anonymous> (src/tests/integration/agents/summarizer.integration.test.ts:51:15)

  console.log
    [SummarizerAgent] Generating summary...

      at SummarizerAgent.summarize (src/agents/summarizer.ts:39:13)

  console.log
    [LLMProvider] Using openai provider

      at LLMProvider.generate (src/shared/llm/provider.ts:42:17)

  console.log
    [LLMProvider] openai is not available, skipping...

      at LLMProvider.generate (src/shared/llm/provider.ts:38:19)

  console.log
    [LLMProvider] Using openai provider

      at LLMProvider.generate (src/shared/llm/provider.ts:42:17)

  console.log
    [LLMProvider] Using openai provider

      at LLMProvider.generate (src/shared/llm/provider.ts:42:17)

  console.log
    [LLMProvider] Using openai provider

      at LLMProvider.generate (src/shared/llm/provider.ts:42:17)

  console.log
    [PlannerAgent] Plan generated successfully

      at PlannerAgent.plan (src/agents/planner.ts:98:17)

  console.log
    [OrchestratorAgent][bea87ad9-d555-41b1-b3cf-dac066996e04] Plan generated: {
      steps: [ { tool: 'shipments', params: [Object] } ],
      metadata: {
        query: "Get me last week's shipments that got contaminants",
        timestamp: '2022-02-21T10:00:00Z',
        estimated_duration_ms: 1500
      }
    }

      at OrchestratorAgent.handleQuery (src/agents/orchestrator.ts:58:15)

  console.log
    [OrchestratorAgent][bea87ad9-d555-41b1-b3cf-dac066996e04] Executing plan...

      at OrchestratorAgent.handleQuery (src/agents/orchestrator.ts:61:15)

  console.log
    [ExecutorAgent] Executing plan with 1 steps

      at ExecutorAgent.execute (src/agents/executor.ts:35:13)

  console.log
    [ExecutorAgent] Executing 1 steps in parallel

      at ExecutorAgent.execute (src/agents/executor.ts:52:15)

  console.log
    [ExecutorAgent] Executing step 0: shipments

      at ExecutorAgent.executeStep (src/agents/executor.ts:177:13)
          at Array.map (<anonymous>)

  console.error
    [ExecutorAgent] Step 0 (shipments) failed: Tool not found: shipments

      202 |
      203 |     } catch (error: any) {
    > 204 |       console.error(`[ExecutorAgent] Step ${index} (${step.tool}) failed:`, error.message);
          |               ^
      205 |
      206 |       return {
      207 |         success: false,

      at ExecutorAgent.executeStep (src/agents/executor.ts:204:15)
      at src/agents/executor.ts:166:19
          at Array.map (<anonymous>)
      at ExecutorAgent.executeBatch (src/agents/executor.ts:161:34)
      at ExecutorAgent.execute (src/agents/executor.ts:55:39)
      at OrchestratorAgent.handleQuery (src/agents/orchestrator.ts:62:43)
      at Object.<anonymous> (src/tests/integration/agents/system.integration.test.ts:89:24)

  console.log
    [ExecutorAgent] Plan execution complete. 1 results

      at ExecutorAgent.execute (src/agents/executor.ts:79:13)

  console.log
    [OrchestratorAgent][bea87ad9-d555-41b1-b3cf-dac066996e04] Execution complete. Results: 1

      at OrchestratorAgent.handleQuery (src/agents/orchestrator.ts:63:15)

  console.log
    [OrchestratorAgent][bea87ad9-d555-41b1-b3cf-dac066996e04] Analyzing results...

      at OrchestratorAgent.handleQuery (src/agents/orchestrator.ts:66:15)

  console.log
    [AnalyzerAgent] Analyzing 1 tool results

      at AnalyzerAgent.analyze (src/agents/analyzer.ts:33:13)

  console.log
    [OrchestratorAgent][bea87ad9-d555-41b1-b3cf-dac066996e04] Analysis complete

      at OrchestratorAgent.handleQuery (src/agents/orchestrator.ts:68:15)

  console.log
    [OrchestratorAgent][bea87ad9-d555-41b1-b3cf-dac066996e04] Generating summary...

      at OrchestratorAgent.handleQuery (src/agents/orchestrator.ts:71:15)

  console.log
    [SummarizerAgent] Generating summary...

      at SummarizerAgent.summarize (src/agents/summarizer.ts:39:13)

  console.log
    [LLMProvider] Using openai provider

      at LLMProvider.generate (src/shared/llm/provider.ts:42:17)

  console.log
    [AnalyzerAgent] Analyzing 2 tool results

      at AnalyzerAgent.analyze (src/agents/analyzer.ts:33:13)

  console.log
    [AnalyzerAgent] Generating insights...

      at AnalyzerAgent.generateInsights (src/agents/analyzer.ts:85:13)

  console.log
    [AnalyzerAgent] Extracting entities...

      at AnalyzerAgent.extractEntities (src/agents/analyzer.ts:311:13)

  console.log
    [AnalyzerAgent] Detecting anomalies...

      at AnalyzerAgent.detectAnomalies (src/agents/analyzer.ts:373:13)

  console.log
    [AnalyzerAgent] Analyzing 1 tool results

      at AnalyzerAgent.analyze (src/agents/analyzer.ts:33:13)

  console.log
    [AnalyzerAgent] Generating insights...

      at AnalyzerAgent.generateInsights (src/agents/analyzer.ts:85:13)

  console.log
    [AnalyzerAgent] Extracting entities...

      at AnalyzerAgent.extractEntities (src/agents/analyzer.ts:311:13)

  console.log
    [AnalyzerAgent] Detecting anomalies...

      at AnalyzerAgent.detectAnomalies (src/agents/analyzer.ts:373:13)

  console.log
    Large dataset analysis: { insights: 2, entities: 50, anomalies: 1 }

      at Object.<anonymous> (src/tests/integration/agents/analyzer.integration.test.ts:134:15)

  console.log
    [AnalyzerAgent] Analyzing 1 tool results

      at AnalyzerAgent.analyze (src/agents/analyzer.ts:33:13)

  console.log
    [AnalyzerAgent] Generating insights...

      at AnalyzerAgent.generateInsights (src/agents/analyzer.ts:85:13)

  console.log
    [AnalyzerAgent] Extracting entities...

      at AnalyzerAgent.extractEntities (src/agents/analyzer.ts:311:13)

  console.log
    [AnalyzerAgent] Detecting anomalies...

      at AnalyzerAgent.detectAnomalies (src/agents/analyzer.ts:373:13)

  console.log
    Same values analysis: { anomalies: 0 }

      at Object.<anonymous> (src/tests/integration/agents/analyzer.integration.test.ts:163:15)

  console.log
    [AnalyzerAgent] Analyzing 1 tool results

      at AnalyzerAgent.analyze (src/agents/analyzer.ts:33:13)

  console.log
    [AnalyzerAgent] Generating insights...

      at AnalyzerAgent.generateInsights (src/agents/analyzer.ts:85:13)

  console.log
    [AnalyzerAgent] Extracting entities...

      at AnalyzerAgent.extractEntities (src/agents/analyzer.ts:311:13)

  console.log
    [AnalyzerAgent] Detecting anomalies...

      at AnalyzerAgent.detectAnomalies (src/agents/analyzer.ts:373:13)

  console.log
    Different values analysis: { insights: 1, anomalies: 0 }

      at Object.<anonymous> (src/tests/integration/agents/analyzer.integration.test.ts:186:15)

  console.log
    [AnalyzerAgent] Analyzing 1 tool results

      at AnalyzerAgent.analyze (src/agents/analyzer.ts:33:13)

  console.log
    [AnalyzerAgent] Generating insights...

      at AnalyzerAgent.generateInsights (src/agents/analyzer.ts:85:13)

  console.log
    [AnalyzerAgent] Extracting entities...

      at AnalyzerAgent.extractEntities (src/agents/analyzer.ts:311:13)

  console.log
    [AnalyzerAgent] Detecting anomalies...

      at AnalyzerAgent.detectAnomalies (src/agents/analyzer.ts:373:13)

  console.log
    [LLMProvider] Using openai provider

      at LLMProvider.generate (src/shared/llm/provider.ts:42:17)

  console.error
    [LLMProvider] openai failed: 401 Incorrect API key provided: invalid-*ey-1. You can find your API key at https://platform.openai.com/account/api-keys.

      43 |         return await adapter.generate(request);
      44 |       } catch (error: any) {
    > 45 |         console.error(`[LLMProvider] ${adapter.name} failed:`, error.message);
         |                 ^
      46 |         errors.push(error);
      47 |       }
      48 |     }

      at LLMProvider.generate (src/shared/llm/provider.ts:45:17)
      at Object.<anonymous> (src/tests/integration/llm/provider.integration.test.ts:161:5)

  console.log
    [LLMProvider] Using groq provider

      at LLMProvider.generate (src/shared/llm/provider.ts:42:17)

  console.log
    [PlannerAgent] Plan generated successfully

      at PlannerAgent.plan (src/agents/planner.ts:98:17)

  console.log
    [OrchestratorAgent][81b6dc5e-e468-4201-8c6d-acb9298d8f59] Plan generated: {
      steps: [
        {
          tool: 'shipments',
          params: [Object],
          depends_on: [],
          parallel: false
        }
      ],
      metadata: {
        query: 'Get shipments from last week',
        timestamp: '2022-01-17T08:00:00Z',
        estimated_duration_ms: 1500
      }
    }

      at OrchestratorAgent.handleQuery (src/agents/orchestrator.ts:58:15)

  console.log
    [OrchestratorAgent][81b6dc5e-e468-4201-8c6d-acb9298d8f59] Executing plan...

      at OrchestratorAgent.handleQuery (src/agents/orchestrator.ts:61:15)

  console.log
    [ExecutorAgent] Executing plan with 1 steps

      at ExecutorAgent.execute (src/agents/executor.ts:35:13)

  console.log
    [ExecutorAgent] Executing 1 steps in parallel

      at ExecutorAgent.execute (src/agents/executor.ts:52:15)

  console.log
    [ExecutorAgent] Executing step 0: shipments

      at ExecutorAgent.executeStep (src/agents/executor.ts:177:13)
          at Array.map (<anonymous>)

  console.error
    [ExecutorAgent] Step 0 (shipments) failed: Tool not found: shipments

      202 |
      203 |     } catch (error: any) {
    > 204 |       console.error(`[ExecutorAgent] Step ${index} (${step.tool}) failed:`, error.message);
          |               ^
      205 |
      206 |       return {
      207 |         success: false,

      at ExecutorAgent.executeStep (src/agents/executor.ts:204:15)
      at src/agents/executor.ts:166:19
          at Array.map (<anonymous>)
      at ExecutorAgent.executeBatch (src/agents/executor.ts:161:34)
      at ExecutorAgent.execute (src/agents/executor.ts:55:39)
      at OrchestratorAgent.handleQuery (src/agents/orchestrator.ts:62:43)
      at Object.<anonymous> (src/tests/integration/agents/orchestrator.integration.test.ts:87:24)

  console.log
    [ExecutorAgent] Plan execution complete. 1 results

      at ExecutorAgent.execute (src/agents/executor.ts:79:13)

  console.log
    [OrchestratorAgent][81b6dc5e-e468-4201-8c6d-acb9298d8f59] Execution complete. Results: 1

      at OrchestratorAgent.handleQuery (src/agents/orchestrator.ts:63:15)

  console.log
    [OrchestratorAgent][81b6dc5e-e468-4201-8c6d-acb9298d8f59] Analyzing results...

      at OrchestratorAgent.handleQuery (src/agents/orchestrator.ts:66:15)

  console.log
    [AnalyzerAgent] Analyzing 1 tool results

      at AnalyzerAgent.analyze (src/agents/analyzer.ts:33:13)

  console.log
    [OrchestratorAgent][81b6dc5e-e468-4201-8c6d-acb9298d8f59] Analysis complete

      at OrchestratorAgent.handleQuery (src/agents/orchestrator.ts:68:15)

  console.log
    [OrchestratorAgent][81b6dc5e-e468-4201-8c6d-acb9298d8f59] Generating summary...

      at OrchestratorAgent.handleQuery (src/agents/orchestrator.ts:71:15)

  console.log
    [SummarizerAgent] Generating summary...

      at SummarizerAgent.summarize (src/agents/summarizer.ts:39:13)

  console.log
    [LLMProvider] Using openai provider

      at LLMProvider.generate (src/shared/llm/provider.ts:42:17)

  console.error
    [LLMProvider] groq failed: 401 Invalid API Key

      43 |         return await adapter.generate(request);
      44 |       } catch (error: any) {
    > 45 |         console.error(`[LLMProvider] ${adapter.name} failed:`, error.message);
         |                 ^
      46 |         errors.push(error);
      47 |       }
      48 |     }

      at LLMProvider.generate (src/shared/llm/provider.ts:45:17)
      at Object.<anonymous> (src/tests/integration/llm/provider.integration.test.ts:161:5)

  console.log
    [LLMProvider] openai is not available, skipping...

      at LLMProvider.generate (src/shared/llm/provider.ts:38:19)

  console.log
    [LLMProvider] groq is not available, skipping...

      at LLMProvider.generate (src/shared/llm/provider.ts:38:19)

  console.log
    [LLMProvider] Using openai provider

      at LLMProvider.generate (src/shared/llm/provider.ts:42:17)

  console.log
    [PlannerAgent] Plan generated successfully

      at PlannerAgent.plan (src/agents/planner.ts:98:17)

  console.log
    [PlannerAgent] Planning for query: Show me facilities in Hannover

      at PlannerAgent.plan (src/agents/planner.ts:60:13)

  console.log
    [LLMProvider] Using openai provider

      at LLMProvider.generate (src/shared/llm/provider.ts:42:17)

  console.log
    [SummarizerAgent] Generating summary...

      at SummarizerAgent.summarize (src/agents/summarizer.ts:39:13)

  console.log
    [LLMProvider] Using openai provider

      at LLMProvider.generate (src/shared/llm/provider.ts:42:17)

PASS src/tests/integration/llm/provider.integration.test.ts
  LLM Provider Integration
    ‚úì should use the first available provider (708 ms)
    ‚úì should fallback to next provider when first fails (745 ms)
    ‚úì should skip unavailable providers (273 ms)
    ‚úì should throw error when all providers fail (256 ms)
    ‚úì should throw error when all providers unavailable (2 ms)
    ‚úì should work with multiple valid providers (289 ms)

PASS src/tests/integration/llm/groq.integration.test.ts
  Groq Adapter Integration
    ‚úì should be available when API key is set (3 ms)
    ‚úì should generate a response for a simple prompt (376 ms)
    ‚úì should return usage information (329 ms)
    ‚úì should respect temperature configuration (149 ms)
    ‚úì should respect max_tokens configuration (665 ms)
    ‚úì should handle system messages (154 ms)
    ‚úì should have fast inference time (752 ms)
    ‚úì should fail with invalid API key (63 ms)
  Groq Adapter Without API Key
    ‚úì should not be available when API key is missing (1 ms)

PASS src/tests/integration/llm/openai.integration.test.ts
  OpenAI Adapter Integration
    ‚úì should be available when API key is set (5 ms)
    ‚úì should generate a response for a simple prompt (649 ms)
    ‚úì should return usage information (381 ms)
    ‚úì should respect temperature configuration (311 ms)
    ‚úì should respect max_tokens configuration (410 ms)
    ‚úì should handle system messages (359 ms)
    ‚úì should fail with invalid API key (315 ms)
  OpenAI Adapter Without API Key
    ‚úì should not be available when API key is missing (2 ms)

  console.log
    [OrchestratorAgent] Stored request bea87ad9-d555-41b1-b3cf-dac066996e04 in memory

      at OrchestratorAgent.storeInMemory (src/agents/orchestrator.ts:188:15)

  console.log
    [OrchestratorAgent][bea87ad9-d555-41b1-b3cf-dac066996e04] Complete in 1836ms

      at OrchestratorAgent.handleQuery (src/agents/orchestrator.ts:98:15)

  console.log
    
    üìã Response: No shipments with contaminants were identified in last week's data. No further insights or anomalies were found during the analysis.

      at Object.<anonymous> (src/tests/integration/agents/system.integration.test.ts:109:15)

  console.log
    üîß Tools used: [ 'shipments' ]

      at Object.<anonymous> (src/tests/integration/agents/system.integration.test.ts:110:15)

  console.log
    [OrchestratorAgent] Stored request 81b6dc5e-e468-4201-8c6d-acb9298d8f59 in memory

      at OrchestratorAgent.storeInMemory (src/agents/orchestrator.ts:188:15)

  console.log
    ‚è±Ô∏è  Duration: 1836 ms

      at Object.<anonymous> (src/tests/integration/agents/system.integration.test.ts:111:15)

  console.log
    [OrchestratorAgent][81b6dc5e-e468-4201-8c6d-acb9298d8f59] Complete in 1849ms

      at OrchestratorAgent.handleQuery (src/agents/orchestrator.ts:98:15)

  console.log
    [OrchestratorAgent][ef6588c3-4ded-4e06-a1a4-5e992b8fc5f3] Processing query: Analyse today's contaminants in Hannover

      at OrchestratorAgent.handleQuery (src/agents/orchestrator.ts:45:13)

  console.log
    
    üìã Complete Response:

      at Object.<anonymous> (src/tests/integration/agents/orchestrator.integration.test.ts:95:15)

  console.log
    Message: No successful results were found for retrieving shipments from last week.

      at Object.<anonymous> (src/tests/integration/agents/orchestrator.integration.test.ts:96:15)

  console.log
    [OrchestratorAgent][ef6588c3-4ded-4e06-a1a4-5e992b8fc5f3] Loaded context: {
      semantic: undefined,
      episodic: undefined,
      entities: [ 'temporal:week', 'location:Hannover' ]
    }

      at OrchestratorAgent.handleQuery (src/agents/orchestrator.ts:52:17)

  console.log
    Tools: [ 'shipments' ]

      at Object.<anonymous> (src/tests/integration/agents/orchestrator.integration.test.ts:97:15)

  console.log
    [OrchestratorAgent][ef6588c3-4ded-4e06-a1a4-5e992b8fc5f3] Planning...

      at OrchestratorAgent.handleQuery (src/agents/orchestrator.ts:56:15)

  console.log
    Duration: 1849 ms

      at Object.<anonymous> (src/tests/integration/agents/orchestrator.integration.test.ts:98:15)

  console.log
    [PlannerAgent] Planning for query: Analyse today's contaminants in Hannover

      at PlannerAgent.plan (src/agents/planner.ts:60:13)

  console.log
    [LLMProvider] Using openai provider

      at LLMProvider.generate (src/shared/llm/provider.ts:42:17)

  console.log
    [OrchestratorAgent][b034cb58-d410-4369-a38c-137426aeaf4f] Processing query: Get contaminated shipments and their contaminant details

      at OrchestratorAgent.handleQuery (src/agents/orchestrator.ts:45:13)

  console.log
    [OrchestratorAgent][b034cb58-d410-4369-a38c-137426aeaf4f] Loaded context: {
      semantic: undefined,
      episodic: undefined,
      entities: [ 'entity:shipment' ]
    }

      at OrchestratorAgent.handleQuery (src/agents/orchestrator.ts:52:17)

  console.log
    [OrchestratorAgent][b034cb58-d410-4369-a38c-137426aeaf4f] Planning...

      at OrchestratorAgent.handleQuery (src/agents/orchestrator.ts:56:15)

  console.log
    [PlannerAgent] Planning for query: Get contaminated shipments and their contaminant details

      at PlannerAgent.plan (src/agents/planner.ts:60:13)

  console.log
    [LLMProvider] Using openai provider

      at LLMProvider.generate (src/shared/llm/provider.ts:42:17)

PASS src/tests/integration/context/compression.integration.test.ts
  Context Compression Integration
    Real LLM Summarization
      ‚úì should compress conversation using SUMMARIZE strategy (1034 ms)
      ‚úì should preserve system messages (577 ms)
    Auto Compression Strategy
      ‚úì should automatically select best strategy (1026 ms)

  console.log
    [PlannerAgent] Plan generated successfully

      at PlannerAgent.plan (src/agents/planner.ts:98:17)

  console.log
    [PlannerAgent] Planning for query: Get today's contaminants

      at PlannerAgent.plan (src/agents/planner.ts:60:13)

  console.log
    [LLMProvider] Using openai provider

      at LLMProvider.generate (src/shared/llm/provider.ts:42:17)

  console.log
    [SummarizerAgent] Generating summary...

      at SummarizerAgent.summarize (src/agents/summarizer.ts:39:13)

  console.log
    [LLMProvider] Using openai provider

      at LLMProvider.generate (src/shared/llm/provider.ts:42:17)

  console.log
    
    üìÑ Plain text format: There are 3 shipments in total. The analysis indicates a low contamination rate with a confidence le

      at Object.<anonymous> (src/tests/integration/agents/summarizer.integration.test.ts:139:15)

  console.log
    [SummarizerAgent] Generating summary...

      at SummarizerAgent.summarize (src/agents/summarizer.ts:39:13)

  console.log
    [LLMProvider] Using openai provider

      at LLMProvider.generate (src/shared/llm/provider.ts:42:17)

  console.log
    Anomaly detection: { anomalies: 1 }

      at Object.<anonymous> (src/tests/integration/agents/analyzer.integration.test.ts:210:15)

  console.log
    [AnalyzerAgent] Analyzing 3 tool results

      at AnalyzerAgent.analyze (src/agents/analyzer.ts:33:13)

  console.log
    [AnalyzerAgent] Generating insights...

      at AnalyzerAgent.generateInsights (src/agents/analyzer.ts:85:13)

  console.log
    [AnalyzerAgent] Extracting entities...

      at AnalyzerAgent.extractEntities (src/agents/analyzer.ts:311:13)

  console.log
    [AnalyzerAgent] Detecting anomalies...

      at AnalyzerAgent.detectAnomalies (src/agents/analyzer.ts:373:13)

  console.log
    Entity extraction: { shipment: true, facility: true, contaminant: true }

      at Object.<anonymous> (src/tests/integration/agents/analyzer.integration.test.ts:247:15)

  console.log
    [AnalyzerAgent] Analyzing 1 tool results

      at AnalyzerAgent.analyze (src/agents/analyzer.ts:33:13)

  console.log
    [AnalyzerAgent] Generating insights...

      at AnalyzerAgent.generateInsights (src/agents/analyzer.ts:85:13)

  console.log
    [AnalyzerAgent] Extracting entities...

      at AnalyzerAgent.extractEntities (src/agents/analyzer.ts:311:13)

  console.log
    [AnalyzerAgent] Detecting anomalies...

      at AnalyzerAgent.detectAnomalies (src/agents/analyzer.ts:373:13)

  console.log
    Confidence scoring: [ 0.9, 0.85 ]

      at Object.<anonymous> (src/tests/integration/agents/analyzer.integration.test.ts:276:15)

  console.log
    [AnalyzerAgent] Analyzing 1 tool results

      at AnalyzerAgent.analyze (src/agents/analyzer.ts:33:13)

  console.log
    [AnalyzerAgent] Generating insights...

      at AnalyzerAgent.generateInsights (src/agents/analyzer.ts:85:13)

  console.log
    [AnalyzerAgent] Extracting entities...

      at AnalyzerAgent.extractEntities (src/agents/analyzer.ts:311:13)

  console.log
    [AnalyzerAgent] Detecting anomalies...

      at AnalyzerAgent.detectAnomalies (src/agents/analyzer.ts:373:13)

  console.log
    Empty dataset analysis: Analyzed 1 tool executions. Found 0 insights. Extracted 0 entities. Detected 0 anomalies

      at Object.<anonymous> (src/tests/integration/agents/analyzer.integration.test.ts:294:15)

  console.log
    [AnalyzerAgent] Analyzing 2 tool results

      at AnalyzerAgent.analyze (src/agents/analyzer.ts:33:13)

  console.log
    Failed results analysis: No successful results to analyze

      at Object.<anonymous> (src/tests/integration/agents/analyzer.integration.test.ts:319:15)

  console.log
    [AnalyzerAgent] Analyzing 2 tool results

      at AnalyzerAgent.analyze (src/agents/analyzer.ts:33:13)

  console.log
    [AnalyzerAgent] Generating insights...

      at AnalyzerAgent.generateInsights (src/agents/analyzer.ts:85:13)

  console.log
    [AnalyzerAgent] Extracting entities...

      at AnalyzerAgent.extractEntities (src/agents/analyzer.ts:311:13)

  console.log
    [AnalyzerAgent] Detecting anomalies...

      at AnalyzerAgent.detectAnomalies (src/agents/analyzer.ts:373:13)

  console.log
    Mixed results analysis: { successful: 1, failed: 1 }

      at Object.<anonymous> (src/tests/integration/agents/analyzer.integration.test.ts:345:15)

  console.log
    [AnalyzerAgent] Analyzing 1 tool results

      at AnalyzerAgent.analyze (src/agents/analyzer.ts:33:13)

  console.log
    [AnalyzerAgent] Generating insights...

      at AnalyzerAgent.generateInsights (src/agents/analyzer.ts:85:13)

  console.log
    [AnalyzerAgent] Extracting entities...

      at AnalyzerAgent.extractEntities (src/agents/analyzer.ts:311:13)

  console.log
    [AnalyzerAgent] Detecting anomalies...

      at AnalyzerAgent.detectAnomalies (src/agents/analyzer.ts:373:13)

  console.log
    [LLMProvider] Using openai provider

      at LLMProvider.generate (src/shared/llm/provider.ts:42:17)

  console.log
    [PlannerAgent] Plan generated successfully

      at PlannerAgent.plan (src/agents/planner.ts:98:17)

  console.log
    [PlannerAgent] Planning for query: Get contaminated shipments from last week and their contaminant details

      at PlannerAgent.plan (src/agents/planner.ts:60:13)

  console.log
    [LLMProvider] Using openai provider

      at LLMProvider.generate (src/shared/llm/provider.ts:42:17)

  console.log
    [PlannerAgent] Plan generated successfully

      at PlannerAgent.plan (src/agents/planner.ts:98:17)

  console.log
    [OrchestratorAgent][ef6588c3-4ded-4e06-a1a4-5e992b8fc5f3] Plan generated: {
      steps: [
        {
          tool: 'facilities',
          params: [Object],
          depends_on: [],
          parallel: false
        },
        {
          tool: 'contaminants-detected',
          params: [Object],
          depends_on: [Array],
          parallel: false
        }
      ],
      metadata: {
        query: "Analyse today's contaminants in Hannover",
        timestamp: '2023-10-09T12:00:00Z',
        estimated_duration_ms: 2000
      }
    }

      at OrchestratorAgent.handleQuery (src/agents/orchestrator.ts:58:15)

  console.log
    [OrchestratorAgent][ef6588c3-4ded-4e06-a1a4-5e992b8fc5f3] Executing plan...

      at OrchestratorAgent.handleQuery (src/agents/orchestrator.ts:61:15)

  console.log
    [ExecutorAgent] Executing plan with 2 steps

      at ExecutorAgent.execute (src/agents/executor.ts:35:13)

  console.log
    [ExecutorAgent] Executing 1 steps in parallel

      at ExecutorAgent.execute (src/agents/executor.ts:52:15)

  console.log
    [ExecutorAgent] Executing step 0: facilities

      at ExecutorAgent.executeStep (src/agents/executor.ts:177:13)
          at Array.map (<anonymous>)

  console.error
    [ExecutorAgent] Step 0 (facilities) failed: Tool not found: facilities

      202 |
      203 |     } catch (error: any) {
    > 204 |       console.error(`[ExecutorAgent] Step ${index} (${step.tool}) failed:`, error.message);
          |               ^
      205 |
      206 |       return {
      207 |         success: false,

      at ExecutorAgent.executeStep (src/agents/executor.ts:204:15)
      at src/agents/executor.ts:166:19
          at Array.map (<anonymous>)
      at ExecutorAgent.executeBatch (src/agents/executor.ts:161:34)
      at ExecutorAgent.execute (src/agents/executor.ts:55:39)
      at OrchestratorAgent.handleQuery (src/agents/orchestrator.ts:62:43)
      at Object.<anonymous> (src/tests/integration/agents/system.integration.test.ts:115:24)

  console.log
    [ExecutorAgent] Executing 1 steps in parallel

      at ExecutorAgent.execute (src/agents/executor.ts:52:15)

  console.log
    [ExecutorAgent] Executing step 1: contaminants-detected

      at ExecutorAgent.executeStep (src/agents/executor.ts:177:13)
          at Array.map (<anonymous>)

  console.error
    [ExecutorAgent] Step 1 (contaminants-detected) failed: Tool not found: contaminants-detected

      202 |
      203 |     } catch (error: any) {
    > 204 |       console.error(`[ExecutorAgent] Step ${index} (${step.tool}) failed:`, error.message);
          |               ^
      205 |
      206 |       return {
      207 |         success: false,

      at ExecutorAgent.executeStep (src/agents/executor.ts:204:15)
      at src/agents/executor.ts:166:19
          at Array.map (<anonymous>)
      at ExecutorAgent.executeBatch (src/agents/executor.ts:161:34)
      at ExecutorAgent.execute (src/agents/executor.ts:55:39)
      at OrchestratorAgent.handleQuery (src/agents/orchestrator.ts:62:23)
      at Object.<anonymous> (src/tests/integration/agents/system.integration.test.ts:115:24)

  console.log
    [ExecutorAgent] Plan execution complete. 2 results

      at ExecutorAgent.execute (src/agents/executor.ts:79:13)

  console.log
    [OrchestratorAgent][ef6588c3-4ded-4e06-a1a4-5e992b8fc5f3] Execution complete. Results: 2

      at OrchestratorAgent.handleQuery (src/agents/orchestrator.ts:63:15)

  console.log
    [OrchestratorAgent][ef6588c3-4ded-4e06-a1a4-5e992b8fc5f3] Analyzing results...

      at OrchestratorAgent.handleQuery (src/agents/orchestrator.ts:66:15)

  console.log
    [AnalyzerAgent] Analyzing 2 tool results

      at AnalyzerAgent.analyze (src/agents/analyzer.ts:33:13)

  console.log
    [OrchestratorAgent][ef6588c3-4ded-4e06-a1a4-5e992b8fc5f3] Analysis complete

      at OrchestratorAgent.handleQuery (src/agents/orchestrator.ts:68:15)

  console.log
    [OrchestratorAgent][ef6588c3-4ded-4e06-a1a4-5e992b8fc5f3] Generating summary...

      at OrchestratorAgent.handleQuery (src/agents/orchestrator.ts:71:15)

  console.log
    [SummarizerAgent] Generating summary...

      at SummarizerAgent.summarize (src/agents/summarizer.ts:39:13)

  console.log
    [LLMProvider] Using openai provider

      at LLMProvider.generate (src/shared/llm/provider.ts:42:17)

  console.log
    [OrchestratorAgent] Stored request ef6588c3-4ded-4e06-a1a4-5e992b8fc5f3 in memory

      at OrchestratorAgent.storeInMemory (src/agents/orchestrator.ts:188:15)

  console.log
    [OrchestratorAgent][ef6588c3-4ded-4e06-a1a4-5e992b8fc5f3] Complete in 2767ms

      at OrchestratorAgent.handleQuery (src/agents/orchestrator.ts:98:15)

  console.log
    
    üìã Response: There were no successful results to analyze today's contaminants in Hannover.

      at Object.<anonymous> (src/tests/integration/agents/system.integration.test.ts:129:15)

  console.log
    üîß Tools used: [ 'facilities', 'contaminants-detected' ]

      at Object.<anonymous> (src/tests/integration/agents/system.integration.test.ts:130:15)

  console.log
    [OrchestratorAgent][9a03d98f-278d-4a97-9522-ca950af9f762] Processing query: From the inspections accepted this week, did we detect any risky contaminants?

      at OrchestratorAgent.handleQuery (src/agents/orchestrator.ts:45:13)

  console.log
    [OrchestratorAgent][9a03d98f-278d-4a97-9522-ca950af9f762] Loaded context: {
      semantic: undefined,
      episodic: undefined,
      entities: [ 'temporal:week', 'entity:inspection' ]
    }

      at OrchestratorAgent.handleQuery (src/agents/orchestrator.ts:52:17)

  console.log
    [OrchestratorAgent][9a03d98f-278d-4a97-9522-ca950af9f762] Planning...

      at OrchestratorAgent.handleQuery (src/agents/orchestrator.ts:56:15)

  console.log
    [PlannerAgent] Planning for query: From the inspections accepted this week, did we detect any risky contaminants?

      at PlannerAgent.plan (src/agents/planner.ts:60:13)

  console.log
    [LLMProvider] Using openai provider

      at LLMProvider.generate (src/shared/llm/provider.ts:42:17)

  console.log
    [PlannerAgent] Plan generated successfully

      at PlannerAgent.plan (src/agents/planner.ts:98:17)

  console.log
    [OrchestratorAgent][b034cb58-d410-4369-a38c-137426aeaf4f] Plan generated: {
      steps: [
        {
          tool: 'shipments',
          params: [Object],
          depends_on: [],
          parallel: false
        },
        {
          tool: 'contaminants-detected',
          params: [Object],
          depends_on: [Array],
          parallel: false
        }
      ],
      metadata: {
        query: 'Get contaminated shipments and their contaminant details',
        timestamp: '2022-01-01T12:00:00Z',
        estimated_duration_ms: 2000
      }
    }

      at OrchestratorAgent.handleQuery (src/agents/orchestrator.ts:58:15)

  console.log
    [OrchestratorAgent][b034cb58-d410-4369-a38c-137426aeaf4f] Executing plan...

      at OrchestratorAgent.handleQuery (src/agents/orchestrator.ts:61:15)

  console.log
    [ExecutorAgent] Executing plan with 2 steps

      at ExecutorAgent.execute (src/agents/executor.ts:35:13)

  console.log
    [ExecutorAgent] Executing 1 steps in parallel

      at ExecutorAgent.execute (src/agents/executor.ts:52:15)

  console.log
    [ExecutorAgent] Executing step 0: shipments

      at ExecutorAgent.executeStep (src/agents/executor.ts:177:13)
          at Array.map (<anonymous>)

  console.error
    [ExecutorAgent] Step 0 (shipments) failed: Tool not found: shipments

      202 |
      203 |     } catch (error: any) {
    > 204 |       console.error(`[ExecutorAgent] Step ${index} (${step.tool}) failed:`, error.message);
          |               ^
      205 |
      206 |       return {
      207 |         success: false,

      at ExecutorAgent.executeStep (src/agents/executor.ts:204:15)
      at src/agents/executor.ts:166:19
          at Array.map (<anonymous>)
      at ExecutorAgent.executeBatch (src/agents/executor.ts:161:34)
      at ExecutorAgent.execute (src/agents/executor.ts:55:39)
      at OrchestratorAgent.handleQuery (src/agents/orchestrator.ts:62:43)
      at Object.<anonymous> (src/tests/integration/agents/orchestrator.integration.test.ts:102:24)

  console.log
    [ExecutorAgent] Executing 1 steps in parallel

      at ExecutorAgent.execute (src/agents/executor.ts:52:15)

  console.log
    [ExecutorAgent] Executing step 1: contaminants-detected

      at ExecutorAgent.executeStep (src/agents/executor.ts:177:13)
          at Array.map (<anonymous>)

  console.error
    [ExecutorAgent] Step 1 (contaminants-detected) failed: Tool not found: contaminants-detected

      202 |
      203 |     } catch (error: any) {
    > 204 |       console.error(`[ExecutorAgent] Step ${index} (${step.tool}) failed:`, error.message);
          |               ^
      205 |
      206 |       return {
      207 |         success: false,

      at ExecutorAgent.executeStep (src/agents/executor.ts:204:15)
      at src/agents/executor.ts:166:19
          at Array.map (<anonymous>)
      at ExecutorAgent.executeBatch (src/agents/executor.ts:161:34)
      at ExecutorAgent.execute (src/agents/executor.ts:55:39)
      at OrchestratorAgent.handleQuery (src/agents/orchestrator.ts:62:23)
      at Object.<anonymous> (src/tests/integration/agents/orchestrator.integration.test.ts:102:24)

  console.log
    [ExecutorAgent] Plan execution complete. 2 results

      at ExecutorAgent.execute (src/agents/executor.ts:79:13)

  console.log
    [OrchestratorAgent][b034cb58-d410-4369-a38c-137426aeaf4f] Execution complete. Results: 2

      at OrchestratorAgent.handleQuery (src/agents/orchestrator.ts:63:15)

  console.log
    [OrchestratorAgent][b034cb58-d410-4369-a38c-137426aeaf4f] Analyzing results...

      at OrchestratorAgent.handleQuery (src/agents/orchestrator.ts:66:15)

  console.log
    [AnalyzerAgent] Analyzing 2 tool results

      at AnalyzerAgent.analyze (src/agents/analyzer.ts:33:13)

  console.log
    [OrchestratorAgent][b034cb58-d410-4369-a38c-137426aeaf4f] Analysis complete

      at OrchestratorAgent.handleQuery (src/agents/orchestrator.ts:68:15)

  console.log
    [OrchestratorAgent][b034cb58-d410-4369-a38c-137426aeaf4f] Generating summary...

      at OrchestratorAgent.handleQuery (src/agents/orchestrator.ts:71:15)

  console.log
    [SummarizerAgent] Generating summary...

      at SummarizerAgent.summarize (src/agents/summarizer.ts:39:13)

  console.log
    [LLMProvider] Using openai provider

      at LLMProvider.generate (src/shared/llm/provider.ts:42:17)

  console.log
    LLM insights: {
      count: 2,
      summary: 'Analyzed 1 tool executions. Found 2 insights. Extracted 3 entities. Detected 0 anomalies'
    }

      at Object.<anonymous> (src/tests/integration/agents/analyzer.integration.test.ts:371:15)

PASS src/tests/integration/agents/analyzer.integration.test.ts (6.349 s)
  AnalyzerAgent Integration
    Real Data Analysis
      ‚úì should analyze shipment results with contamination (13 ms)
      ‚úì should analyze contaminant data with anomalies (11 ms)
    LLM-Based Analysis
      ‚úì should generate insights with real LLM (1583 ms)
    Multi-Tool Analysis
      ‚úì should analyze results from multiple tools (6 ms)
    Large Dataset Analysis
      ‚úì should analyze LLM with large dataset (50+ records) (6 ms)
      ‚úì should handle statistical analysis edge case: all same values (6 ms)
      ‚úì should handle statistical analysis edge case: all different values (4 ms)
      ‚úì should detect anomalies with various thresholds (1706 ms)
      ‚úì should extract entities from different data types (5 ms)
      ‚úì should score confidence accurately across different patterns (4 ms)
      ‚úì should handle completely empty dataset (3 ms)
      ‚úì should handle all failed tool results (1 ms)
      ‚úì should handle mixed success/failure results (3 ms)
      ‚úì should generate quality insights with real LLM (1885 ms)

  console.log
    
    üìä Large dataset summary length: 798

      at Object.<anonymous> (src/tests/integration/agents/summarizer.integration.test.ts:169:15)

  console.log
    [SummarizerAgent] Generating summary...

      at SummarizerAgent.summarize (src/agents/summarizer.ts:39:13)

  console.log
    [LLMProvider] Using openai provider

      at LLMProvider.generate (src/shared/llm/provider.ts:42:17)

  console.log
    [OrchestratorAgent] Stored request b034cb58-d410-4369-a38c-137426aeaf4f in memory

      at OrchestratorAgent.storeInMemory (src/agents/orchestrator.ts:188:15)

  console.log
    [OrchestratorAgent][b034cb58-d410-4369-a38c-137426aeaf4f] Complete in 3479ms

      at OrchestratorAgent.handleQuery (src/agents/orchestrator.ts:98:15)

  console.log
    
    üí° Insights: 0

      at Object.<anonymous> (src/tests/integration/agents/orchestrator.integration.test.ts:113:17)

  console.log
    üè∑Ô∏è  Entities: 0

      at Object.<anonymous> (src/tests/integration/agents/orchestrator.integration.test.ts:114:17)

  console.log
    [OrchestratorAgent][ef3d9eed-0583-42d4-9e7c-3417dc62bfb8] Processing query: test query

      at OrchestratorAgent.handleQuery (src/agents/orchestrator.ts:45:13)

  console.log
    [OrchestratorAgent][ef3d9eed-0583-42d4-9e7c-3417dc62bfb8] Loaded context: { semantic: undefined, episodic: undefined, entities: [] }

      at OrchestratorAgent.handleQuery (src/agents/orchestrator.ts:52:17)

  console.log
    [OrchestratorAgent][ef3d9eed-0583-42d4-9e7c-3417dc62bfb8] Planning...

      at OrchestratorAgent.handleQuery (src/agents/orchestrator.ts:56:15)

  console.log
    [PlannerAgent] Planning for query: test query

      at PlannerAgent.plan (src/agents/planner.ts:60:13)

  console.log
    [LLMProvider] Using openai provider

      at LLMProvider.generate (src/shared/llm/provider.ts:42:17)

  console.log
    [PlannerAgent] Plan generated successfully

      at PlannerAgent.plan (src/agents/planner.ts:98:17)

  console.log
    [PlannerAgent] Planning for query: Analyse today's contaminants in Hannover

      at PlannerAgent.plan (src/agents/planner.ts:60:13)

  console.log
    [LLMProvider] Using openai provider

      at LLMProvider.generate (src/shared/llm/provider.ts:42:17)

  console.log
    
    üìù Markdown format detected: false

      at Object.<anonymous> (src/tests/integration/agents/summarizer.integration.test.ts:197:15)

  console.log
    Sample: Facility A has a 30% higher throughput compared to other facilities with a confidence level of 90%. There is an increasing trend in contamination rate

      at Object.<anonymous> (src/tests/integration/agents/summarizer.integration.test.ts:198:15)

  console.log
    [SummarizerAgent] Generating summary...

      at SummarizerAgent.summarize (src/agents/summarizer.ts:39:13)

  console.log
    [LLMProvider] Using openai provider

      at LLMProvider.generate (src/shared/llm/provider.ts:42:17)

  console.log
    [PlannerAgent] Plan generated successfully

      at PlannerAgent.plan (src/agents/planner.ts:98:17)

  console.log
    [OrchestratorAgent][9a03d98f-278d-4a97-9522-ca950af9f762] Plan generated: {
      steps: [
        {
          tool: 'inspections',
          params: [Object],
          depends_on: [Array],
          parallel: false
        }
      ],
      metadata: {
        query: 'From the inspections accepted this week, did we detect any risky contaminants?',
        timestamp: '2022-01-10T08:00:00Z',
        estimated_duration_ms: 1500
      }
    }

      at OrchestratorAgent.handleQuery (src/agents/orchestrator.ts:58:15)

  console.log
    [OrchestratorAgent][9a03d98f-278d-4a97-9522-ca950af9f762] Executing plan...

      at OrchestratorAgent.handleQuery (src/agents/orchestrator.ts:61:15)

  console.log
    [ExecutorAgent] Executing plan with 1 steps

      at ExecutorAgent.execute (src/agents/executor.ts:35:13)

  console.error
    [OrchestratorAgent][9a03d98f-278d-4a97-9522-ca950af9f762] Error: Error: Circular dependency detected in plan
        at ExecutorAgent.detectCircularDependencies (/Users/yab/Projects/clear-ai-v2/src/agents/executor.ts:124:17)
        at ExecutorAgent.buildExecutionGraph (/Users/yab/Projects/clear-ai-v2/src/agents/executor.ts:95:10)
        at ExecutorAgent.execute (/Users/yab/Projects/clear-ai-v2/src/agents/executor.ts:41:24)
        at OrchestratorAgent.handleQuery (/Users/yab/Projects/clear-ai-v2/src/agents/orchestrator.ts:62:43)
        at processTicksAndRejections (node:internal/process/task_queues:105:5)
        at Object.<anonymous> (/Users/yab/Projects/clear-ai-v2/src/tests/integration/agents/system.integration.test.ts:134:24)

      101 |
      102 |     } catch (error: any) {
    > 103 |       console.error(`[OrchestratorAgent][${requestId}] Error:`, error);
          |               ^
      104 |
      105 |       // Store error in memory for learning
      106 |       if (this.config.enableMemory) {

      at OrchestratorAgent.handleQuery (src/agents/orchestrator.ts:103:15)
      at Object.<anonymous> (src/tests/integration/agents/system.integration.test.ts:134:24)

  console.log
    
    ‚ö†Ô∏è  Query resulted in error (likely no data available): I encountered an error processing your request: Circular dependency detected in plan

      at Object.<anonymous> (src/tests/integration/agents/system.integration.test.ts:150:17)

  console.log
    [OrchestratorAgent][e8b3e0e2-d27e-43a6-adb8-b30d31e72ac7] Processing query: Show me contaminated shipments

      at OrchestratorAgent.handleQuery (src/agents/orchestrator.ts:45:13)

  console.log
    [OrchestratorAgent][e8b3e0e2-d27e-43a6-adb8-b30d31e72ac7] Loaded context: {
      semantic: undefined,
      episodic: undefined,
      entities: [ 'entity:shipment' ]
    }

      at OrchestratorAgent.handleQuery (src/agents/orchestrator.ts:52:17)

  console.log
    [OrchestratorAgent][e8b3e0e2-d27e-43a6-adb8-b30d31e72ac7] Planning...

      at OrchestratorAgent.handleQuery (src/agents/orchestrator.ts:56:15)

  console.log
    [PlannerAgent] Planning for query: Show me contaminated shipments

      at PlannerAgent.plan (src/agents/planner.ts:60:13)

  console.log
    [LLMProvider] Using openai provider

      at LLMProvider.generate (src/shared/llm/provider.ts:42:17)

  console.error
    [PlannerAgent] Attempt 1/3 failed: [
      {
        "origin": "array",
        "code": "too_small",
        "minimum": 1,
        "inclusive": true,
        "path": [
          "steps"
        ],
        "message": "Too small: expected array to have >=1 items"
      }
    ]

      101 |       } catch (error: any) {
      102 |         attempts++;
    > 103 |         console.error(`[PlannerAgent] Attempt ${attempts}/${this.config.maxRetries} failed:`, error.message);
          |                 ^
      104 |
      105 |         if (attempts >= this.config.maxRetries) {
      106 |           throw new Error(`Failed to generate valid plan after ${attempts} attempts: ${error.message}`);

      at PlannerAgent.plan (src/agents/planner.ts:103:17)
      at OrchestratorAgent.handleQuery (src/agents/orchestrator.ts:57:20)
      at Object.<anonymous> (src/tests/integration/agents/orchestrator.integration.test.ts:123:24)

  console.log
    [LLMProvider] Using openai provider

      at LLMProvider.generate (src/shared/llm/provider.ts:42:17)

  console.log
    [PlannerAgent] Plan generated successfully

      at PlannerAgent.plan (src/agents/planner.ts:98:17)

  console.log
    [PlannerAgent] Planning for query: From the inspections accepted this week, did we detect any risky contaminants?

      at PlannerAgent.plan (src/agents/planner.ts:60:13)

  console.log
    [LLMProvider] Using openai provider

      at LLMProvider.generate (src/shared/llm/provider.ts:42:17)

  console.log
    
    üëî Professional tone: Critical contamination has been detected with a critical level exceeded. There is a high confidence

      at Object.<anonymous> (src/tests/integration/agents/summarizer.integration.test.ts:223:15)

  console.log
    [SummarizerAgent] Generating summary...

      at SummarizerAgent.summarize (src/agents/summarizer.ts:39:13)

  console.log
    [LLMProvider] Using openai provider

      at LLMProvider.generate (src/shared/llm/provider.ts:42:17)

  console.error
    [PlannerAgent] Attempt 2/3 failed: [
      {
        "origin": "array",
        "code": "too_small",
        "minimum": 1,
        "inclusive": true,
        "path": [
          "steps"
        ],
        "message": "Too small: expected array to have >=1 items"
      }
    ]

      101 |       } catch (error: any) {
      102 |         attempts++;
    > 103 |         console.error(`[PlannerAgent] Attempt ${attempts}/${this.config.maxRetries} failed:`, error.message);
          |                 ^
      104 |
      105 |         if (attempts >= this.config.maxRetries) {
      106 |           throw new Error(`Failed to generate valid plan after ${attempts} attempts: ${error.message}`);

      at PlannerAgent.plan (src/agents/planner.ts:103:17)
      at OrchestratorAgent.handleQuery (src/agents/orchestrator.ts:57:20)
      at Object.<anonymous> (src/tests/integration/agents/orchestrator.integration.test.ts:123:24)

  console.log
    [LLMProvider] Using openai provider

      at LLMProvider.generate (src/shared/llm/provider.ts:42:17)

FAIL src/tests/integration/llm/ollama.integration.test.ts (9.067 s)
  Ollama Adapter Integration
    ‚úì should detect if Ollama is running (3 ms)
    ‚úì should be available when Ollama is running (6 ms)
    ‚úï should generate a response for a simple prompt (5047 ms)
    ‚úì should respect temperature configuration (2101 ms)
    ‚úì should respect max_tokens (num_predict) configuration (467 ms)
    ‚úì should handle system messages (472 ms)
    ‚úì should format multi-turn conversations (425 ms)
  Ollama Adapter Without Server
    ‚úì should not be available when Ollama is not running (1 ms)

  ‚óè Ollama Adapter Integration ‚Ä∫ should generate a response for a simple prompt

    socket hang up

      32 |     const prompt = this.formatMessages(request.messages);
      33 |     
    > 34 |     const response = await axios.post(`${this.baseUrl}/api/generate`, {
         |                      ^
      35 |       model: this.config.model || 'mistral:latest',
      36 |       prompt,
      37 |       stream: false,

      at Function.AxiosError.from (../../.yarn/berry/cache/axios-npm-1.12.2-cdb8ea6c90-10c0.zip/node_modules/axios/lib/core/AxiosError.js:96:14)
      at RedirectableRequest.handleRequestError (../../.yarn/berry/cache/axios-npm-1.12.2-cdb8ea6c90-10c0.zip/node_modules/axios/lib/adapters/http.js:638:25)
      at ClientRequest.eventHandlers.<computed> (.yarn/__virtual__/follow-redirects-virtual-1c36f0670e/3/.yarn/berry/cache/follow-redirects-npm-1.15.11-ae7b2db266-10c0.zip/node_modules/follow-redirects/index.js:49:24)
      at Axios.request (../../.yarn/berry/cache/axios-npm-1.12.2-cdb8ea6c90-10c0.zip/node_modules/axios/lib/core/Axios.js:45:41)
      at OllamaAdapter.generate (src/shared/llm/adapters/ollama.ts:34:22)
      at Object.<anonymous> (src/tests/integration/llm/ollama.integration.test.ts:68:22)

    Cause:
    socket hang up


  console.log
    [PlannerAgent] Plan generated successfully

      at PlannerAgent.plan (src/agents/planner.ts:98:17)

  console.log
    [OrchestratorAgent][e8b3e0e2-d27e-43a6-adb8-b30d31e72ac7] Plan generated: {
      steps: [
        {
          tool: 'shipments',
          params: [Object],
          depends_on: [],
          parallel: false
        },
        {
          tool: 'contaminants-detected',
          params: [Object],
          depends_on: [Array],
          parallel: false
        }
      ],
      metadata: {
        query: 'Show me contaminated shipments',
        timestamp: '2022-01-15T13:30:00Z',
        estimated_duration_ms: 2000
      }
    }

      at OrchestratorAgent.handleQuery (src/agents/orchestrator.ts:58:15)

  console.log
    [OrchestratorAgent][e8b3e0e2-d27e-43a6-adb8-b30d31e72ac7] Executing plan...

      at OrchestratorAgent.handleQuery (src/agents/orchestrator.ts:61:15)

  console.log
    [ExecutorAgent] Executing plan with 2 steps

      at ExecutorAgent.execute (src/agents/executor.ts:35:13)

  console.log
    [ExecutorAgent] Executing 1 steps in parallel

      at ExecutorAgent.execute (src/agents/executor.ts:52:15)

  console.log
    [ExecutorAgent] Executing step 0: shipments

      at ExecutorAgent.executeStep (src/agents/executor.ts:177:13)
          at Array.map (<anonymous>)

  console.error
    [ExecutorAgent] Step 0 (shipments) failed: Tool not found: shipments

      202 |
      203 |     } catch (error: any) {
    > 204 |       console.error(`[ExecutorAgent] Step ${index} (${step.tool}) failed:`, error.message);
          |               ^
      205 |
      206 |       return {
      207 |         success: false,

      at ExecutorAgent.executeStep (src/agents/executor.ts:204:15)
      at src/agents/executor.ts:166:19
          at Array.map (<anonymous>)
      at ExecutorAgent.executeBatch (src/agents/executor.ts:161:34)
      at ExecutorAgent.execute (src/agents/executor.ts:55:39)
      at OrchestratorAgent.handleQuery (src/agents/orchestrator.ts:62:43)
      at Object.<anonymous> (src/tests/integration/agents/system.integration.test.ts:157:24)

  console.log
    [ExecutorAgent] Executing 1 steps in parallel

      at ExecutorAgent.execute (src/agents/executor.ts:52:15)

  console.log
    [ExecutorAgent] Executing step 1: contaminants-detected

      at ExecutorAgent.executeStep (src/agents/executor.ts:177:13)
          at Array.map (<anonymous>)

  console.error
    [ExecutorAgent] Step 1 (contaminants-detected) failed: Tool not found: contaminants-detected

      202 |
      203 |     } catch (error: any) {
    > 204 |       console.error(`[ExecutorAgent] Step ${index} (${step.tool}) failed:`, error.message);
          |               ^
      205 |
      206 |       return {
      207 |         success: false,

      at ExecutorAgent.executeStep (src/agents/executor.ts:204:15)
      at src/agents/executor.ts:166:19
          at Array.map (<anonymous>)
      at ExecutorAgent.executeBatch (src/agents/executor.ts:161:34)
      at ExecutorAgent.execute (src/agents/executor.ts:55:39)
      at OrchestratorAgent.handleQuery (src/agents/orchestrator.ts:62:23)
      at Object.<anonymous> (src/tests/integration/agents/system.integration.test.ts:157:24)

  console.log
    [ExecutorAgent] Plan execution complete. 2 results

      at ExecutorAgent.execute (src/agents/executor.ts:79:13)

  console.log
    [OrchestratorAgent][e8b3e0e2-d27e-43a6-adb8-b30d31e72ac7] Execution complete. Results: 2

      at OrchestratorAgent.handleQuery (src/agents/orchestrator.ts:63:15)

  console.log
    [OrchestratorAgent][e8b3e0e2-d27e-43a6-adb8-b30d31e72ac7] Analyzing results...

      at OrchestratorAgent.handleQuery (src/agents/orchestrator.ts:66:15)

  console.log
    [AnalyzerAgent] Analyzing 2 tool results

      at AnalyzerAgent.analyze (src/agents/analyzer.ts:33:13)

  console.log
    [OrchestratorAgent][e8b3e0e2-d27e-43a6-adb8-b30d31e72ac7] Analysis complete

      at OrchestratorAgent.handleQuery (src/agents/orchestrator.ts:68:15)

  console.log
    [OrchestratorAgent][e8b3e0e2-d27e-43a6-adb8-b30d31e72ac7] Generating summary...

      at OrchestratorAgent.handleQuery (src/agents/orchestrator.ts:71:15)

  console.log
    [SummarizerAgent] Generating summary...

      at SummarizerAgent.summarize (src/agents/summarizer.ts:39:13)

  console.log
    [LLMProvider] Using openai provider

      at LLMProvider.generate (src/shared/llm/provider.ts:42:17)

  console.log
    [PlannerAgent] Plan generated successfully

      at PlannerAgent.plan (src/agents/planner.ts:98:17)

  console.log
    [PlannerAgent] Planning for query: Get shipments from last week

      at PlannerAgent.plan (src/agents/planner.ts:60:13)

  console.log
    [LLMProvider] Using openai provider

      at LLMProvider.generate (src/shared/llm/provider.ts:42:17)

  console.log
    [PlannerAgent] Plan generated successfully

      at PlannerAgent.plan (src/agents/planner.ts:98:17)

  console.log
    [OrchestratorAgent][ef3d9eed-0583-42d4-9e7c-3417dc62bfb8] Plan generated: {
      steps: [
        {
          tool: 'shipments',
          params: [Object],
          depends_on: [],
          parallel: false
        }
      ],
      metadata: {
        query: 'test query',
        timestamp: '2022-02-15T15:30:00Z',
        estimated_duration_ms: 1500
      }
    }

      at OrchestratorAgent.handleQuery (src/agents/orchestrator.ts:58:15)

  console.log
    [OrchestratorAgent][ef3d9eed-0583-42d4-9e7c-3417dc62bfb8] Executing plan...

      at OrchestratorAgent.handleQuery (src/agents/orchestrator.ts:61:15)

  console.log
    [ExecutorAgent] Executing plan with 1 steps

      at ExecutorAgent.execute (src/agents/executor.ts:35:13)

  console.log
    [ExecutorAgent] Executing 1 steps in parallel

      at ExecutorAgent.execute (src/agents/executor.ts:52:15)

  console.log
    [ExecutorAgent] Executing step 0: shipments

      at ExecutorAgent.executeStep (src/agents/executor.ts:177:13)
          at Array.map (<anonymous>)

  console.error
    [ExecutorAgent] Step 0 (shipments) failed: Tool not found: shipments

      202 |
      203 |     } catch (error: any) {
    > 204 |       console.error(`[ExecutorAgent] Step ${index} (${step.tool}) failed:`, error.message);
          |               ^
      205 |
      206 |       return {
      207 |         success: false,

      at ExecutorAgent.executeStep (src/agents/executor.ts:204:15)
      at src/agents/executor.ts:166:19
          at Array.map (<anonymous>)
      at ExecutorAgent.executeBatch (src/agents/executor.ts:161:34)
      at ExecutorAgent.execute (src/agents/executor.ts:55:39)
      at OrchestratorAgent.handleQuery (src/agents/orchestrator.ts:62:43)
      at Object.<anonymous> (src/tests/integration/agents/orchestrator.integration.test.ts:123:24)

  console.log
    [ExecutorAgent] Plan execution complete. 1 results

      at ExecutorAgent.execute (src/agents/executor.ts:79:13)

  console.log
    [OrchestratorAgent][ef3d9eed-0583-42d4-9e7c-3417dc62bfb8] Execution complete. Results: 1

      at OrchestratorAgent.handleQuery (src/agents/orchestrator.ts:63:15)

  console.log
    [OrchestratorAgent][ef3d9eed-0583-42d4-9e7c-3417dc62bfb8] Analyzing results...

      at OrchestratorAgent.handleQuery (src/agents/orchestrator.ts:66:15)

  console.log
    [AnalyzerAgent] Analyzing 1 tool results

      at AnalyzerAgent.analyze (src/agents/analyzer.ts:33:13)

  console.log
    [OrchestratorAgent][ef3d9eed-0583-42d4-9e7c-3417dc62bfb8] Analysis complete

      at OrchestratorAgent.handleQuery (src/agents/orchestrator.ts:68:15)

  console.log
    [OrchestratorAgent][ef3d9eed-0583-42d4-9e7c-3417dc62bfb8] Generating summary...

      at OrchestratorAgent.handleQuery (src/agents/orchestrator.ts:71:15)

  console.log
    [SummarizerAgent] Generating summary...

      at SummarizerAgent.summarize (src/agents/summarizer.ts:39:13)

  console.log
    [LLMProvider] Using openai provider

      at LLMProvider.generate (src/shared/llm/provider.ts:42:17)

  console.log
    [OrchestratorAgent] Stored request e8b3e0e2-d27e-43a6-adb8-b30d31e72ac7 in memory

      at OrchestratorAgent.storeInMemory (src/agents/orchestrator.ts:188:15)

  console.log
    [OrchestratorAgent][e8b3e0e2-d27e-43a6-adb8-b30d31e72ac7] Complete in 2407ms

      at OrchestratorAgent.handleQuery (src/agents/orchestrator.ts:98:15)

  console.log
    
    üìä Analysis Summary: No successful results to analyze

      at Object.<anonymous> (src/tests/integration/agents/system.integration.test.ts:170:15)

  console.log
    üí° Insights found: 0

      at Object.<anonymous> (src/tests/integration/agents/system.integration.test.ts:171:15)

  console.log
    üè∑Ô∏è  Entities extracted: 0

      at Object.<anonymous> (src/tests/integration/agents/system.integration.test.ts:172:15)

  console.log
    ‚ö†Ô∏è  Anomalies detected: 0

      at Object.<anonymous> (src/tests/integration/agents/system.integration.test.ts:173:15)

  console.log
    [OrchestratorAgent][3dd2fa53-7877-44c8-bdf6-5e4ec08a7c7b] Processing query: Get facilities

      at OrchestratorAgent.handleQuery (src/agents/orchestrator.ts:45:13)

  console.log
    [OrchestratorAgent][3dd2fa53-7877-44c8-bdf6-5e4ec08a7c7b] Loaded context: { semantic: undefined, episodic: undefined, entities: [] }

      at OrchestratorAgent.handleQuery (src/agents/orchestrator.ts:52:17)

  console.log
    [OrchestratorAgent][3dd2fa53-7877-44c8-bdf6-5e4ec08a7c7b] Planning...

      at OrchestratorAgent.handleQuery (src/agents/orchestrator.ts:56:15)

  console.log
    [PlannerAgent] Planning for query: Get facilities

      at PlannerAgent.plan (src/agents/planner.ts:60:13)

  console.log
    [LLMProvider] Using openai provider

      at LLMProvider.generate (src/shared/llm/provider.ts:42:17)

  console.log
    
    üî¨ Technical tone: Statistical analysis of the shipment data revealed the following key insights:
    1. The mean contamina

      at Object.<anonymous> (src/tests/integration/agents/summarizer.integration.test.ts:246:15)

  console.log
    [SummarizerAgent] Generating summary...

      at SummarizerAgent.summarize (src/agents/summarizer.ts:39:13)

  console.log
    [LLMProvider] Using openai provider

      at LLMProvider.generate (src/shared/llm/provider.ts:42:17)

  console.log
    [OrchestratorAgent] Stored request ef3d9eed-0583-42d4-9e7c-3417dc62bfb8 in memory

      at OrchestratorAgent.storeInMemory (src/agents/orchestrator.ts:188:15)

  console.log
    [OrchestratorAgent][ef3d9eed-0583-42d4-9e7c-3417dc62bfb8] Complete in 3963ms

      at OrchestratorAgent.handleQuery (src/agents/orchestrator.ts:98:15)

  console.log
    [OrchestratorAgent][0a304901-9f59-4103-a640-ea84c10acf30] Processing query: show me the same

      at OrchestratorAgent.handleQuery (src/agents/orchestrator.ts:45:13)

  console.log
    [OrchestratorAgent][0a304901-9f59-4103-a640-ea84c10acf30] Loaded context: {
      semantic: [
        {
          text: 'Previous query about shipments',
          score: 0.9,
          metadata: {}
        }
      ],
      episodic: undefined,
      entities: []
    }

      at OrchestratorAgent.handleQuery (src/agents/orchestrator.ts:52:17)

  console.log
    [OrchestratorAgent][0a304901-9f59-4103-a640-ea84c10acf30] Planning...

      at OrchestratorAgent.handleQuery (src/agents/orchestrator.ts:56:15)

  console.log
    [PlannerAgent] Planning for query: show me the same

      at PlannerAgent.plan (src/agents/planner.ts:60:13)

  console.log
    [LLMProvider] Using openai provider

      at LLMProvider.generate (src/shared/llm/provider.ts:42:17)

  console.log
    [PlannerAgent] Plan generated successfully

      at PlannerAgent.plan (src/agents/planner.ts:98:17)

  console.log
    [PlannerAgent] Planning for query: Show inspections from this week

      at PlannerAgent.plan (src/agents/planner.ts:60:13)

  console.log
    [LLMProvider] Using openai provider

      at LLMProvider.generate (src/shared/llm/provider.ts:42:17)

  console.log
    
    üòä Casual tone: Overall, the quick check on shipments shows that things are looking good with a confidence level of

      at Object.<anonymous> (src/tests/integration/agents/summarizer.integration.test.ts:269:15)

  console.log
    [SummarizerAgent] Generating summary...

      at SummarizerAgent.summarize (src/agents/summarizer.ts:39:13)

  console.log
    [LLMProvider] Using openai provider

      at LLMProvider.generate (src/shared/llm/provider.ts:42:17)

  console.log
    [PlannerAgent] Plan generated successfully

      at PlannerAgent.plan (src/agents/planner.ts:98:17)

  console.log
    [OrchestratorAgent][3dd2fa53-7877-44c8-bdf6-5e4ec08a7c7b] Plan generated: {
      steps: [
        { tool: 'facilities', params: {}, depends_on: [], parallel: false }
      ],
      metadata: {
        query: 'Get facilities',
        timestamp: '2022-01-15T13:30:00Z',
        estimated_duration_ms: 1000
      }
    }

      at OrchestratorAgent.handleQuery (src/agents/orchestrator.ts:58:15)

  console.log
    [OrchestratorAgent][3dd2fa53-7877-44c8-bdf6-5e4ec08a7c7b] Executing plan...

      at OrchestratorAgent.handleQuery (src/agents/orchestrator.ts:61:15)

  console.log
    [ExecutorAgent] Executing plan with 1 steps

      at ExecutorAgent.execute (src/agents/executor.ts:35:13)

  console.log
    [ExecutorAgent] Executing 1 steps in parallel

      at ExecutorAgent.execute (src/agents/executor.ts:52:15)

  console.log
    [ExecutorAgent] Executing step 0: facilities

      at ExecutorAgent.executeStep (src/agents/executor.ts:177:13)
          at Array.map (<anonymous>)

  console.error
    [ExecutorAgent] Step 0 (facilities) failed: Tool not found: facilities

      202 |
      203 |     } catch (error: any) {
    > 204 |       console.error(`[ExecutorAgent] Step ${index} (${step.tool}) failed:`, error.message);
          |               ^
      205 |
      206 |       return {
      207 |         success: false,

      at ExecutorAgent.executeStep (src/agents/executor.ts:204:15)
      at src/agents/executor.ts:166:19
          at Array.map (<anonymous>)
      at ExecutorAgent.executeBatch (src/agents/executor.ts:161:34)
      at ExecutorAgent.execute (src/agents/executor.ts:55:39)
      at OrchestratorAgent.handleQuery (src/agents/orchestrator.ts:62:43)
      at Object.<anonymous> (src/tests/integration/agents/system.integration.test.ts:177:24)

  console.log
    [ExecutorAgent] Plan execution complete. 1 results

      at ExecutorAgent.execute (src/agents/executor.ts:79:13)

  console.log
    [OrchestratorAgent][3dd2fa53-7877-44c8-bdf6-5e4ec08a7c7b] Execution complete. Results: 1

      at OrchestratorAgent.handleQuery (src/agents/orchestrator.ts:63:15)

  console.log
    [OrchestratorAgent][3dd2fa53-7877-44c8-bdf6-5e4ec08a7c7b] Analyzing results...

      at OrchestratorAgent.handleQuery (src/agents/orchestrator.ts:66:15)

  console.log
    [AnalyzerAgent] Analyzing 1 tool results

      at AnalyzerAgent.analyze (src/agents/analyzer.ts:33:13)

  console.log
    [OrchestratorAgent][3dd2fa53-7877-44c8-bdf6-5e4ec08a7c7b] Analysis complete

      at OrchestratorAgent.handleQuery (src/agents/orchestrator.ts:68:15)

  console.log
    [OrchestratorAgent][3dd2fa53-7877-44c8-bdf6-5e4ec08a7c7b] Generating summary...

      at OrchestratorAgent.handleQuery (src/agents/orchestrator.ts:71:15)

  console.log
    [SummarizerAgent] Generating summary...

      at SummarizerAgent.summarize (src/agents/summarizer.ts:39:13)

  console.log
    [LLMProvider] Using openai provider

      at LLMProvider.generate (src/shared/llm/provider.ts:42:17)

  console.log
    
    üìã Data-only response: The query executed successfully. No insights or anomalies were found in the data. Two entities were identified.

      at Object.<anonymous> (src/tests/integration/agents/summarizer.integration.test.ts:292:15)

  console.log
    [SummarizerAgent] Generating summary...

      at SummarizerAgent.summarize (src/agents/summarizer.ts:39:13)

  console.log
    [LLMProvider] Using openai provider

      at LLMProvider.generate (src/shared/llm/provider.ts:42:17)

  console.log
    [PlannerAgent] Plan generated successfully

      at PlannerAgent.plan (src/agents/planner.ts:98:17)

  console.log
    [OrchestratorAgent][0a304901-9f59-4103-a640-ea84c10acf30] Plan generated: {
      steps: [
        { tool: 'shipments', params: {}, depends_on: [], parallel: false }
      ],
      metadata: {
        query: 'show me the same',
        timestamp: '2022-01-15T15:30:00Z',
        estimated_duration_ms: 1000
      }
    }

      at OrchestratorAgent.handleQuery (src/agents/orchestrator.ts:58:15)

  console.log
    [OrchestratorAgent][0a304901-9f59-4103-a640-ea84c10acf30] Executing plan...

      at OrchestratorAgent.handleQuery (src/agents/orchestrator.ts:61:15)

  console.log
    [ExecutorAgent] Executing plan with 1 steps

      at ExecutorAgent.execute (src/agents/executor.ts:35:13)

  console.log
    [ExecutorAgent] Executing 1 steps in parallel

      at ExecutorAgent.execute (src/agents/executor.ts:52:15)

  console.log
    [ExecutorAgent] Executing step 0: shipments

      at ExecutorAgent.executeStep (src/agents/executor.ts:177:13)
          at Array.map (<anonymous>)

  console.error
    [ExecutorAgent] Step 0 (shipments) failed: Tool not found: shipments

      202 |
      203 |     } catch (error: any) {
    > 204 |       console.error(`[ExecutorAgent] Step ${index} (${step.tool}) failed:`, error.message);
          |               ^
      205 |
      206 |       return {
      207 |         success: false,

      at ExecutorAgent.executeStep (src/agents/executor.ts:204:15)
      at src/agents/executor.ts:166:19
          at Array.map (<anonymous>)
      at ExecutorAgent.executeBatch (src/agents/executor.ts:161:34)
      at ExecutorAgent.execute (src/agents/executor.ts:55:39)
      at OrchestratorAgent.handleQuery (src/agents/orchestrator.ts:62:43)
      at Object.<anonymous> (src/tests/integration/agents/orchestrator.integration.test.ts:138:24)

  console.log
    [ExecutorAgent] Plan execution complete. 1 results

      at ExecutorAgent.execute (src/agents/executor.ts:79:13)

  console.log
    [OrchestratorAgent][0a304901-9f59-4103-a640-ea84c10acf30] Execution complete. Results: 1

      at OrchestratorAgent.handleQuery (src/agents/orchestrator.ts:63:15)

  console.log
    [OrchestratorAgent][0a304901-9f59-4103-a640-ea84c10acf30] Analyzing results...

      at OrchestratorAgent.handleQuery (src/agents/orchestrator.ts:66:15)

  console.log
    [AnalyzerAgent] Analyzing 1 tool results

      at AnalyzerAgent.analyze (src/agents/analyzer.ts:33:13)

  console.log
    [OrchestratorAgent][0a304901-9f59-4103-a640-ea84c10acf30] Analysis complete

      at OrchestratorAgent.handleQuery (src/agents/orchestrator.ts:68:15)

  console.log
    [OrchestratorAgent][0a304901-9f59-4103-a640-ea84c10acf30] Generating summary...

      at OrchestratorAgent.handleQuery (src/agents/orchestrator.ts:71:15)

  console.log
    [SummarizerAgent] Generating summary...

      at SummarizerAgent.summarize (src/agents/summarizer.ts:39:13)

  console.log
    [LLMProvider] Using openai provider

      at LLMProvider.generate (src/shared/llm/provider.ts:42:17)

  console.log
    [OrchestratorAgent] Stored request 3dd2fa53-7877-44c8-bdf6-5e4ec08a7c7b in memory

      at OrchestratorAgent.storeInMemory (src/agents/orchestrator.ts:188:15)

  console.log
    [OrchestratorAgent][3dd2fa53-7877-44c8-bdf6-5e4ec08a7c7b] Complete in 2171ms

      at OrchestratorAgent.handleQuery (src/agents/orchestrator.ts:98:15)

  console.log
    [OrchestratorAgent][3ff164b2-5ad9-450c-9575-86c22033316f] Processing query: Get contaminated shipments

      at OrchestratorAgent.handleQuery (src/agents/orchestrator.ts:45:13)

  console.log
    [OrchestratorAgent][3ff164b2-5ad9-450c-9575-86c22033316f] Loaded context: {
      semantic: undefined,
      episodic: undefined,
      entities: [ 'entity:shipment' ]
    }

      at OrchestratorAgent.handleQuery (src/agents/orchestrator.ts:52:17)

  console.log
    [OrchestratorAgent][3ff164b2-5ad9-450c-9575-86c22033316f] Planning...

      at OrchestratorAgent.handleQuery (src/agents/orchestrator.ts:56:15)

  console.log
    [PlannerAgent] Planning for query: Get contaminated shipments

      at PlannerAgent.plan (src/agents/planner.ts:60:13)

  console.log
    [LLMProvider] Using openai provider

      at LLMProvider.generate (src/shared/llm/provider.ts:42:17)

  console.log
    [OrchestratorAgent] Stored request 0a304901-9f59-4103-a640-ea84c10acf30 in memory

      at OrchestratorAgent.storeInMemory (src/agents/orchestrator.ts:188:15)

  console.log
    [OrchestratorAgent][0a304901-9f59-4103-a640-ea84c10acf30] Complete in 1506ms

      at OrchestratorAgent.handleQuery (src/agents/orchestrator.ts:98:15)

  console.log
    [OrchestratorAgent][31296a9a-ff15-434f-9d35-f0a057dd6c29] Processing query: xyz invalid 123

      at OrchestratorAgent.handleQuery (src/agents/orchestrator.ts:45:13)

  console.log
    [OrchestratorAgent][31296a9a-ff15-434f-9d35-f0a057dd6c29] Loaded context: { semantic: undefined, episodic: undefined, entities: [] }

      at OrchestratorAgent.handleQuery (src/agents/orchestrator.ts:52:17)

  console.log
    [OrchestratorAgent][31296a9a-ff15-434f-9d35-f0a057dd6c29] Planning...

      at OrchestratorAgent.handleQuery (src/agents/orchestrator.ts:56:15)

  console.log
    [PlannerAgent] Planning for query: xyz invalid 123

      at PlannerAgent.plan (src/agents/planner.ts:60:13)

  console.log
    [LLMProvider] Using openai provider

      at LLMProvider.generate (src/shared/llm/provider.ts:42:17)

  console.error
    [PlannerAgent] Attempt 1/3 failed: Expected double-quoted property name in JSON at position 145 (line 8 column 7)

      101 |       } catch (error: any) {
      102 |         attempts++;
    > 103 |         console.error(`[PlannerAgent] Attempt ${attempts}/${this.config.maxRetries} failed:`, error.message);
          |                 ^
      104 |
      105 |         if (attempts >= this.config.maxRetries) {
      106 |           throw new Error(`Failed to generate valid plan after ${attempts} attempts: ${error.message}`);

      at PlannerAgent.plan (src/agents/planner.ts:103:17)
      at Object.<anonymous> (src/tests/integration/agents/planner.integration.test.ts:170:20)

  console.log
    [LLMProvider] Using openai provider

      at LLMProvider.generate (src/shared/llm/provider.ts:42:17)

  console.error
    [PlannerAgent] Attempt 1/3 failed: [
      {
        "origin": "array",
        "code": "too_small",
        "minimum": 1,
        "inclusive": true,
        "path": [
          "steps"
        ],
        "message": "Too small: expected array to have >=1 items"
      }
    ]

      101 |       } catch (error: any) {
      102 |         attempts++;
    > 103 |         console.error(`[PlannerAgent] Attempt ${attempts}/${this.config.maxRetries} failed:`, error.message);
          |                 ^
      104 |
      105 |         if (attempts >= this.config.maxRetries) {
      106 |           throw new Error(`Failed to generate valid plan after ${attempts} attempts: ${error.message}`);

      at PlannerAgent.plan (src/agents/planner.ts:103:17)
      at OrchestratorAgent.handleQuery (src/agents/orchestrator.ts:57:20)
      at Object.<anonymous> (src/tests/integration/agents/orchestrator.integration.test.ts:147:24)

  console.log
    [LLMProvider] Using openai provider

      at LLMProvider.generate (src/shared/llm/provider.ts:42:17)

  console.log
    
    üìö Many insights summary length: 817

      at Object.<anonymous> (src/tests/integration/agents/summarizer.integration.test.ts:318:15)

  console.log
    Insights summarized: 12

      at Object.<anonymous> (src/tests/integration/agents/summarizer.integration.test.ts:319:15)

  console.log
    [SummarizerAgent] Generating summary...

      at SummarizerAgent.summarize (src/agents/summarizer.ts:39:13)

  console.log
    [LLMProvider] Using openai provider

      at LLMProvider.generate (src/shared/llm/provider.ts:42:17)

  console.error
    [PlannerAgent] Attempt 2/3 failed: [
      {
        "origin": "array",
        "code": "too_small",
        "minimum": 1,
        "inclusive": true,
        "path": [
          "steps"
        ],
        "message": "Too small: expected array to have >=1 items"
      }
    ]

      101 |       } catch (error: any) {
      102 |         attempts++;
    > 103 |         console.error(`[PlannerAgent] Attempt ${attempts}/${this.config.maxRetries} failed:`, error.message);
          |                 ^
      104 |
      105 |         if (attempts >= this.config.maxRetries) {
      106 |           throw new Error(`Failed to generate valid plan after ${attempts} attempts: ${error.message}`);

      at PlannerAgent.plan (src/agents/planner.ts:103:17)
      at OrchestratorAgent.handleQuery (src/agents/orchestrator.ts:57:20)
      at Object.<anonymous> (src/tests/integration/agents/orchestrator.integration.test.ts:147:24)

  console.log
    [LLMProvider] Using openai provider

      at LLMProvider.generate (src/shared/llm/provider.ts:42:17)

  console.log
    [PlannerAgent] Plan generated successfully

      at PlannerAgent.plan (src/agents/planner.ts:98:17)

  console.log
    [PlannerAgent] Planning for query: Get today's contaminants

      at PlannerAgent.plan (src/agents/planner.ts:60:13)

  console.log
    [LLMProvider] Using openai provider

      at LLMProvider.generate (src/shared/llm/provider.ts:42:17)

  console.log
    [PlannerAgent] Plan generated successfully

      at PlannerAgent.plan (src/agents/planner.ts:98:17)

  console.log
    [OrchestratorAgent][3ff164b2-5ad9-450c-9575-86c22033316f] Plan generated: {
      steps: [
        {
          tool: 'shipments',
          params: [Object],
          depends_on: [],
          parallel: false
        },
        {
          tool: 'contaminants-detected',
          params: [Object],
          depends_on: [Array],
          parallel: false
        }
      ],
      metadata: {
        query: 'Get contaminated shipments',
        timestamp: '2022-01-01T12:00:00Z',
        estimated_duration_ms: 2000
      }
    }

      at OrchestratorAgent.handleQuery (src/agents/orchestrator.ts:58:15)

  console.log
    [OrchestratorAgent][3ff164b2-5ad9-450c-9575-86c22033316f] Executing plan...

      at OrchestratorAgent.handleQuery (src/agents/orchestrator.ts:61:15)

  console.log
    [ExecutorAgent] Executing plan with 2 steps

      at ExecutorAgent.execute (src/agents/executor.ts:35:13)

  console.log
    [ExecutorAgent] Executing 1 steps in parallel

      at ExecutorAgent.execute (src/agents/executor.ts:52:15)

  console.log
    [ExecutorAgent] Executing step 0: shipments

      at ExecutorAgent.executeStep (src/agents/executor.ts:177:13)
          at Array.map (<anonymous>)

  console.error
    [ExecutorAgent] Step 0 (shipments) failed: Tool not found: shipments

      202 |
      203 |     } catch (error: any) {
    > 204 |       console.error(`[ExecutorAgent] Step ${index} (${step.tool}) failed:`, error.message);
          |               ^
      205 |
      206 |       return {
      207 |         success: false,

      at ExecutorAgent.executeStep (src/agents/executor.ts:204:15)
      at src/agents/executor.ts:166:19
          at Array.map (<anonymous>)
      at ExecutorAgent.executeBatch (src/agents/executor.ts:161:34)
      at ExecutorAgent.execute (src/agents/executor.ts:55:39)
      at OrchestratorAgent.handleQuery (src/agents/orchestrator.ts:62:43)
      at Object.<anonymous> (src/tests/integration/agents/system.integration.test.ts:189:24)

  console.log
    [ExecutorAgent] Executing 1 steps in parallel

      at ExecutorAgent.execute (src/agents/executor.ts:52:15)

  console.log
    [ExecutorAgent] Executing step 1: contaminants-detected

      at ExecutorAgent.executeStep (src/agents/executor.ts:177:13)
          at Array.map (<anonymous>)

  console.error
    [ExecutorAgent] Step 1 (contaminants-detected) failed: Tool not found: contaminants-detected

      202 |
      203 |     } catch (error: any) {
    > 204 |       console.error(`[ExecutorAgent] Step ${index} (${step.tool}) failed:`, error.message);
          |               ^
      205 |
      206 |       return {
      207 |         success: false,

      at ExecutorAgent.executeStep (src/agents/executor.ts:204:15)
      at src/agents/executor.ts:166:19
          at Array.map (<anonymous>)
      at ExecutorAgent.executeBatch (src/agents/executor.ts:161:34)
      at ExecutorAgent.execute (src/agents/executor.ts:55:39)
      at OrchestratorAgent.handleQuery (src/agents/orchestrator.ts:62:23)
      at Object.<anonymous> (src/tests/integration/agents/system.integration.test.ts:189:24)

  console.log
    [ExecutorAgent] Plan execution complete. 2 results

      at ExecutorAgent.execute (src/agents/executor.ts:79:13)

  console.log
    [OrchestratorAgent][3ff164b2-5ad9-450c-9575-86c22033316f] Execution complete. Results: 2

      at OrchestratorAgent.handleQuery (src/agents/orchestrator.ts:63:15)

  console.log
    [OrchestratorAgent][3ff164b2-5ad9-450c-9575-86c22033316f] Analyzing results...

      at OrchestratorAgent.handleQuery (src/agents/orchestrator.ts:66:15)

  console.log
    [AnalyzerAgent] Analyzing 2 tool results

      at AnalyzerAgent.analyze (src/agents/analyzer.ts:33:13)

  console.log
    [OrchestratorAgent][3ff164b2-5ad9-450c-9575-86c22033316f] Analysis complete

      at OrchestratorAgent.handleQuery (src/agents/orchestrator.ts:68:15)

  console.log
    [OrchestratorAgent][3ff164b2-5ad9-450c-9575-86c22033316f] Generating summary...

      at OrchestratorAgent.handleQuery (src/agents/orchestrator.ts:71:15)

  console.log
    [SummarizerAgent] Generating summary...

      at SummarizerAgent.summarize (src/agents/summarizer.ts:39:13)

  console.log
    [LLMProvider] Using openai provider

      at LLMProvider.generate (src/shared/llm/provider.ts:42:17)

  console.error
    [PlannerAgent] Attempt 3/3 failed: [
      {
        "origin": "array",
        "code": "too_small",
        "minimum": 1,
        "inclusive": true,
        "path": [
          "steps"
        ],
        "message": "Too small: expected array to have >=1 items"
      }
    ]

      101 |       } catch (error: any) {
      102 |         attempts++;
    > 103 |         console.error(`[PlannerAgent] Attempt ${attempts}/${this.config.maxRetries} failed:`, error.message);
          |                 ^
      104 |
      105 |         if (attempts >= this.config.maxRetries) {
      106 |           throw new Error(`Failed to generate valid plan after ${attempts} attempts: ${error.message}`);

      at PlannerAgent.plan (src/agents/planner.ts:103:17)
      at OrchestratorAgent.handleQuery (src/agents/orchestrator.ts:57:20)
      at Object.<anonymous> (src/tests/integration/agents/orchestrator.integration.test.ts:147:24)

  console.error
    [OrchestratorAgent][31296a9a-ff15-434f-9d35-f0a057dd6c29] Error: Error: Failed to generate valid plan after 3 attempts: [
      {
        "origin": "array",
        "code": "too_small",
        "minimum": 1,
        "inclusive": true,
        "path": [
          "steps"
        ],
        "message": "Too small: expected array to have >=1 items"
      }
    ]
        at PlannerAgent.plan (/Users/yab/Projects/clear-ai-v2/src/agents/planner.ts:106:17)
        at processTicksAndRejections (node:internal/process/task_queues:105:5)
        at OrchestratorAgent.handleQuery (/Users/yab/Projects/clear-ai-v2/src/agents/orchestrator.ts:57:20)
        at Object.<anonymous> (/Users/yab/Projects/clear-ai-v2/src/tests/integration/agents/orchestrator.integration.test.ts:147:24)

      101 |
      102 |     } catch (error: any) {
    > 103 |       console.error(`[OrchestratorAgent][${requestId}] Error:`, error);
          |               ^
      104 |
      105 |       // Store error in memory for learning
      106 |       if (this.config.enableMemory) {

      at OrchestratorAgent.handleQuery (src/agents/orchestrator.ts:103:15)
      at Object.<anonymous> (src/tests/integration/agents/orchestrator.integration.test.ts:147:24)

  console.log
    [OrchestratorAgent][01241171-3032-4f54-9268-f2f6206c901b] Processing query: show me their shipments

      at OrchestratorAgent.handleQuery (src/agents/orchestrator.ts:45:13)

  console.log
    [OrchestratorAgent][01241171-3032-4f54-9268-f2f6206c901b] Loaded context: {
      semantic: [
        {
          text: 'Previous query: Get facilities in Berlin',
          score: 0.95,
          metadata: [Object]
        },
        {
          text: 'Facility F1 has capacity issues',
          score: 0.85,
          metadata: [Object]
        }
      ],
      episodic: undefined,
      entities: [ 'entity:shipment' ]
    }

      at OrchestratorAgent.handleQuery (src/agents/orchestrator.ts:52:17)

  console.log
    [OrchestratorAgent][01241171-3032-4f54-9268-f2f6206c901b] Planning...

      at OrchestratorAgent.handleQuery (src/agents/orchestrator.ts:56:15)

  console.log
    [PlannerAgent] Planning for query: show me their shipments

      at PlannerAgent.plan (src/agents/planner.ts:60:13)

  console.log
    [LLMProvider] Using openai provider

      at LLMProvider.generate (src/shared/llm/provider.ts:42:17)

  console.log
    
    ü§ñ LLM-enhanced summary: The analysis of the complex scenario identified an unusual pattern that requires contextual understanding and domain expertise to interpret correctly

      at Object.<anonymous> (src/tests/integration/agents/summarizer.integration.test.ts:352:15)

  console.log
    [SummarizerAgent] Generating summary...

      at SummarizerAgent.summarize (src/agents/summarizer.ts:39:13)

  console.log
    [LLMProvider] Using openai provider

      at LLMProvider.generate (src/shared/llm/provider.ts:42:17)

  console.log
    [OrchestratorAgent] Stored request 3ff164b2-5ad9-450c-9575-86c22033316f in memory

      at OrchestratorAgent.storeInMemory (src/agents/orchestrator.ts:188:15)

  console.log
    [OrchestratorAgent][3ff164b2-5ad9-450c-9575-86c22033316f] Complete in 2586ms

      at OrchestratorAgent.handleQuery (src/agents/orchestrator.ts:98:15)

  console.log
    [OrchestratorAgent][5a96dbfc-ad25-47a3-8461-3eb76b6c3f1b] Processing query: Get shipments

      at OrchestratorAgent.handleQuery (src/agents/orchestrator.ts:45:13)

  console.log
    [OrchestratorAgent][5a96dbfc-ad25-47a3-8461-3eb76b6c3f1b] Loaded context: {
      semantic: undefined,
      episodic: undefined,
      entities: [ 'entity:shipment' ]
    }

      at OrchestratorAgent.handleQuery (src/agents/orchestrator.ts:52:17)

  console.log
    [OrchestratorAgent][5a96dbfc-ad25-47a3-8461-3eb76b6c3f1b] Planning...

      at OrchestratorAgent.handleQuery (src/agents/orchestrator.ts:56:15)

  console.log
    [PlannerAgent] Planning for query: Get shipments

      at PlannerAgent.plan (src/agents/planner.ts:60:13)

  console.log
    [LLMProvider] Using openai provider

      at LLMProvider.generate (src/shared/llm/provider.ts:42:17)

  console.log
    
    ‚àÖ Empty analysis message: No data was found in the query analysis.

      at Object.<anonymous> (src/tests/integration/agents/summarizer.integration.test.ts:370:15)

FAIL src/tests/integration/agents/summarizer.integration.test.ts (15.15 s)
  SummarizerAgent Integration
    Real LLM Summarization
      ‚úì should generate summary with real LLM (1117 ms)
      ‚úï should handle complex analysis with anomalies (868 ms)
    Response Quality
      ‚úì should produce readable responses (769 ms)
    Output Formats
      ‚úì should produce plain text output with small dataset (526 ms)
      ‚úì should produce plain text output with large dataset (2015 ms)
      ‚úì should produce markdown output format with tables and lists (1242 ms)
    Tone Control
      ‚úì should use professional tone with formal language (1096 ms)
      ‚úì should use technical tone with detailed metrics (1427 ms)
      ‚úì should use casual tone with simplified language (977 ms)
    Edge Cases
      ‚úì should handle summarization with no insights (data-only response) (509 ms)
      ‚úì should handle summarization with many insights (10+ insights) (2314 ms)
      ‚úì should handle LLM fallback when needed (764 ms)
      ‚úì should handle empty analysis gracefully (447 ms)

  ‚óè SummarizerAgent Integration ‚Ä∫ Real LLM Summarization ‚Ä∫ should handle complex analysis with anomalies

    expect(received).toContain(expected) // indexOf

    Expected substring: "Critical"
    Received string:    "Three facilities are operating above 90% capacity with a confidence level of 95%. However, critical contamination was detected in 2 shipments. It is essential to address the contamination issue promptly to ensure the quality and safety of the products. Recommendations include investigating the source of contamination, implementing corrective actions, and monitoring future shipments closely to prevent similar incidents."

      86 |
      87 |       expect(response.message).toBeDefined();
    > 88 |       expect(response.message).toContain('Critical' || 'critical' || 'capacity');
         |                                ^
      89 |       
      90 |       console.log('\nüìù Summary with anomalies:', response.message);
      91 |     }, 30000);

      at Object.<anonymous> (src/tests/integration/agents/summarizer.integration.test.ts:88:32)

  console.log
    [PlannerAgent] Plan generated successfully

      at PlannerAgent.plan (src/agents/planner.ts:98:17)

  console.log
    [OrchestratorAgent][5a96dbfc-ad25-47a3-8461-3eb76b6c3f1b] Plan generated: {
      steps: [
        { tool: 'shipments', params: {}, depends_on: [], parallel: false }
      ],
      metadata: {
        query: 'Get shipments',
        timestamp: '2022-01-01T12:00:00Z',
        estimated_duration_ms: 1500
      }
    }

      at OrchestratorAgent.handleQuery (src/agents/orchestrator.ts:58:15)

  console.log
    [OrchestratorAgent][5a96dbfc-ad25-47a3-8461-3eb76b6c3f1b] Executing plan...

      at OrchestratorAgent.handleQuery (src/agents/orchestrator.ts:61:15)

  console.log
    [ExecutorAgent] Executing plan with 1 steps

      at ExecutorAgent.execute (src/agents/executor.ts:35:13)

  console.log
    [ExecutorAgent] Executing 1 steps in parallel

      at ExecutorAgent.execute (src/agents/executor.ts:52:15)

  console.log
    [ExecutorAgent] Executing step 0: shipments

      at ExecutorAgent.executeStep (src/agents/executor.ts:177:13)
          at Array.map (<anonymous>)

  console.error
    [ExecutorAgent] Step 0 (shipments) failed: Tool not found: shipments

      202 |
      203 |     } catch (error: any) {
    > 204 |       console.error(`[ExecutorAgent] Step ${index} (${step.tool}) failed:`, error.message);
          |               ^
      205 |
      206 |       return {
      207 |         success: false,

      at ExecutorAgent.executeStep (src/agents/executor.ts:204:15)
      at src/agents/executor.ts:166:19
          at Array.map (<anonymous>)
      at ExecutorAgent.executeBatch (src/agents/executor.ts:161:34)
      at ExecutorAgent.execute (src/agents/executor.ts:55:39)
      at OrchestratorAgent.handleQuery (src/agents/orchestrator.ts:62:43)
      at Object.<anonymous> (src/tests/integration/agents/system.integration.test.ts:198:25)

  console.log
    [ExecutorAgent] Plan execution complete. 1 results

      at ExecutorAgent.execute (src/agents/executor.ts:79:13)

  console.log
    [OrchestratorAgent][5a96dbfc-ad25-47a3-8461-3eb76b6c3f1b] Execution complete. Results: 1

      at OrchestratorAgent.handleQuery (src/agents/orchestrator.ts:63:15)

  console.log
    [OrchestratorAgent][5a96dbfc-ad25-47a3-8461-3eb76b6c3f1b] Analyzing results...

      at OrchestratorAgent.handleQuery (src/agents/orchestrator.ts:66:15)

  console.log
    [AnalyzerAgent] Analyzing 1 tool results

      at AnalyzerAgent.analyze (src/agents/analyzer.ts:33:13)

  console.log
    [OrchestratorAgent][5a96dbfc-ad25-47a3-8461-3eb76b6c3f1b] Analysis complete

      at OrchestratorAgent.handleQuery (src/agents/orchestrator.ts:68:15)

  console.log
    [OrchestratorAgent][5a96dbfc-ad25-47a3-8461-3eb76b6c3f1b] Generating summary...

      at OrchestratorAgent.handleQuery (src/agents/orchestrator.ts:71:15)

  console.log
    [SummarizerAgent] Generating summary...

      at SummarizerAgent.summarize (src/agents/summarizer.ts:39:13)

  console.log
    [LLMProvider] Using openai provider

      at LLMProvider.generate (src/shared/llm/provider.ts:42:17)

  console.log
    [PlannerAgent] Plan generated successfully

      at PlannerAgent.plan (src/agents/planner.ts:98:17)

  console.log
    [OrchestratorAgent][01241171-3032-4f54-9268-f2f6206c901b] Plan generated: {
      steps: [
        {
          tool: 'shipments',
          params: {},
          depends_on: [Array],
          parallel: false
        }
      ],
      metadata: {
        query: 'show me their shipments',
        timestamp: '2022-01-15T15:30:00Z',
        estimated_duration_ms: 1500
      }
    }

      at OrchestratorAgent.handleQuery (src/agents/orchestrator.ts:58:15)

  console.log
    [OrchestratorAgent][01241171-3032-4f54-9268-f2f6206c901b] Executing plan...

      at OrchestratorAgent.handleQuery (src/agents/orchestrator.ts:61:15)

  console.log
    [ExecutorAgent] Executing plan with 1 steps

      at ExecutorAgent.execute (src/agents/executor.ts:35:13)

  console.error
    [OrchestratorAgent][01241171-3032-4f54-9268-f2f6206c901b] Error: Error: Circular dependency detected in plan
        at ExecutorAgent.detectCircularDependencies (/Users/yab/Projects/clear-ai-v2/src/agents/executor.ts:124:17)
        at ExecutorAgent.buildExecutionGraph (/Users/yab/Projects/clear-ai-v2/src/agents/executor.ts:95:10)
        at ExecutorAgent.execute (/Users/yab/Projects/clear-ai-v2/src/agents/executor.ts:41:24)
        at OrchestratorAgent.handleQuery (/Users/yab/Projects/clear-ai-v2/src/agents/orchestrator.ts:62:43)
        at processTicksAndRejections (node:internal/process/task_queues:105:5)
        at Object.<anonymous> (/Users/yab/Projects/clear-ai-v2/src/tests/integration/agents/orchestrator.integration.test.ts:174:24)

      101 |
      102 |     } catch (error: any) {
    > 103 |       console.error(`[OrchestratorAgent][${requestId}] Error:`, error);
          |               ^
      104 |
      105 |       // Store error in memory for learning
      106 |       if (this.config.enableMemory) {

      at OrchestratorAgent.handleQuery (src/agents/orchestrator.ts:103:15)
      at Object.<anonymous> (src/tests/integration/agents/orchestrator.integration.test.ts:174:24)

  console.log
    
    üß† Follow-up query with context: {
      message: 'I encountered an error processing your request: Circular dependency detected in plan',
      contextLoaded: 1
    }

      at Object.<anonymous> (src/tests/integration/agents/orchestrator.integration.test.ts:179:15)

  console.log
    [OrchestratorAgent][d39afb29-0f18-4923-b8e7-81a001353390] Processing query: Get data from nonexistent source XYZ

      at OrchestratorAgent.handleQuery (src/agents/orchestrator.ts:45:13)

  console.log
    [OrchestratorAgent][d39afb29-0f18-4923-b8e7-81a001353390] Loaded context: { semantic: undefined, episodic: undefined, entities: [] }

      at OrchestratorAgent.handleQuery (src/agents/orchestrator.ts:52:17)

  console.log
    [OrchestratorAgent][d39afb29-0f18-4923-b8e7-81a001353390] Planning...

      at OrchestratorAgent.handleQuery (src/agents/orchestrator.ts:56:15)

  console.log
    [PlannerAgent] Planning for query: Get data from nonexistent source XYZ

      at PlannerAgent.plan (src/agents/planner.ts:60:13)

  console.log
    [LLMProvider] Using openai provider

      at LLMProvider.generate (src/shared/llm/provider.ts:42:17)

  console.log
    [OrchestratorAgent] Stored request 5a96dbfc-ad25-47a3-8461-3eb76b6c3f1b in memory

      at OrchestratorAgent.storeInMemory (src/agents/orchestrator.ts:188:15)

  console.log
    [OrchestratorAgent][5a96dbfc-ad25-47a3-8461-3eb76b6c3f1b] Complete in 1673ms

      at OrchestratorAgent.handleQuery (src/agents/orchestrator.ts:98:15)

  console.log
    [OrchestratorAgent][afbd3449-9a1a-4967-8f15-8bf2dbe851a4] Processing query: Get facilities

      at OrchestratorAgent.handleQuery (src/agents/orchestrator.ts:45:13)

  console.log
    [OrchestratorAgent][afbd3449-9a1a-4967-8f15-8bf2dbe851a4] Loaded context: { semantic: undefined, episodic: undefined, entities: [] }

      at OrchestratorAgent.handleQuery (src/agents/orchestrator.ts:52:17)

  console.log
    [OrchestratorAgent][afbd3449-9a1a-4967-8f15-8bf2dbe851a4] Planning...

      at OrchestratorAgent.handleQuery (src/agents/orchestrator.ts:56:15)

  console.log
    [PlannerAgent] Planning for query: Get facilities

      at PlannerAgent.plan (src/agents/planner.ts:60:13)

  console.log
    [LLMProvider] Using openai provider

      at LLMProvider.generate (src/shared/llm/provider.ts:42:17)

  console.log
    [PlannerAgent] Plan generated successfully

      at PlannerAgent.plan (src/agents/planner.ts:98:17)

  console.log
    [PlannerAgent] Planning for query: Get contaminated shipments

      at PlannerAgent.plan (src/agents/planner.ts:60:13)

  console.log
    [LLMProvider] Using openai provider

      at LLMProvider.generate (src/shared/llm/provider.ts:42:17)

  console.error
    [PlannerAgent] Attempt 1/3 failed: [
      {
        "origin": "array",
        "code": "too_small",
        "minimum": 1,
        "inclusive": true,
        "path": [
          "steps"
        ],
        "message": "Too small: expected array to have >=1 items"
      }
    ]

      101 |       } catch (error: any) {
      102 |         attempts++;
    > 103 |         console.error(`[PlannerAgent] Attempt ${attempts}/${this.config.maxRetries} failed:`, error.message);
          |                 ^
      104 |
      105 |         if (attempts >= this.config.maxRetries) {
      106 |           throw new Error(`Failed to generate valid plan after ${attempts} attempts: ${error.message}`);

      at PlannerAgent.plan (src/agents/planner.ts:103:17)
      at OrchestratorAgent.handleQuery (src/agents/orchestrator.ts:57:20)
      at Object.<anonymous> (src/tests/integration/agents/orchestrator.integration.test.ts:187:24)

  console.log
    [LLMProvider] Using openai provider

      at LLMProvider.generate (src/shared/llm/provider.ts:42:17)

  console.log
    [PlannerAgent] Plan generated successfully

      at PlannerAgent.plan (src/agents/planner.ts:98:17)

  console.log
    [OrchestratorAgent][afbd3449-9a1a-4967-8f15-8bf2dbe851a4] Plan generated: {
      steps: [
        { tool: 'facilities', params: {}, depends_on: [], parallel: false }
      ],
      metadata: {
        query: 'Get facilities',
        timestamp: '2022-01-15T13:30:00Z',
        estimated_duration_ms: 1500
      }
    }

      at OrchestratorAgent.handleQuery (src/agents/orchestrator.ts:58:15)

  console.log
    [OrchestratorAgent][afbd3449-9a1a-4967-8f15-8bf2dbe851a4] Executing plan...

      at OrchestratorAgent.handleQuery (src/agents/orchestrator.ts:61:15)

  console.log
    [ExecutorAgent] Executing plan with 1 steps

      at ExecutorAgent.execute (src/agents/executor.ts:35:13)

  console.log
    [ExecutorAgent] Executing 1 steps in parallel

      at ExecutorAgent.execute (src/agents/executor.ts:52:15)

  console.log
    [ExecutorAgent] Executing step 0: facilities

      at ExecutorAgent.executeStep (src/agents/executor.ts:177:13)
          at Array.map (<anonymous>)

  console.error
    [ExecutorAgent] Step 0 (facilities) failed: Tool not found: facilities

      202 |
      203 |     } catch (error: any) {
    > 204 |       console.error(`[ExecutorAgent] Step ${index} (${step.tool}) failed:`, error.message);
          |               ^
      205 |
      206 |       return {
      207 |         success: false,

      at ExecutorAgent.executeStep (src/agents/executor.ts:204:15)
      at src/agents/executor.ts:166:19
          at Array.map (<anonymous>)
      at ExecutorAgent.executeBatch (src/agents/executor.ts:161:34)
      at ExecutorAgent.execute (src/agents/executor.ts:55:39)
      at OrchestratorAgent.handleQuery (src/agents/orchestrator.ts:62:43)
      at Object.<anonymous> (src/tests/integration/agents/system.integration.test.ts:199:25)

  console.log
    [ExecutorAgent] Plan execution complete. 1 results

      at ExecutorAgent.execute (src/agents/executor.ts:79:13)

  console.log
    [OrchestratorAgent][afbd3449-9a1a-4967-8f15-8bf2dbe851a4] Execution complete. Results: 1

      at OrchestratorAgent.handleQuery (src/agents/orchestrator.ts:63:15)

  console.log
    [OrchestratorAgent][afbd3449-9a1a-4967-8f15-8bf2dbe851a4] Analyzing results...

      at OrchestratorAgent.handleQuery (src/agents/orchestrator.ts:66:15)

  console.log
    [AnalyzerAgent] Analyzing 1 tool results

      at AnalyzerAgent.analyze (src/agents/analyzer.ts:33:13)

  console.log
    [OrchestratorAgent][afbd3449-9a1a-4967-8f15-8bf2dbe851a4] Analysis complete

      at OrchestratorAgent.handleQuery (src/agents/orchestrator.ts:68:15)

  console.log
    [OrchestratorAgent][afbd3449-9a1a-4967-8f15-8bf2dbe851a4] Generating summary...

      at OrchestratorAgent.handleQuery (src/agents/orchestrator.ts:71:15)

  console.log
    [SummarizerAgent] Generating summary...

      at SummarizerAgent.summarize (src/agents/summarizer.ts:39:13)

  console.log
    [LLMProvider] Using openai provider

      at LLMProvider.generate (src/shared/llm/provider.ts:42:17)

  console.log
    [PlannerAgent] Plan generated successfully

      at PlannerAgent.plan (src/agents/planner.ts:98:17)

  console.log
    [PlannerAgent] Planning for query: test query

      at PlannerAgent.plan (src/agents/planner.ts:60:13)

  console.log
    [LLMProvider] Using openai provider

      at LLMProvider.generate (src/shared/llm/provider.ts:42:17)

  console.log
    [OrchestratorAgent] Stored request afbd3449-9a1a-4967-8f15-8bf2dbe851a4 in memory

      at OrchestratorAgent.storeInMemory (src/agents/orchestrator.ts:188:15)

  console.log
    [OrchestratorAgent][afbd3449-9a1a-4967-8f15-8bf2dbe851a4] Complete in 1470ms

      at OrchestratorAgent.handleQuery (src/agents/orchestrator.ts:98:15)

  console.log
    [OrchestratorAgent][c8016eb4-7243-4714-ab88-32f28b5e5b97] Processing query: invalid tool request xyz

      at OrchestratorAgent.handleQuery (src/agents/orchestrator.ts:45:13)

  console.log
    [OrchestratorAgent][c8016eb4-7243-4714-ab88-32f28b5e5b97] Loaded context: { semantic: undefined, episodic: undefined, entities: [] }

      at OrchestratorAgent.handleQuery (src/agents/orchestrator.ts:52:17)

  console.log
    [OrchestratorAgent][c8016eb4-7243-4714-ab88-32f28b5e5b97] Planning...

      at OrchestratorAgent.handleQuery (src/agents/orchestrator.ts:56:15)

  console.log
    [PlannerAgent] Planning for query: invalid tool request xyz

      at PlannerAgent.plan (src/agents/planner.ts:60:13)

  console.log
    [LLMProvider] Using openai provider

      at LLMProvider.generate (src/shared/llm/provider.ts:42:17)

  console.error
    [PlannerAgent] Attempt 2/3 failed: [
      {
        "origin": "array",
        "code": "too_small",
        "minimum": 1,
        "inclusive": true,
        "path": [
          "steps"
        ],
        "message": "Too small: expected array to have >=1 items"
      }
    ]

      101 |       } catch (error: any) {
      102 |         attempts++;
    > 103 |         console.error(`[PlannerAgent] Attempt ${attempts}/${this.config.maxRetries} failed:`, error.message);
          |                 ^
      104 |
      105 |         if (attempts >= this.config.maxRetries) {
      106 |           throw new Error(`Failed to generate valid plan after ${attempts} attempts: ${error.message}`);

      at PlannerAgent.plan (src/agents/planner.ts:103:17)
      at OrchestratorAgent.handleQuery (src/agents/orchestrator.ts:57:20)
      at Object.<anonymous> (src/tests/integration/agents/orchestrator.integration.test.ts:187:24)

  console.log
    [LLMProvider] Using openai provider

      at LLMProvider.generate (src/shared/llm/provider.ts:42:17)

  console.error
    [PlannerAgent] Attempt 1/3 failed: [
      {
        "origin": "array",
        "code": "too_small",
        "minimum": 1,
        "inclusive": true,
        "path": [
          "steps"
        ],
        "message": "Too small: expected array to have >=1 items"
      }
    ]

      101 |       } catch (error: any) {
      102 |         attempts++;
    > 103 |         console.error(`[PlannerAgent] Attempt ${attempts}/${this.config.maxRetries} failed:`, error.message);
          |                 ^
      104 |
      105 |         if (attempts >= this.config.maxRetries) {
      106 |           throw new Error(`Failed to generate valid plan after ${attempts} attempts: ${error.message}`);

      at PlannerAgent.plan (src/agents/planner.ts:103:17)
      at Object.<anonymous> (src/tests/integration/agents/planner.integration.test.ts:210:20)

  console.log
    [LLMProvider] Using openai provider

      at LLMProvider.generate (src/shared/llm/provider.ts:42:17)

  console.error
    [PlannerAgent] Attempt 1/3 failed: [
      {
        "origin": "array",
        "code": "too_small",
        "minimum": 1,
        "inclusive": true,
        "path": [
          "steps"
        ],
        "message": "Too small: expected array to have >=1 items"
      }
    ]

      101 |       } catch (error: any) {
      102 |         attempts++;
    > 103 |         console.error(`[PlannerAgent] Attempt ${attempts}/${this.config.maxRetries} failed:`, error.message);
          |                 ^
      104 |
      105 |         if (attempts >= this.config.maxRetries) {
      106 |           throw new Error(`Failed to generate valid plan after ${attempts} attempts: ${error.message}`);

      at PlannerAgent.plan (src/agents/planner.ts:103:17)
      at OrchestratorAgent.handleQuery (src/agents/orchestrator.ts:57:20)
      at Object.<anonymous> (src/tests/integration/agents/system.integration.test.ts:209:24)

  console.log
    [LLMProvider] Using openai provider

      at LLMProvider.generate (src/shared/llm/provider.ts:42:17)

  console.error
    [PlannerAgent] Attempt 3/3 failed: [
      {
        "origin": "array",
        "code": "too_small",
        "minimum": 1,
        "inclusive": true,
        "path": [
          "steps"
        ],
        "message": "Too small: expected array to have >=1 items"
      }
    ]

      101 |       } catch (error: any) {
      102 |         attempts++;
    > 103 |         console.error(`[PlannerAgent] Attempt ${attempts}/${this.config.maxRetries} failed:`, error.message);
          |                 ^
      104 |
      105 |         if (attempts >= this.config.maxRetries) {
      106 |           throw new Error(`Failed to generate valid plan after ${attempts} attempts: ${error.message}`);

      at PlannerAgent.plan (src/agents/planner.ts:103:17)
      at OrchestratorAgent.handleQuery (src/agents/orchestrator.ts:57:20)
      at Object.<anonymous> (src/tests/integration/agents/orchestrator.integration.test.ts:187:24)

  console.error
    [OrchestratorAgent][d39afb29-0f18-4923-b8e7-81a001353390] Error: Error: Failed to generate valid plan after 3 attempts: [
      {
        "origin": "array",
        "code": "too_small",
        "minimum": 1,
        "inclusive": true,
        "path": [
          "steps"
        ],
        "message": "Too small: expected array to have >=1 items"
      }
    ]
        at PlannerAgent.plan (/Users/yab/Projects/clear-ai-v2/src/agents/planner.ts:106:17)
        at processTicksAndRejections (node:internal/process/task_queues:105:5)
        at OrchestratorAgent.handleQuery (/Users/yab/Projects/clear-ai-v2/src/agents/orchestrator.ts:57:20)
        at Object.<anonymous> (/Users/yab/Projects/clear-ai-v2/src/tests/integration/agents/orchestrator.integration.test.ts:187:24)

      101 |
      102 |     } catch (error: any) {
    > 103 |       console.error(`[OrchestratorAgent][${requestId}] Error:`, error);
          |               ^
      104 |
      105 |       // Store error in memory for learning
      106 |       if (this.config.enableMemory) {

      at OrchestratorAgent.handleQuery (src/agents/orchestrator.ts:103:15)
      at Object.<anonymous> (src/tests/integration/agents/orchestrator.integration.test.ts:187:24)

  console.log
    
    ‚ö†Ô∏è  Error propagated correctly: I encountered an error processing your request: Failed to generate valid plan after 3 attempts: [

      at Object.<anonymous> (src/tests/integration/agents/orchestrator.integration.test.ts:195:17)

  console.log
    [OrchestratorAgent][bf3dae14-0696-47c2-ae76-0df7658bf073] Processing query: Get shipments

      at OrchestratorAgent.handleQuery (src/agents/orchestrator.ts:45:13)

  console.error
    [OrchestratorAgent] Failed to load context: Error: Memory unavailable
        at Object.<anonymous> (/Users/yab/Projects/clear-ai-v2/src/tests/integration/agents/orchestrator.integration.test.ts:202:52)
        at Promise.finally.completed (/Users/yab/.yarn/berry/cache/jest-circus-npm-30.2.0-95f1898763-10c0.zip/node_modules/jest-circus/build/jestAdapterInit.js:1557:28)
        at new Promise (<anonymous>)
        at callAsyncCircusFn (/Users/yab/.yarn/berry/cache/jest-circus-npm-30.2.0-95f1898763-10c0.zip/node_modules/jest-circus/build/jestAdapterInit.js:1497:10)
        at _callCircusTest (/Users/yab/.yarn/berry/cache/jest-circus-npm-30.2.0-95f1898763-10c0.zip/node_modules/jest-circus/build/jestAdapterInit.js:1007:40)
        at processTicksAndRejections (node:internal/process/task_queues:105:5)
        at _runTest (/Users/yab/.yarn/berry/cache/jest-circus-npm-30.2.0-95f1898763-10c0.zip/node_modules/jest-circus/build/jestAdapterInit.js:947:3)
        at /Users/yab/.yarn/berry/cache/jest-circus-npm-30.2.0-95f1898763-10c0.zip/node_modules/jest-circus/build/jestAdapterInit.js:849:7
        at _runTestsForDescribeBlock (/Users/yab/.yarn/berry/cache/jest-circus-npm-30.2.0-95f1898763-10c0.zip/node_modules/jest-circus/build/jestAdapterInit.js:862:11)
        at _runTestsForDescribeBlock (/Users/yab/.yarn/berry/cache/jest-circus-npm-30.2.0-95f1898763-10c0.zip/node_modules/jest-circus/build/jestAdapterInit.js:857:11)
        at _runTestsForDescribeBlock (/Users/yab/.yarn/berry/cache/jest-circus-npm-30.2.0-95f1898763-10c0.zip/node_modules/jest-circus/build/jestAdapterInit.js:857:11)
        at run (/Users/yab/.yarn/berry/cache/jest-circus-npm-30.2.0-95f1898763-10c0.zip/node_modules/jest-circus/build/jestAdapterInit.js:761:3)
        at runAndTransformResultsToJestFormat (/Users/yab/.yarn/berry/cache/jest-circus-npm-30.2.0-95f1898763-10c0.zip/node_modules/jest-circus/build/jestAdapterInit.js:1918:21)
        at jestAdapter (/Users/yab/.yarn/berry/cache/jest-circus-npm-30.2.0-95f1898763-10c0.zip/node_modules/jest-circus/build/runner.js:101:19)
        at runTestInternal (/Users/yab/.yarn/berry/cache/jest-runner-npm-30.2.0-ad3a4cac8e-10c0.zip/node_modules/jest-runner/build/testWorker.js:275:16)
        at runTest (/Users/yab/.yarn/berry/cache/jest-runner-npm-30.2.0-ad3a4cac8e-10c0.zip/node_modules/jest-runner/build/testWorker.js:343:7)
        at Object.worker (/Users/yab/.yarn/berry/cache/jest-runner-npm-30.2.0-ad3a4cac8e-10c0.zip/node_modules/jest-runner/build/testWorker.js:497:12)

      156 |       };
      157 |     } catch (error) {
    > 158 |       console.error('[OrchestratorAgent] Failed to load context:', error);
          |               ^
      159 |       return {};
      160 |     }
      161 |   }

      at OrchestratorAgent.loadContext (src/agents/orchestrator.ts:158:15)
      at OrchestratorAgent.handleQuery (src/agents/orchestrator.ts:51:19)
      at Object.<anonymous> (src/tests/integration/agents/orchestrator.integration.test.ts:204:24)

  console.log
    [OrchestratorAgent][bf3dae14-0696-47c2-ae76-0df7658bf073] Loaded context: {}

      at OrchestratorAgent.handleQuery (src/agents/orchestrator.ts:52:17)

  console.log
    [OrchestratorAgent][bf3dae14-0696-47c2-ae76-0df7658bf073] Planning...

      at OrchestratorAgent.handleQuery (src/agents/orchestrator.ts:56:15)

  console.log
    [PlannerAgent] Planning for query: Get shipments

      at PlannerAgent.plan (src/agents/planner.ts:60:13)

  console.log
    [LLMProvider] Using openai provider

      at LLMProvider.generate (src/shared/llm/provider.ts:42:17)

  console.error
    [PlannerAgent] Attempt 2/3 failed: [
      {
        "origin": "array",
        "code": "too_small",
        "minimum": 1,
        "inclusive": true,
        "path": [
          "steps"
        ],
        "message": "Too small: expected array to have >=1 items"
      }
    ]

      101 |       } catch (error: any) {
      102 |         attempts++;
    > 103 |         console.error(`[PlannerAgent] Attempt ${attempts}/${this.config.maxRetries} failed:`, error.message);
          |                 ^
      104 |
      105 |         if (attempts >= this.config.maxRetries) {
      106 |           throw new Error(`Failed to generate valid plan after ${attempts} attempts: ${error.message}`);

      at PlannerAgent.plan (src/agents/planner.ts:103:17)
      at Object.<anonymous> (src/tests/integration/agents/planner.integration.test.ts:210:20)

  console.log
    [LLMProvider] Using openai provider

      at LLMProvider.generate (src/shared/llm/provider.ts:42:17)

  console.log
    [PlannerAgent] Plan generated successfully

      at PlannerAgent.plan (src/agents/planner.ts:98:17)

  console.log
    [OrchestratorAgent][bf3dae14-0696-47c2-ae76-0df7658bf073] Plan generated: {
      steps: [
        { tool: 'shipments', params: {}, depends_on: [], parallel: false }
      ],
      metadata: {
        query: 'Get shipments',
        timestamp: '2022-01-15T13:30:00Z',
        estimated_duration_ms: 1500
      }
    }

      at OrchestratorAgent.handleQuery (src/agents/orchestrator.ts:58:15)

  console.log
    [OrchestratorAgent][bf3dae14-0696-47c2-ae76-0df7658bf073] Executing plan...

      at OrchestratorAgent.handleQuery (src/agents/orchestrator.ts:61:15)

  console.log
    [ExecutorAgent] Executing plan with 1 steps

      at ExecutorAgent.execute (src/agents/executor.ts:35:13)

  console.log
    [ExecutorAgent] Executing 1 steps in parallel

      at ExecutorAgent.execute (src/agents/executor.ts:52:15)

  console.log
    [ExecutorAgent] Executing step 0: shipments

      at ExecutorAgent.executeStep (src/agents/executor.ts:177:13)
          at Array.map (<anonymous>)

  console.error
    [ExecutorAgent] Step 0 (shipments) failed: Tool not found: shipments

      202 |
      203 |     } catch (error: any) {
    > 204 |       console.error(`[ExecutorAgent] Step ${index} (${step.tool}) failed:`, error.message);
          |               ^
      205 |
      206 |       return {
      207 |         success: false,

      at ExecutorAgent.executeStep (src/agents/executor.ts:204:15)
      at src/agents/executor.ts:166:19
          at Array.map (<anonymous>)
      at ExecutorAgent.executeBatch (src/agents/executor.ts:161:34)
      at ExecutorAgent.execute (src/agents/executor.ts:55:39)
      at OrchestratorAgent.handleQuery (src/agents/orchestrator.ts:62:43)
      at Object.<anonymous> (src/tests/integration/agents/orchestrator.integration.test.ts:204:24)

  console.log
    [ExecutorAgent] Plan execution complete. 1 results

      at ExecutorAgent.execute (src/agents/executor.ts:79:13)

  console.log
    [OrchestratorAgent][bf3dae14-0696-47c2-ae76-0df7658bf073] Execution complete. Results: 1

      at OrchestratorAgent.handleQuery (src/agents/orchestrator.ts:63:15)

  console.log
    [OrchestratorAgent][bf3dae14-0696-47c2-ae76-0df7658bf073] Analyzing results...

      at OrchestratorAgent.handleQuery (src/agents/orchestrator.ts:66:15)

  console.log
    [AnalyzerAgent] Analyzing 1 tool results

      at AnalyzerAgent.analyze (src/agents/analyzer.ts:33:13)

  console.log
    [OrchestratorAgent][bf3dae14-0696-47c2-ae76-0df7658bf073] Analysis complete

      at OrchestratorAgent.handleQuery (src/agents/orchestrator.ts:68:15)

  console.log
    [OrchestratorAgent][bf3dae14-0696-47c2-ae76-0df7658bf073] Generating summary...

      at OrchestratorAgent.handleQuery (src/agents/orchestrator.ts:71:15)

  console.log
    [SummarizerAgent] Generating summary...

      at SummarizerAgent.summarize (src/agents/summarizer.ts:39:13)

  console.log
    [LLMProvider] Using openai provider

      at LLMProvider.generate (src/shared/llm/provider.ts:42:17)

  console.error
    [PlannerAgent] Attempt 2/3 failed: [
      {
        "origin": "array",
        "code": "too_small",
        "minimum": 1,
        "inclusive": true,
        "path": [
          "steps"
        ],
        "message": "Too small: expected array to have >=1 items"
      }
    ]

      101 |       } catch (error: any) {
      102 |         attempts++;
    > 103 |         console.error(`[PlannerAgent] Attempt ${attempts}/${this.config.maxRetries} failed:`, error.message);
          |                 ^
      104 |
      105 |         if (attempts >= this.config.maxRetries) {
      106 |           throw new Error(`Failed to generate valid plan after ${attempts} attempts: ${error.message}`);

      at PlannerAgent.plan (src/agents/planner.ts:103:17)
      at OrchestratorAgent.handleQuery (src/agents/orchestrator.ts:57:20)
      at Object.<anonymous> (src/tests/integration/agents/system.integration.test.ts:209:24)

  console.log
    [LLMProvider] Using openai provider

      at LLMProvider.generate (src/shared/llm/provider.ts:42:17)

  console.log
    [OrchestratorAgent] Stored request bf3dae14-0696-47c2-ae76-0df7658bf073 in memory

      at OrchestratorAgent.storeInMemory (src/agents/orchestrator.ts:188:15)

  console.log
    [OrchestratorAgent][bf3dae14-0696-47c2-ae76-0df7658bf073] Complete in 1621ms

      at OrchestratorAgent.handleQuery (src/agents/orchestrator.ts:98:15)

  console.log
    
    üíæ Query without memory succeeded: true

      at Object.<anonymous> (src/tests/integration/agents/orchestrator.integration.test.ts:210:15)

  console.log
    [OrchestratorAgent][d42b325c-c0c6-4a6c-99e8-85421143a37b] Processing query: Query 1

      at OrchestratorAgent.handleQuery (src/agents/orchestrator.ts:45:13)

  console.log
    [OrchestratorAgent][d42b325c-c0c6-4a6c-99e8-85421143a37b] Loaded context: { semantic: undefined, episodic: undefined, entities: [] }

      at OrchestratorAgent.handleQuery (src/agents/orchestrator.ts:52:17)

  console.log
    [OrchestratorAgent][d42b325c-c0c6-4a6c-99e8-85421143a37b] Planning...

      at OrchestratorAgent.handleQuery (src/agents/orchestrator.ts:56:15)

  console.log
    [PlannerAgent] Planning for query: Query 1

      at PlannerAgent.plan (src/agents/planner.ts:60:13)

  console.log
    [LLMProvider] Using openai provider

      at LLMProvider.generate (src/shared/llm/provider.ts:42:17)

  console.error
    [PlannerAgent] Attempt 3/3 failed: [
      {
        "origin": "array",
        "code": "too_small",
        "minimum": 1,
        "inclusive": true,
        "path": [
          "steps"
        ],
        "message": "Too small: expected array to have >=1 items"
      }
    ]

      101 |       } catch (error: any) {
      102 |         attempts++;
    > 103 |         console.error(`[PlannerAgent] Attempt ${attempts}/${this.config.maxRetries} failed:`, error.message);
          |                 ^
      104 |
      105 |         if (attempts >= this.config.maxRetries) {
      106 |           throw new Error(`Failed to generate valid plan after ${attempts} attempts: ${error.message}`);

      at PlannerAgent.plan (src/agents/planner.ts:103:17)
      at OrchestratorAgent.handleQuery (src/agents/orchestrator.ts:57:20)
      at Object.<anonymous> (src/tests/integration/agents/system.integration.test.ts:209:24)

  console.error
    [OrchestratorAgent][c8016eb4-7243-4714-ab88-32f28b5e5b97] Error: Error: Failed to generate valid plan after 3 attempts: [
      {
        "origin": "array",
        "code": "too_small",
        "minimum": 1,
        "inclusive": true,
        "path": [
          "steps"
        ],
        "message": "Too small: expected array to have >=1 items"
      }
    ]
        at PlannerAgent.plan (/Users/yab/Projects/clear-ai-v2/src/agents/planner.ts:106:17)
        at processTicksAndRejections (node:internal/process/task_queues:105:5)
        at OrchestratorAgent.handleQuery (/Users/yab/Projects/clear-ai-v2/src/agents/orchestrator.ts:57:20)
        at Object.<anonymous> (/Users/yab/Projects/clear-ai-v2/src/tests/integration/agents/system.integration.test.ts:209:24)

      101 |
      102 |     } catch (error: any) {
    > 103 |       console.error(`[OrchestratorAgent][${requestId}] Error:`, error);
          |               ^
      104 |
      105 |       // Store error in memory for learning
      106 |       if (this.config.enableMemory) {

      at OrchestratorAgent.handleQuery (src/agents/orchestrator.ts:103:15)
      at Object.<anonymous> (src/tests/integration/agents/system.integration.test.ts:209:24)

  console.log
    [OrchestratorAgent][fb52678f-e671-43d1-be35-627045d32797] Processing query: Show me all shipments from last week with contaminants

      at OrchestratorAgent.handleQuery (src/agents/orchestrator.ts:45:13)

  console.log
    [OrchestratorAgent][fb52678f-e671-43d1-be35-627045d32797] Loaded context: {
      semantic: undefined,
      episodic: undefined,
      entities: [ 'temporal:week', 'entity:shipment' ]
    }

      at OrchestratorAgent.handleQuery (src/agents/orchestrator.ts:52:17)

  console.log
    [OrchestratorAgent][fb52678f-e671-43d1-be35-627045d32797] Planning...

      at OrchestratorAgent.handleQuery (src/agents/orchestrator.ts:56:15)

  console.log
    [PlannerAgent] Planning for query: Show me all shipments from last week with contaminants

      at PlannerAgent.plan (src/agents/planner.ts:60:13)

  console.log
    [LLMProvider] Using openai provider

      at LLMProvider.generate (src/shared/llm/provider.ts:42:17)

  console.log
    [PlannerAgent] Plan generated successfully

      at PlannerAgent.plan (src/agents/planner.ts:98:17)

  console.log
    [PlannerAgent] Planning for query: Show me the same data

      at PlannerAgent.plan (src/agents/planner.ts:60:13)

  console.log
    [LLMProvider] Using openai provider

      at LLMProvider.generate (src/shared/llm/provider.ts:42:17)

  console.error
    [PlannerAgent] Attempt 1/3 failed: [
      {
        "origin": "array",
        "code": "too_small",
        "minimum": 1,
        "inclusive": true,
        "path": [
          "steps"
        ],
        "message": "Too small: expected array to have >=1 items"
      }
    ]

      101 |       } catch (error: any) {
      102 |         attempts++;
    > 103 |         console.error(`[PlannerAgent] Attempt ${attempts}/${this.config.maxRetries} failed:`, error.message);
          |                 ^
      104 |
      105 |         if (attempts >= this.config.maxRetries) {
      106 |           throw new Error(`Failed to generate valid plan after ${attempts} attempts: ${error.message}`);

      at PlannerAgent.plan (src/agents/planner.ts:103:17)
      at OrchestratorAgent.handleQuery (src/agents/orchestrator.ts:57:20)
      at Object.<anonymous> (src/tests/integration/agents/orchestrator.integration.test.ts:216:25)

  console.log
    [LLMProvider] Using openai provider

      at LLMProvider.generate (src/shared/llm/provider.ts:42:17)

  console.log
    [PlannerAgent] Plan generated successfully

      at PlannerAgent.plan (src/agents/planner.ts:98:17)

  console.log
    [OrchestratorAgent][fb52678f-e671-43d1-be35-627045d32797] Plan generated: {
      steps: [
        {
          tool: 'shipments',
          params: [Object],
          depends_on: [],
          parallel: false
        },
        {
          tool: 'contaminants-detected',
          params: [Object],
          depends_on: [Array],
          parallel: false
        }
      ],
      metadata: {
        query: 'Show me all shipments from last week with contaminants',
        timestamp: '2022-01-31T08:00:00Z',
        estimated_duration_ms: 2000
      }
    }

      at OrchestratorAgent.handleQuery (src/agents/orchestrator.ts:58:15)

  console.log
    [OrchestratorAgent][fb52678f-e671-43d1-be35-627045d32797] Executing plan...

      at OrchestratorAgent.handleQuery (src/agents/orchestrator.ts:61:15)

  console.log
    [ExecutorAgent] Executing plan with 2 steps

      at ExecutorAgent.execute (src/agents/executor.ts:35:13)

  console.log
    [ExecutorAgent] Executing 1 steps in parallel

      at ExecutorAgent.execute (src/agents/executor.ts:52:15)

  console.log
    [ExecutorAgent] Executing step 0: shipments

      at ExecutorAgent.executeStep (src/agents/executor.ts:177:13)
          at Array.map (<anonymous>)

  console.error
    [ExecutorAgent] Step 0 (shipments) failed: Tool not found: shipments

      202 |
      203 |     } catch (error: any) {
    > 204 |       console.error(`[ExecutorAgent] Step ${index} (${step.tool}) failed:`, error.message);
          |               ^
      205 |
      206 |       return {
      207 |         success: false,

      at ExecutorAgent.executeStep (src/agents/executor.ts:204:15)
      at src/agents/executor.ts:166:19
          at Array.map (<anonymous>)
      at ExecutorAgent.executeBatch (src/agents/executor.ts:161:34)
      at ExecutorAgent.execute (src/agents/executor.ts:55:39)
      at OrchestratorAgent.handleQuery (src/agents/orchestrator.ts:62:43)
      at Object.<anonymous> (src/tests/integration/agents/system.integration.test.ts:220:24)

  console.log
    [ExecutorAgent] Executing 1 steps in parallel

      at ExecutorAgent.execute (src/agents/executor.ts:52:15)

  console.log
    [ExecutorAgent] Executing step 1: contaminants-detected

      at ExecutorAgent.executeStep (src/agents/executor.ts:177:13)
          at Array.map (<anonymous>)

  console.error
    [ExecutorAgent] Step 1 (contaminants-detected) failed: Tool not found: contaminants-detected

      202 |
      203 |     } catch (error: any) {
    > 204 |       console.error(`[ExecutorAgent] Step ${index} (${step.tool}) failed:`, error.message);
          |               ^
      205 |
      206 |       return {
      207 |         success: false,

      at ExecutorAgent.executeStep (src/agents/executor.ts:204:15)
      at src/agents/executor.ts:166:19
          at Array.map (<anonymous>)
      at ExecutorAgent.executeBatch (src/agents/executor.ts:161:34)
      at ExecutorAgent.execute (src/agents/executor.ts:55:39)
      at OrchestratorAgent.handleQuery (src/agents/orchestrator.ts:62:23)
      at Object.<anonymous> (src/tests/integration/agents/system.integration.test.ts:220:24)

  console.log
    [ExecutorAgent] Plan execution complete. 2 results

      at ExecutorAgent.execute (src/agents/executor.ts:79:13)

  console.log
    [OrchestratorAgent][fb52678f-e671-43d1-be35-627045d32797] Execution complete. Results: 2

      at OrchestratorAgent.handleQuery (src/agents/orchestrator.ts:63:15)

  console.log
    [OrchestratorAgent][fb52678f-e671-43d1-be35-627045d32797] Analyzing results...

      at OrchestratorAgent.handleQuery (src/agents/orchestrator.ts:66:15)

  console.log
    [AnalyzerAgent] Analyzing 2 tool results

      at AnalyzerAgent.analyze (src/agents/analyzer.ts:33:13)

  console.log
    [OrchestratorAgent][fb52678f-e671-43d1-be35-627045d32797] Analysis complete

      at OrchestratorAgent.handleQuery (src/agents/orchestrator.ts:68:15)

  console.log
    [OrchestratorAgent][fb52678f-e671-43d1-be35-627045d32797] Generating summary...

      at OrchestratorAgent.handleQuery (src/agents/orchestrator.ts:71:15)

  console.log
    [SummarizerAgent] Generating summary...

      at SummarizerAgent.summarize (src/agents/summarizer.ts:39:13)

  console.log
    [LLMProvider] Using openai provider

      at LLMProvider.generate (src/shared/llm/provider.ts:42:17)

  console.error
    [PlannerAgent] Attempt 2/3 failed: [
      {
        "origin": "array",
        "code": "too_small",
        "minimum": 1,
        "inclusive": true,
        "path": [
          "steps"
        ],
        "message": "Too small: expected array to have >=1 items"
      }
    ]

      101 |       } catch (error: any) {
      102 |         attempts++;
    > 103 |         console.error(`[PlannerAgent] Attempt ${attempts}/${this.config.maxRetries} failed:`, error.message);
          |                 ^
      104 |
      105 |         if (attempts >= this.config.maxRetries) {
      106 |           throw new Error(`Failed to generate valid plan after ${attempts} attempts: ${error.message}`);

      at PlannerAgent.plan (src/agents/planner.ts:103:17)
      at OrchestratorAgent.handleQuery (src/agents/orchestrator.ts:57:20)
      at Object.<anonymous> (src/tests/integration/agents/orchestrator.integration.test.ts:216:25)

  console.log
    [LLMProvider] Using openai provider

      at LLMProvider.generate (src/shared/llm/provider.ts:42:17)

  console.log
    [OrchestratorAgent] Stored request fb52678f-e671-43d1-be35-627045d32797 in memory

      at OrchestratorAgent.storeInMemory (src/agents/orchestrator.ts:188:15)

  console.log
    [OrchestratorAgent][fb52678f-e671-43d1-be35-627045d32797] Complete in 1890ms

      at OrchestratorAgent.handleQuery (src/agents/orchestrator.ts:98:15)

  console.log
    
    üì¶ Blueprint 1 - Contaminated shipments: {
      message: 'There were no shipments from last week with contaminants identified in the analysis.',
      tools: [ 'shipments', 'contaminants-detected' ]
    }

      at Object.<anonymous> (src/tests/integration/agents/system.integration.test.ts:228:15)

  console.log
    [OrchestratorAgent][9ed0d2f1-1076-4123-b3ac-4802a46490ab] Processing query: Which facilities received the most rejected shipments?

      at OrchestratorAgent.handleQuery (src/agents/orchestrator.ts:45:13)

  console.log
    [OrchestratorAgent][9ed0d2f1-1076-4123-b3ac-4802a46490ab] Loaded context: {
      semantic: undefined,
      episodic: undefined,
      entities: [ 'entity:shipment' ]
    }

      at OrchestratorAgent.handleQuery (src/agents/orchestrator.ts:52:17)

  console.log
    [OrchestratorAgent][9ed0d2f1-1076-4123-b3ac-4802a46490ab] Planning...

      at OrchestratorAgent.handleQuery (src/agents/orchestrator.ts:56:15)

  console.log
    [PlannerAgent] Planning for query: Which facilities received the most rejected shipments?

      at PlannerAgent.plan (src/agents/planner.ts:60:13)

  console.log
    [LLMProvider] Using openai provider

      at LLMProvider.generate (src/shared/llm/provider.ts:42:17)

  console.log
    [PlannerAgent] Plan generated successfully

      at PlannerAgent.plan (src/agents/planner.ts:98:17)

  console.log
    [PlannerAgent] Planning for query: show me shipments

      at PlannerAgent.plan (src/agents/planner.ts:60:13)

  console.log
    [LLMProvider] Using openai provider

      at LLMProvider.generate (src/shared/llm/provider.ts:42:17)

  console.log
    [PlannerAgent] Plan generated successfully

      at PlannerAgent.plan (src/agents/planner.ts:98:17)

  console.log
    [PlannerAgent] Planning for query: contaminated shipments from last week

      at PlannerAgent.plan (src/agents/planner.ts:60:13)

  console.log
    [LLMProvider] Using openai provider

      at LLMProvider.generate (src/shared/llm/provider.ts:42:17)

  console.log
    [PlannerAgent] Plan generated successfully

      at PlannerAgent.plan (src/agents/planner.ts:98:17)

  console.log
    [OrchestratorAgent][d42b325c-c0c6-4a6c-99e8-85421143a37b] Plan generated: {
      steps: [
        {
          tool: 'shipments',
          params: [Object],
          depends_on: [],
          parallel: false
        }
      ],
      metadata: {
        query: 'Query 1',
        timestamp: '2023-10-30T15:00:00Z',
        estimated_duration_ms: 1500
      }
    }

      at OrchestratorAgent.handleQuery (src/agents/orchestrator.ts:58:15)

  console.log
    [OrchestratorAgent][d42b325c-c0c6-4a6c-99e8-85421143a37b] Executing plan...

      at OrchestratorAgent.handleQuery (src/agents/orchestrator.ts:61:15)

  console.log
    [ExecutorAgent] Executing plan with 1 steps

      at ExecutorAgent.execute (src/agents/executor.ts:35:13)

  console.log
    [ExecutorAgent] Executing 1 steps in parallel

      at ExecutorAgent.execute (src/agents/executor.ts:52:15)

  console.log
    [ExecutorAgent] Executing step 0: shipments

      at ExecutorAgent.executeStep (src/agents/executor.ts:177:13)
          at Array.map (<anonymous>)

  console.error
    [ExecutorAgent] Step 0 (shipments) failed: Tool not found: shipments

      202 |
      203 |     } catch (error: any) {
    > 204 |       console.error(`[ExecutorAgent] Step ${index} (${step.tool}) failed:`, error.message);
          |               ^
      205 |
      206 |       return {
      207 |         success: false,

      at ExecutorAgent.executeStep (src/agents/executor.ts:204:15)
      at src/agents/executor.ts:166:19
          at Array.map (<anonymous>)
      at ExecutorAgent.executeBatch (src/agents/executor.ts:161:34)
      at ExecutorAgent.execute (src/agents/executor.ts:55:39)
      at OrchestratorAgent.handleQuery (src/agents/orchestrator.ts:62:43)
      at Object.<anonymous> (src/tests/integration/agents/orchestrator.integration.test.ts:216:25)

  console.log
    [ExecutorAgent] Plan execution complete. 1 results

      at ExecutorAgent.execute (src/agents/executor.ts:79:13)

  console.log
    [OrchestratorAgent][d42b325c-c0c6-4a6c-99e8-85421143a37b] Execution complete. Results: 1

      at OrchestratorAgent.handleQuery (src/agents/orchestrator.ts:63:15)

  console.log
    [OrchestratorAgent][d42b325c-c0c6-4a6c-99e8-85421143a37b] Analyzing results...

      at OrchestratorAgent.handleQuery (src/agents/orchestrator.ts:66:15)

  console.log
    [AnalyzerAgent] Analyzing 1 tool results

      at AnalyzerAgent.analyze (src/agents/analyzer.ts:33:13)

  console.log
    [OrchestratorAgent][d42b325c-c0c6-4a6c-99e8-85421143a37b] Analysis complete

      at OrchestratorAgent.handleQuery (src/agents/orchestrator.ts:68:15)

  console.log
    [OrchestratorAgent][d42b325c-c0c6-4a6c-99e8-85421143a37b] Generating summary...

      at OrchestratorAgent.handleQuery (src/agents/orchestrator.ts:71:15)

  console.log
    [SummarizerAgent] Generating summary...

      at SummarizerAgent.summarize (src/agents/summarizer.ts:39:13)

  console.log
    [LLMProvider] Using openai provider

      at LLMProvider.generate (src/shared/llm/provider.ts:42:17)

  console.log
    [PlannerAgent] Plan generated successfully

      at PlannerAgent.plan (src/agents/planner.ts:98:17)

  console.log
    [OrchestratorAgent][9ed0d2f1-1076-4123-b3ac-4802a46490ab] Plan generated: {
      steps: [
        {
          tool: 'shipments',
          params: [Object],
          depends_on: [],
          parallel: false
        },
        {
          tool: 'facilities',
          params: [Object],
          depends_on: [Array],
          parallel: false
        }
      ],
      metadata: {
        query: 'Which facilities received the most rejected shipments?',
        timestamp: '2022-01-15T15:30:00Z',
        estimated_duration_ms: 2000
      }
    }

      at OrchestratorAgent.handleQuery (src/agents/orchestrator.ts:58:15)

  console.log
    [OrchestratorAgent][9ed0d2f1-1076-4123-b3ac-4802a46490ab] Executing plan...

      at OrchestratorAgent.handleQuery (src/agents/orchestrator.ts:61:15)

  console.log
    [ExecutorAgent] Executing plan with 2 steps

      at ExecutorAgent.execute (src/agents/executor.ts:35:13)

  console.log
    [ExecutorAgent] Executing 1 steps in parallel

      at ExecutorAgent.execute (src/agents/executor.ts:52:15)

  console.log
    [ExecutorAgent] Executing step 0: shipments

      at ExecutorAgent.executeStep (src/agents/executor.ts:177:13)
          at Array.map (<anonymous>)

  console.error
    [ExecutorAgent] Step 0 (shipments) failed: Tool not found: shipments

      202 |
      203 |     } catch (error: any) {
    > 204 |       console.error(`[ExecutorAgent] Step ${index} (${step.tool}) failed:`, error.message);
          |               ^
      205 |
      206 |       return {
      207 |         success: false,

      at ExecutorAgent.executeStep (src/agents/executor.ts:204:15)
      at src/agents/executor.ts:166:19
          at Array.map (<anonymous>)
      at ExecutorAgent.executeBatch (src/agents/executor.ts:161:34)
      at ExecutorAgent.execute (src/agents/executor.ts:55:39)
      at OrchestratorAgent.handleQuery (src/agents/orchestrator.ts:62:43)
      at Object.<anonymous> (src/tests/integration/agents/system.integration.test.ts:235:24)

  console.log
    [ExecutorAgent] Executing 1 steps in parallel

      at ExecutorAgent.execute (src/agents/executor.ts:52:15)

  console.log
    [ExecutorAgent] Executing step 1: facilities

      at ExecutorAgent.executeStep (src/agents/executor.ts:177:13)
          at Array.map (<anonymous>)

  console.error
    [ExecutorAgent] Step 1 (facilities) failed: Tool not found: facilities

      202 |
      203 |     } catch (error: any) {
    > 204 |       console.error(`[ExecutorAgent] Step ${index} (${step.tool}) failed:`, error.message);
          |               ^
      205 |
      206 |       return {
      207 |         success: false,

      at ExecutorAgent.executeStep (src/agents/executor.ts:204:15)
      at src/agents/executor.ts:166:19
          at Array.map (<anonymous>)
      at ExecutorAgent.executeBatch (src/agents/executor.ts:161:34)
      at ExecutorAgent.execute (src/agents/executor.ts:55:39)
      at OrchestratorAgent.handleQuery (src/agents/orchestrator.ts:62:23)
      at Object.<anonymous> (src/tests/integration/agents/system.integration.test.ts:235:24)

  console.log
    [ExecutorAgent] Plan execution complete. 2 results

      at ExecutorAgent.execute (src/agents/executor.ts:79:13)

  console.log
    [OrchestratorAgent][9ed0d2f1-1076-4123-b3ac-4802a46490ab] Execution complete. Results: 2

      at OrchestratorAgent.handleQuery (src/agents/orchestrator.ts:63:15)

  console.log
    [OrchestratorAgent][9ed0d2f1-1076-4123-b3ac-4802a46490ab] Analyzing results...

      at OrchestratorAgent.handleQuery (src/agents/orchestrator.ts:66:15)

  console.log
    [AnalyzerAgent] Analyzing 2 tool results

      at AnalyzerAgent.analyze (src/agents/analyzer.ts:33:13)

  console.log
    [OrchestratorAgent][9ed0d2f1-1076-4123-b3ac-4802a46490ab] Analysis complete

      at OrchestratorAgent.handleQuery (src/agents/orchestrator.ts:68:15)

  console.log
    [OrchestratorAgent][9ed0d2f1-1076-4123-b3ac-4802a46490ab] Generating summary...

      at OrchestratorAgent.handleQuery (src/agents/orchestrator.ts:71:15)

  console.log
    [SummarizerAgent] Generating summary...

      at SummarizerAgent.summarize (src/agents/summarizer.ts:39:13)

  console.log
    [LLMProvider] Using openai provider

      at LLMProvider.generate (src/shared/llm/provider.ts:42:17)

  console.log
    [OrchestratorAgent] Stored request d42b325c-c0c6-4a6c-99e8-85421143a37b in memory

      at OrchestratorAgent.storeInMemory (src/agents/orchestrator.ts:188:15)

  console.log
    [OrchestratorAgent][d42b325c-c0c6-4a6c-99e8-85421143a37b] Complete in 4334ms

      at OrchestratorAgent.handleQuery (src/agents/orchestrator.ts:98:15)

  console.log
    [OrchestratorAgent][1cd923cd-c8eb-4a5b-91b7-b4925b951ff9] Processing query: Query 2

      at OrchestratorAgent.handleQuery (src/agents/orchestrator.ts:45:13)

  console.log
    [OrchestratorAgent][1cd923cd-c8eb-4a5b-91b7-b4925b951ff9] Loaded context: { semantic: undefined, episodic: undefined, entities: [] }

      at OrchestratorAgent.handleQuery (src/agents/orchestrator.ts:52:17)

  console.log
    [OrchestratorAgent][1cd923cd-c8eb-4a5b-91b7-b4925b951ff9] Planning...

      at OrchestratorAgent.handleQuery (src/agents/orchestrator.ts:56:15)

  console.log
    [PlannerAgent] Planning for query: Query 2

      at PlannerAgent.plan (src/agents/planner.ts:60:13)

  console.log
    [LLMProvider] Using openai provider

      at LLMProvider.generate (src/shared/llm/provider.ts:42:17)

  console.log
    [OrchestratorAgent] Stored request 9ed0d2f1-1076-4123-b3ac-4802a46490ab in memory

      at OrchestratorAgent.storeInMemory (src/agents/orchestrator.ts:188:15)

  console.log
    [OrchestratorAgent][9ed0d2f1-1076-4123-b3ac-4802a46490ab] Complete in 2816ms

      at OrchestratorAgent.handleQuery (src/agents/orchestrator.ts:98:15)

  console.log
    
    üè≠ Blueprint 2 - Rejected shipments by facility: {
      message: 'There were no successful results to analyze regarding which facilities received the most rejected shipments.',
      insights: 0
    }

      at Object.<anonymous> (src/tests/integration/agents/system.integration.test.ts:248:15)

  console.log
    [OrchestratorAgent][2f813f5b-b0c1-4729-a99a-c1a13a4e44c8] Processing query: What are the most common contaminants detected this month?

      at OrchestratorAgent.handleQuery (src/agents/orchestrator.ts:45:13)

  console.log
    [OrchestratorAgent][2f813f5b-b0c1-4729-a99a-c1a13a4e44c8] Loaded context: { semantic: undefined, episodic: undefined, entities: [] }

      at OrchestratorAgent.handleQuery (src/agents/orchestrator.ts:52:17)

  console.log
    [OrchestratorAgent][2f813f5b-b0c1-4729-a99a-c1a13a4e44c8] Planning...

      at OrchestratorAgent.handleQuery (src/agents/orchestrator.ts:56:15)

  console.log
    [PlannerAgent] Planning for query: What are the most common contaminants detected this month?

      at PlannerAgent.plan (src/agents/planner.ts:60:13)

  console.log
    [LLMProvider] Using openai provider

      at LLMProvider.generate (src/shared/llm/provider.ts:42:17)

  console.error
    [PlannerAgent] Attempt 1/3 failed: [
      {
        "origin": "array",
        "code": "too_small",
        "minimum": 1,
        "inclusive": true,
        "path": [
          "steps"
        ],
        "message": "Too small: expected array to have >=1 items"
      }
    ]

      101 |       } catch (error: any) {
      102 |         attempts++;
    > 103 |         console.error(`[PlannerAgent] Attempt ${attempts}/${this.config.maxRetries} failed:`, error.message);
          |                 ^
      104 |
      105 |         if (attempts >= this.config.maxRetries) {
      106 |           throw new Error(`Failed to generate valid plan after ${attempts} attempts: ${error.message}`);

      at PlannerAgent.plan (src/agents/planner.ts:103:17)
      at OrchestratorAgent.handleQuery (src/agents/orchestrator.ts:57:20)
      at Object.<anonymous> (src/tests/integration/agents/orchestrator.integration.test.ts:217:25)

  console.log
    [LLMProvider] Using openai provider

      at LLMProvider.generate (src/shared/llm/provider.ts:42:17)

  console.error
    [PlannerAgent] Attempt 2/3 failed: [
      {
        "origin": "array",
        "code": "too_small",
        "minimum": 1,
        "inclusive": true,
        "path": [
          "steps"
        ],
        "message": "Too small: expected array to have >=1 items"
      }
    ]

      101 |       } catch (error: any) {
      102 |         attempts++;
    > 103 |         console.error(`[PlannerAgent] Attempt ${attempts}/${this.config.maxRetries} failed:`, error.message);
          |                 ^
      104 |
      105 |         if (attempts >= this.config.maxRetries) {
      106 |           throw new Error(`Failed to generate valid plan after ${attempts} attempts: ${error.message}`);

      at PlannerAgent.plan (src/agents/planner.ts:103:17)
      at OrchestratorAgent.handleQuery (src/agents/orchestrator.ts:57:20)
      at Object.<anonymous> (src/tests/integration/agents/orchestrator.integration.test.ts:217:25)

  console.log
    [LLMProvider] Using openai provider

      at LLMProvider.generate (src/shared/llm/provider.ts:42:17)

  console.log
    [PlannerAgent] Plan generated successfully

      at PlannerAgent.plan (src/agents/planner.ts:98:17)

  console.log
    [OrchestratorAgent][2f813f5b-b0c1-4729-a99a-c1a13a4e44c8] Plan generated: {
      steps: [
        {
          tool: 'facilities',
          params: [Object],
          depends_on: [],
          parallel: false
        },
        {
          tool: 'contaminants-detected',
          params: [Object],
          depends_on: [Array],
          parallel: false
        }
      ],
      metadata: {
        query: 'What are the most common contaminants detected this month?',
        timestamp: '2023-10-15T08:00:00Z',
        estimated_duration_ms: 2000
      }
    }

      at OrchestratorAgent.handleQuery (src/agents/orchestrator.ts:58:15)

  console.log
    [OrchestratorAgent][2f813f5b-b0c1-4729-a99a-c1a13a4e44c8] Executing plan...

      at OrchestratorAgent.handleQuery (src/agents/orchestrator.ts:61:15)

  console.log
    [ExecutorAgent] Executing plan with 2 steps

      at ExecutorAgent.execute (src/agents/executor.ts:35:13)

  console.log
    [ExecutorAgent] Executing 1 steps in parallel

      at ExecutorAgent.execute (src/agents/executor.ts:52:15)

  console.log
    [ExecutorAgent] Executing step 0: facilities

      at ExecutorAgent.executeStep (src/agents/executor.ts:177:13)
          at Array.map (<anonymous>)

  console.error
    [ExecutorAgent] Step 0 (facilities) failed: Tool not found: facilities

      202 |
      203 |     } catch (error: any) {
    > 204 |       console.error(`[ExecutorAgent] Step ${index} (${step.tool}) failed:`, error.message);
          |               ^
      205 |
      206 |       return {
      207 |         success: false,

      at ExecutorAgent.executeStep (src/agents/executor.ts:204:15)
      at src/agents/executor.ts:166:19
          at Array.map (<anonymous>)
      at ExecutorAgent.executeBatch (src/agents/executor.ts:161:34)
      at ExecutorAgent.execute (src/agents/executor.ts:55:39)
      at OrchestratorAgent.handleQuery (src/agents/orchestrator.ts:62:43)
      at Object.<anonymous> (src/tests/integration/agents/system.integration.test.ts:255:24)

  console.log
    [ExecutorAgent] Executing 1 steps in parallel

      at ExecutorAgent.execute (src/agents/executor.ts:52:15)

  console.log
    [ExecutorAgent] Executing step 1: contaminants-detected

      at ExecutorAgent.executeStep (src/agents/executor.ts:177:13)
          at Array.map (<anonymous>)

  console.error
    [ExecutorAgent] Step 1 (contaminants-detected) failed: Tool not found: contaminants-detected

      202 |
      203 |     } catch (error: any) {
    > 204 |       console.error(`[ExecutorAgent] Step ${index} (${step.tool}) failed:`, error.message);
          |               ^
      205 |
      206 |       return {
      207 |         success: false,

      at ExecutorAgent.executeStep (src/agents/executor.ts:204:15)
      at src/agents/executor.ts:166:19
          at Array.map (<anonymous>)
      at ExecutorAgent.executeBatch (src/agents/executor.ts:161:34)
      at ExecutorAgent.execute (src/agents/executor.ts:55:39)
      at OrchestratorAgent.handleQuery (src/agents/orchestrator.ts:62:23)
      at Object.<anonymous> (src/tests/integration/agents/system.integration.test.ts:255:24)

  console.log
    [ExecutorAgent] Plan execution complete. 2 results

      at ExecutorAgent.execute (src/agents/executor.ts:79:13)

  console.log
    [OrchestratorAgent][2f813f5b-b0c1-4729-a99a-c1a13a4e44c8] Execution complete. Results: 2

      at OrchestratorAgent.handleQuery (src/agents/orchestrator.ts:63:15)

  console.log
    [OrchestratorAgent][2f813f5b-b0c1-4729-a99a-c1a13a4e44c8] Analyzing results...

      at OrchestratorAgent.handleQuery (src/agents/orchestrator.ts:66:15)

  console.log
    [AnalyzerAgent] Analyzing 2 tool results

      at AnalyzerAgent.analyze (src/agents/analyzer.ts:33:13)

  console.log
    [OrchestratorAgent][2f813f5b-b0c1-4729-a99a-c1a13a4e44c8] Analysis complete

      at OrchestratorAgent.handleQuery (src/agents/orchestrator.ts:68:15)

  console.log
    [OrchestratorAgent][2f813f5b-b0c1-4729-a99a-c1a13a4e44c8] Generating summary...

      at OrchestratorAgent.handleQuery (src/agents/orchestrator.ts:71:15)

  console.log
    [SummarizerAgent] Generating summary...

      at SummarizerAgent.summarize (src/agents/summarizer.ts:39:13)

  console.log
    [LLMProvider] Using openai provider

      at LLMProvider.generate (src/shared/llm/provider.ts:42:17)

  console.log
    [PlannerAgent] Plan generated successfully

      at PlannerAgent.plan (src/agents/planner.ts:98:17)

  console.log
    [PlannerAgent] Planning for query: Get all facilities and their shipments

      at PlannerAgent.plan (src/agents/planner.ts:60:13)

  console.log
    [LLMProvider] Using openai provider

      at LLMProvider.generate (src/shared/llm/provider.ts:42:17)

  console.log
    [OrchestratorAgent] Stored request 2f813f5b-b0c1-4729-a99a-c1a13a4e44c8 in memory

      at OrchestratorAgent.storeInMemory (src/agents/orchestrator.ts:188:15)

  console.log
    [OrchestratorAgent][2f813f5b-b0c1-4729-a99a-c1a13a4e44c8] Complete in 2025ms

      at OrchestratorAgent.handleQuery (src/agents/orchestrator.ts:98:15)

  console.log
    
    üß™ Blueprint 3 - Common contaminants: {
      message: 'There were no successful results to analyze for the most common contaminants detected this month.',
      entities: 0
    }

      at Object.<anonymous> (src/tests/integration/agents/system.integration.test.ts:265:15)

  console.log
    [OrchestratorAgent][2ed71d98-a51a-48cb-a529-dd8beb81d4ee] Processing query: Show me high-risk contaminants detected in Berlin facilities

      at OrchestratorAgent.handleQuery (src/agents/orchestrator.ts:45:13)

  console.log
    [OrchestratorAgent][2ed71d98-a51a-48cb-a529-dd8beb81d4ee] Loaded context: {
      semantic: undefined,
      episodic: undefined,
      entities: [ 'location:Berlin' ]
    }

      at OrchestratorAgent.handleQuery (src/agents/orchestrator.ts:52:17)

  console.log
    [OrchestratorAgent][2ed71d98-a51a-48cb-a529-dd8beb81d4ee] Planning...

      at OrchestratorAgent.handleQuery (src/agents/orchestrator.ts:56:15)

  console.log
    [PlannerAgent] Planning for query: Show me high-risk contaminants detected in Berlin facilities

      at PlannerAgent.plan (src/agents/planner.ts:60:13)

  console.log
    [LLMProvider] Using openai provider

      at LLMProvider.generate (src/shared/llm/provider.ts:42:17)

  console.log
    [PlannerAgent] Plan generated successfully

      at PlannerAgent.plan (src/agents/planner.ts:98:17)

  console.log
    [OrchestratorAgent][1cd923cd-c8eb-4a5b-91b7-b4925b951ff9] Plan generated: {
      steps: [
        {
          tool: 'shipments',
          params: [Object],
          depends_on: [],
          parallel: false
        },
        {
          tool: 'contaminants-detected',
          params: [Object],
          depends_on: [Array],
          parallel: false
        }
      ],
      metadata: {
        query: 'Query 2',
        timestamp: '2022-02-15T15:30:00Z',
        estimated_duration_ms: 2000
      }
    }

      at OrchestratorAgent.handleQuery (src/agents/orchestrator.ts:58:15)

  console.log
    [OrchestratorAgent][1cd923cd-c8eb-4a5b-91b7-b4925b951ff9] Executing plan...

      at OrchestratorAgent.handleQuery (src/agents/orchestrator.ts:61:15)

  console.log
    [ExecutorAgent] Executing plan with 2 steps

      at ExecutorAgent.execute (src/agents/executor.ts:35:13)

  console.log
    [ExecutorAgent] Executing 1 steps in parallel

      at ExecutorAgent.execute (src/agents/executor.ts:52:15)

  console.log
    [ExecutorAgent] Executing step 0: shipments

      at ExecutorAgent.executeStep (src/agents/executor.ts:177:13)
          at Array.map (<anonymous>)

  console.error
    [ExecutorAgent] Step 0 (shipments) failed: Tool not found: shipments

      202 |
      203 |     } catch (error: any) {
    > 204 |       console.error(`[ExecutorAgent] Step ${index} (${step.tool}) failed:`, error.message);
          |               ^
      205 |
      206 |       return {
      207 |         success: false,

      at ExecutorAgent.executeStep (src/agents/executor.ts:204:15)
      at src/agents/executor.ts:166:19
          at Array.map (<anonymous>)
      at ExecutorAgent.executeBatch (src/agents/executor.ts:161:34)
      at ExecutorAgent.execute (src/agents/executor.ts:55:39)
      at OrchestratorAgent.handleQuery (src/agents/orchestrator.ts:62:43)
      at Object.<anonymous> (src/tests/integration/agents/orchestrator.integration.test.ts:217:25)

  console.log
    [ExecutorAgent] Executing 1 steps in parallel

      at ExecutorAgent.execute (src/agents/executor.ts:52:15)

  console.log
    [ExecutorAgent] Executing step 1: contaminants-detected

      at ExecutorAgent.executeStep (src/agents/executor.ts:177:13)
          at Array.map (<anonymous>)

  console.error
    [ExecutorAgent] Step 1 (contaminants-detected) failed: Tool not found: contaminants-detected

      202 |
      203 |     } catch (error: any) {
    > 204 |       console.error(`[ExecutorAgent] Step ${index} (${step.tool}) failed:`, error.message);
          |               ^
      205 |
      206 |       return {
      207 |         success: false,

      at ExecutorAgent.executeStep (src/agents/executor.ts:204:15)
      at src/agents/executor.ts:166:19
          at Array.map (<anonymous>)
      at ExecutorAgent.executeBatch (src/agents/executor.ts:161:34)
      at ExecutorAgent.execute (src/agents/executor.ts:55:39)
      at OrchestratorAgent.handleQuery (src/agents/orchestrator.ts:62:23)
      at Object.<anonymous> (src/tests/integration/agents/orchestrator.integration.test.ts:217:25)

  console.log
    [ExecutorAgent] Plan execution complete. 2 results

      at ExecutorAgent.execute (src/agents/executor.ts:79:13)

  console.log
    [OrchestratorAgent][1cd923cd-c8eb-4a5b-91b7-b4925b951ff9] Execution complete. Results: 2

      at OrchestratorAgent.handleQuery (src/agents/orchestrator.ts:63:15)

  console.log
    [OrchestratorAgent][1cd923cd-c8eb-4a5b-91b7-b4925b951ff9] Analyzing results...

      at OrchestratorAgent.handleQuery (src/agents/orchestrator.ts:66:15)

  console.log
    [AnalyzerAgent] Analyzing 2 tool results

      at AnalyzerAgent.analyze (src/agents/analyzer.ts:33:13)

  console.log
    [OrchestratorAgent][1cd923cd-c8eb-4a5b-91b7-b4925b951ff9] Analysis complete

      at OrchestratorAgent.handleQuery (src/agents/orchestrator.ts:68:15)

  console.log
    [OrchestratorAgent][1cd923cd-c8eb-4a5b-91b7-b4925b951ff9] Generating summary...

      at OrchestratorAgent.handleQuery (src/agents/orchestrator.ts:71:15)

  console.log
    [SummarizerAgent] Generating summary...

      at SummarizerAgent.summarize (src/agents/summarizer.ts:39:13)

  console.log
    [LLMProvider] Using openai provider

      at LLMProvider.generate (src/shared/llm/provider.ts:42:17)

  console.log
    [PlannerAgent] Plan generated successfully

      at PlannerAgent.plan (src/agents/planner.ts:98:17)

  console.log
    [PlannerAgent] Planning for query: Get contaminated shipments and their details

      at PlannerAgent.plan (src/agents/planner.ts:60:13)

  console.log
    [LLMProvider] Using openai provider

      at LLMProvider.generate (src/shared/llm/provider.ts:42:17)

  console.log
    [OrchestratorAgent] Stored request 1cd923cd-c8eb-4a5b-91b7-b4925b951ff9 in memory

      at OrchestratorAgent.storeInMemory (src/agents/orchestrator.ts:188:15)

  console.log
    [OrchestratorAgent][1cd923cd-c8eb-4a5b-91b7-b4925b951ff9] Complete in 3738ms

      at OrchestratorAgent.handleQuery (src/agents/orchestrator.ts:98:15)

  console.log
    [OrchestratorAgent][2522db2e-96c4-4beb-82da-a300fb010b5e] Processing query: Query 3

      at OrchestratorAgent.handleQuery (src/agents/orchestrator.ts:45:13)

  console.log
    [OrchestratorAgent][2522db2e-96c4-4beb-82da-a300fb010b5e] Loaded context: { semantic: undefined, episodic: undefined, entities: [] }

      at OrchestratorAgent.handleQuery (src/agents/orchestrator.ts:52:17)

  console.log
    [OrchestratorAgent][2522db2e-96c4-4beb-82da-a300fb010b5e] Planning...

      at OrchestratorAgent.handleQuery (src/agents/orchestrator.ts:56:15)

  console.log
    [PlannerAgent] Planning for query: Query 3

      at PlannerAgent.plan (src/agents/planner.ts:60:13)

  console.log
    [LLMProvider] Using openai provider

      at LLMProvider.generate (src/shared/llm/provider.ts:42:17)

  console.log
    [PlannerAgent] Plan generated successfully

      at PlannerAgent.plan (src/agents/planner.ts:98:17)

  console.log
    [OrchestratorAgent][2ed71d98-a51a-48cb-a529-dd8beb81d4ee] Plan generated: {
      steps: [
        { tool: 'facilities', params: [Object] },
        {
          tool: 'contaminants-detected',
          params: [Object],
          depends_on: [Array],
          parallel: false
        }
      ],
      metadata: {
        query: 'Show me high-risk contaminants detected in Berlin facilities',
        timestamp: '2022-01-15T08:00:00Z',
        estimated_duration_ms: 2000
      }
    }

      at OrchestratorAgent.handleQuery (src/agents/orchestrator.ts:58:15)

  console.log
    [OrchestratorAgent][2ed71d98-a51a-48cb-a529-dd8beb81d4ee] Executing plan...

      at OrchestratorAgent.handleQuery (src/agents/orchestrator.ts:61:15)

  console.log
    [ExecutorAgent] Executing plan with 2 steps

      at ExecutorAgent.execute (src/agents/executor.ts:35:13)

  console.log
    [ExecutorAgent] Executing 1 steps in parallel

      at ExecutorAgent.execute (src/agents/executor.ts:52:15)

  console.log
    [ExecutorAgent] Executing step 0: facilities

      at ExecutorAgent.executeStep (src/agents/executor.ts:177:13)
          at Array.map (<anonymous>)

  console.error
    [ExecutorAgent] Step 0 (facilities) failed: Tool not found: facilities

      202 |
      203 |     } catch (error: any) {
    > 204 |       console.error(`[ExecutorAgent] Step ${index} (${step.tool}) failed:`, error.message);
          |               ^
      205 |
      206 |       return {
      207 |         success: false,

      at ExecutorAgent.executeStep (src/agents/executor.ts:204:15)
      at src/agents/executor.ts:166:19
          at Array.map (<anonymous>)
      at ExecutorAgent.executeBatch (src/agents/executor.ts:161:34)
      at ExecutorAgent.execute (src/agents/executor.ts:55:39)
      at OrchestratorAgent.handleQuery (src/agents/orchestrator.ts:62:43)
      at Object.<anonymous> (src/tests/integration/agents/system.integration.test.ts:272:24)

  console.log
    [ExecutorAgent] Executing 1 steps in parallel

      at ExecutorAgent.execute (src/agents/executor.ts:52:15)

  console.log
    [ExecutorAgent] Executing step 1: contaminants-detected

      at ExecutorAgent.executeStep (src/agents/executor.ts:177:13)
          at Array.map (<anonymous>)

  console.error
    [ExecutorAgent] Step 1 (contaminants-detected) failed: Tool not found: contaminants-detected

      202 |
      203 |     } catch (error: any) {
    > 204 |       console.error(`[ExecutorAgent] Step ${index} (${step.tool}) failed:`, error.message);
          |               ^
      205 |
      206 |       return {
      207 |         success: false,

      at ExecutorAgent.executeStep (src/agents/executor.ts:204:15)
      at src/agents/executor.ts:166:19
          at Array.map (<anonymous>)
      at ExecutorAgent.executeBatch (src/agents/executor.ts:161:34)
      at ExecutorAgent.execute (src/agents/executor.ts:55:39)
      at OrchestratorAgent.handleQuery (src/agents/orchestrator.ts:62:23)
      at Object.<anonymous> (src/tests/integration/agents/system.integration.test.ts:272:24)

  console.log
    [ExecutorAgent] Plan execution complete. 2 results

      at ExecutorAgent.execute (src/agents/executor.ts:79:13)

  console.log
    [OrchestratorAgent][2ed71d98-a51a-48cb-a529-dd8beb81d4ee] Execution complete. Results: 2

      at OrchestratorAgent.handleQuery (src/agents/orchestrator.ts:63:15)

  console.log
    [OrchestratorAgent][2ed71d98-a51a-48cb-a529-dd8beb81d4ee] Analyzing results...

      at OrchestratorAgent.handleQuery (src/agents/orchestrator.ts:66:15)

  console.log
    [AnalyzerAgent] Analyzing 2 tool results

      at AnalyzerAgent.analyze (src/agents/analyzer.ts:33:13)

  console.log
    [OrchestratorAgent][2ed71d98-a51a-48cb-a529-dd8beb81d4ee] Analysis complete

      at OrchestratorAgent.handleQuery (src/agents/orchestrator.ts:68:15)

  console.log
    [OrchestratorAgent][2ed71d98-a51a-48cb-a529-dd8beb81d4ee] Generating summary...

      at OrchestratorAgent.handleQuery (src/agents/orchestrator.ts:71:15)

  console.log
    [SummarizerAgent] Generating summary...

      at SummarizerAgent.summarize (src/agents/summarizer.ts:39:13)

  console.log
    [LLMProvider] Using openai provider

      at LLMProvider.generate (src/shared/llm/provider.ts:42:17)

  console.error
    [PlannerAgent] Attempt 1/3 failed: [
      {
        "origin": "array",
        "code": "too_small",
        "minimum": 1,
        "inclusive": true,
        "path": [
          "steps"
        ],
        "message": "Too small: expected array to have >=1 items"
      }
    ]

      101 |       } catch (error: any) {
      102 |         attempts++;
    > 103 |         console.error(`[PlannerAgent] Attempt ${attempts}/${this.config.maxRetries} failed:`, error.message);
          |                 ^
      104 |
      105 |         if (attempts >= this.config.maxRetries) {
      106 |           throw new Error(`Failed to generate valid plan after ${attempts} attempts: ${error.message}`);

      at PlannerAgent.plan (src/agents/planner.ts:103:17)
      at OrchestratorAgent.handleQuery (src/agents/orchestrator.ts:57:20)
      at Object.<anonymous> (src/tests/integration/agents/orchestrator.integration.test.ts:218:25)

  console.log
    [LLMProvider] Using openai provider

      at LLMProvider.generate (src/shared/llm/provider.ts:42:17)

  console.log
    [OrchestratorAgent] Stored request 2ed71d98-a51a-48cb-a529-dd8beb81d4ee in memory

      at OrchestratorAgent.storeInMemory (src/agents/orchestrator.ts:188:15)

  console.log
    [OrchestratorAgent][2ed71d98-a51a-48cb-a529-dd8beb81d4ee] Complete in 2647ms

      at OrchestratorAgent.handleQuery (src/agents/orchestrator.ts:98:15)

  console.log
    
    ‚ö†Ô∏è  Blueprint 4 - High-risk contaminants in Berlin: {
      message: 'There were no successful results found to analyze high-risk contaminants detected in Berlin facilities.',
      anomalies: 0
    }

      at Object.<anonymous> (src/tests/integration/agents/system.integration.test.ts:279:15)

  console.log
    [OrchestratorAgent][3e14db08-4686-4807-95f4-d5c1a89290ce] Processing query: What is the acceptance rate for each facility?

      at OrchestratorAgent.handleQuery (src/agents/orchestrator.ts:45:13)

  console.log
    [OrchestratorAgent][3e14db08-4686-4807-95f4-d5c1a89290ce] Loaded context: {
      semantic: undefined,
      episodic: undefined,
      entities: [ 'entity:facility' ]
    }

      at OrchestratorAgent.handleQuery (src/agents/orchestrator.ts:52:17)

  console.log
    [OrchestratorAgent][3e14db08-4686-4807-95f4-d5c1a89290ce] Planning...

      at OrchestratorAgent.handleQuery (src/agents/orchestrator.ts:56:15)

  console.log
    [PlannerAgent] Planning for query: What is the acceptance rate for each facility?

      at PlannerAgent.plan (src/agents/planner.ts:60:13)

  console.log
    [LLMProvider] Using openai provider

      at LLMProvider.generate (src/shared/llm/provider.ts:42:17)

  console.log
    [PlannerAgent] Plan generated successfully

      at PlannerAgent.plan (src/agents/planner.ts:98:17)

  console.log
    [PlannerAgent] Planning for query: Show me all shipments from Berlin and Munich facilities from the last month

      at PlannerAgent.plan (src/agents/planner.ts:60:13)

  console.log
    [LLMProvider] Using openai provider

      at LLMProvider.generate (src/shared/llm/provider.ts:42:17)

  console.error
    [PlannerAgent] Attempt 2/3 failed: [
      {
        "origin": "array",
        "code": "too_small",
        "minimum": 1,
        "inclusive": true,
        "path": [
          "steps"
        ],
        "message": "Too small: expected array to have >=1 items"
      }
    ]

      101 |       } catch (error: any) {
      102 |         attempts++;
    > 103 |         console.error(`[PlannerAgent] Attempt ${attempts}/${this.config.maxRetries} failed:`, error.message);
          |                 ^
      104 |
      105 |         if (attempts >= this.config.maxRetries) {
      106 |           throw new Error(`Failed to generate valid plan after ${attempts} attempts: ${error.message}`);

      at PlannerAgent.plan (src/agents/planner.ts:103:17)
      at OrchestratorAgent.handleQuery (src/agents/orchestrator.ts:57:20)
      at Object.<anonymous> (src/tests/integration/agents/orchestrator.integration.test.ts:218:25)

  console.log
    [LLMProvider] Using openai provider

      at LLMProvider.generate (src/shared/llm/provider.ts:42:17)

  console.log
    [PlannerAgent] Plan generated successfully

      at PlannerAgent.plan (src/agents/planner.ts:98:17)

  console.log
    [OrchestratorAgent][3e14db08-4686-4807-95f4-d5c1a89290ce] Plan generated: {
      steps: [
        { tool: 'facilities', params: {}, depends_on: [], parallel: false }
      ],
      metadata: {
        query: 'What is the acceptance rate for each facility?',
        timestamp: '2022-01-15T13:30:00Z',
        estimated_duration_ms: 1500
      }
    }

      at OrchestratorAgent.handleQuery (src/agents/orchestrator.ts:58:15)

  console.log
    [OrchestratorAgent][3e14db08-4686-4807-95f4-d5c1a89290ce] Executing plan...

      at OrchestratorAgent.handleQuery (src/agents/orchestrator.ts:61:15)

  console.log
    [ExecutorAgent] Executing plan with 1 steps

      at ExecutorAgent.execute (src/agents/executor.ts:35:13)

  console.log
    [ExecutorAgent] Executing 1 steps in parallel

      at ExecutorAgent.execute (src/agents/executor.ts:52:15)

  console.log
    [ExecutorAgent] Executing step 0: facilities

      at ExecutorAgent.executeStep (src/agents/executor.ts:177:13)
          at Array.map (<anonymous>)

  console.error
    [ExecutorAgent] Step 0 (facilities) failed: Tool not found: facilities

      202 |
      203 |     } catch (error: any) {
    > 204 |       console.error(`[ExecutorAgent] Step ${index} (${step.tool}) failed:`, error.message);
          |               ^
      205 |
      206 |       return {
      207 |         success: false,

      at ExecutorAgent.executeStep (src/agents/executor.ts:204:15)
      at src/agents/executor.ts:166:19
          at Array.map (<anonymous>)
      at ExecutorAgent.executeBatch (src/agents/executor.ts:161:34)
      at ExecutorAgent.execute (src/agents/executor.ts:55:39)
      at OrchestratorAgent.handleQuery (src/agents/orchestrator.ts:62:43)
      at Object.<anonymous> (src/tests/integration/agents/system.integration.test.ts:286:24)

  console.log
    [ExecutorAgent] Plan execution complete. 1 results

      at ExecutorAgent.execute (src/agents/executor.ts:79:13)

  console.log
    [OrchestratorAgent][3e14db08-4686-4807-95f4-d5c1a89290ce] Execution complete. Results: 1

      at OrchestratorAgent.handleQuery (src/agents/orchestrator.ts:63:15)

  console.log
    [OrchestratorAgent][3e14db08-4686-4807-95f4-d5c1a89290ce] Analyzing results...

      at OrchestratorAgent.handleQuery (src/agents/orchestrator.ts:66:15)

  console.log
    [AnalyzerAgent] Analyzing 1 tool results

      at AnalyzerAgent.analyze (src/agents/analyzer.ts:33:13)

  console.log
    [OrchestratorAgent][3e14db08-4686-4807-95f4-d5c1a89290ce] Analysis complete

      at OrchestratorAgent.handleQuery (src/agents/orchestrator.ts:68:15)

  console.log
    [OrchestratorAgent][3e14db08-4686-4807-95f4-d5c1a89290ce] Generating summary...

      at OrchestratorAgent.handleQuery (src/agents/orchestrator.ts:71:15)

  console.log
    [SummarizerAgent] Generating summary...

      at SummarizerAgent.summarize (src/agents/summarizer.ts:39:13)

  console.log
    [LLMProvider] Using openai provider

      at LLMProvider.generate (src/shared/llm/provider.ts:42:17)

  console.log
    [OrchestratorAgent] Stored request 3e14db08-4686-4807-95f4-d5c1a89290ce in memory

      at OrchestratorAgent.storeInMemory (src/agents/orchestrator.ts:188:15)

  console.log
    [OrchestratorAgent][3e14db08-4686-4807-95f4-d5c1a89290ce] Complete in 1468ms

      at OrchestratorAgent.handleQuery (src/agents/orchestrator.ts:98:15)

  console.log
    
    üìä Blueprint 5 - Acceptance rates: {
      message: 'The analysis did not yield any successful results to determine the acceptance rate for each facility. No insights or anomalies were found in the data.',
      insights: 0
    }

      at Object.<anonymous> (src/tests/integration/agents/system.integration.test.ts:299:15)

  console.log
    [OrchestratorAgent][1843eff9-5ef9-4083-bee8-3aa6e2b2ebdd] Processing query: Show me shipments with HCl levels above medium

      at OrchestratorAgent.handleQuery (src/agents/orchestrator.ts:45:13)

  console.log
    [OrchestratorAgent][1843eff9-5ef9-4083-bee8-3aa6e2b2ebdd] Loaded context: {
      semantic: undefined,
      episodic: undefined,
      entities: [ 'entity:shipment' ]
    }

      at OrchestratorAgent.handleQuery (src/agents/orchestrator.ts:52:17)

  console.log
    [OrchestratorAgent][1843eff9-5ef9-4083-bee8-3aa6e2b2ebdd] Planning...

      at OrchestratorAgent.handleQuery (src/agents/orchestrator.ts:56:15)

  console.log
    [PlannerAgent] Planning for query: Show me shipments with HCl levels above medium

      at PlannerAgent.plan (src/agents/planner.ts:60:13)

  console.log
    [LLMProvider] Using openai provider

      at LLMProvider.generate (src/shared/llm/provider.ts:42:17)

  console.error
    [PlannerAgent] Attempt 3/3 failed: [
      {
        "origin": "array",
        "code": "too_small",
        "minimum": 1,
        "inclusive": true,
        "path": [
          "steps"
        ],
        "message": "Too small: expected array to have >=1 items"
      }
    ]

      101 |       } catch (error: any) {
      102 |         attempts++;
    > 103 |         console.error(`[PlannerAgent] Attempt ${attempts}/${this.config.maxRetries} failed:`, error.message);
          |                 ^
      104 |
      105 |         if (attempts >= this.config.maxRetries) {
      106 |           throw new Error(`Failed to generate valid plan after ${attempts} attempts: ${error.message}`);

      at PlannerAgent.plan (src/agents/planner.ts:103:17)
      at OrchestratorAgent.handleQuery (src/agents/orchestrator.ts:57:20)
      at Object.<anonymous> (src/tests/integration/agents/orchestrator.integration.test.ts:218:25)

  console.error
    [OrchestratorAgent][2522db2e-96c4-4beb-82da-a300fb010b5e] Error: Error: Failed to generate valid plan after 3 attempts: [
      {
        "origin": "array",
        "code": "too_small",
        "minimum": 1,
        "inclusive": true,
        "path": [
          "steps"
        ],
        "message": "Too small: expected array to have >=1 items"
      }
    ]
        at PlannerAgent.plan (/Users/yab/Projects/clear-ai-v2/src/agents/planner.ts:106:17)
        at processTicksAndRejections (node:internal/process/task_queues:105:5)
        at OrchestratorAgent.handleQuery (/Users/yab/Projects/clear-ai-v2/src/agents/orchestrator.ts:57:20)
        at Object.<anonymous> (/Users/yab/Projects/clear-ai-v2/src/tests/integration/agents/orchestrator.integration.test.ts:218:25)

      101 |
      102 |     } catch (error: any) {
    > 103 |       console.error(`[OrchestratorAgent][${requestId}] Error:`, error);
          |               ^
      104 |
      105 |       // Store error in memory for learning
      106 |       if (this.config.enableMemory) {

      at OrchestratorAgent.handleQuery (src/agents/orchestrator.ts:103:15)
      at Object.<anonymous> (src/tests/integration/agents/orchestrator.integration.test.ts:218:25)

  console.log
    
    üÜî Request IDs generated: {
      req1: 'd42b325c-c0c6-4a6c-99e8-85421143a37b',
      req2: '1cd923cd-c8eb-4a5b-91b7-b4925b951ff9',
      req3: '2522db2e-96c4-4beb-82da-a300fb010b5e'
    }

      at Object.<anonymous> (src/tests/integration/agents/orchestrator.integration.test.ts:232:15)

  console.log
    [OrchestratorAgent][ac6f8914-e153-48e8-bc73-793fe47e1ada] Processing query: Analyze shipments

      at OrchestratorAgent.handleQuery (src/agents/orchestrator.ts:45:13)

  console.log
    [OrchestratorAgent][ac6f8914-e153-48e8-bc73-793fe47e1ada] Loaded context: {
      semantic: undefined,
      episodic: undefined,
      entities: [ 'entity:shipment' ]
    }

      at OrchestratorAgent.handleQuery (src/agents/orchestrator.ts:52:17)

  console.log
    [OrchestratorAgent][ac6f8914-e153-48e8-bc73-793fe47e1ada] Planning...

      at OrchestratorAgent.handleQuery (src/agents/orchestrator.ts:56:15)

  console.log
    [PlannerAgent] Planning for query: Analyze shipments

      at PlannerAgent.plan (src/agents/planner.ts:60:13)

  console.log
    [LLMProvider] Using openai provider

      at LLMProvider.generate (src/shared/llm/provider.ts:42:17)

  console.log
    [PlannerAgent] Plan generated successfully

      at PlannerAgent.plan (src/agents/planner.ts:98:17)

  console.log
    [OrchestratorAgent][ac6f8914-e153-48e8-bc73-793fe47e1ada] Plan generated: {
      steps: [
        { tool: 'shipments', params: {}, depends_on: [], parallel: false }
      ],
      metadata: {
        query: 'Analyze shipments',
        timestamp: '2022-01-15T13:30:00Z',
        estimated_duration_ms: 1500
      }
    }

      at OrchestratorAgent.handleQuery (src/agents/orchestrator.ts:58:15)

  console.log
    [OrchestratorAgent][ac6f8914-e153-48e8-bc73-793fe47e1ada] Executing plan...

      at OrchestratorAgent.handleQuery (src/agents/orchestrator.ts:61:15)

  console.log
    [ExecutorAgent] Executing plan with 1 steps

      at ExecutorAgent.execute (src/agents/executor.ts:35:13)

  console.log
    [ExecutorAgent] Executing 1 steps in parallel

      at ExecutorAgent.execute (src/agents/executor.ts:52:15)

  console.log
    [ExecutorAgent] Executing step 0: shipments

      at ExecutorAgent.executeStep (src/agents/executor.ts:177:13)
          at Array.map (<anonymous>)

  console.error
    [ExecutorAgent] Step 0 (shipments) failed: Tool not found: shipments

      202 |
      203 |     } catch (error: any) {
    > 204 |       console.error(`[ExecutorAgent] Step ${index} (${step.tool}) failed:`, error.message);
          |               ^
      205 |
      206 |       return {
      207 |         success: false,

      at ExecutorAgent.executeStep (src/agents/executor.ts:204:15)
      at src/agents/executor.ts:166:19
          at Array.map (<anonymous>)
      at ExecutorAgent.executeBatch (src/agents/executor.ts:161:34)
      at ExecutorAgent.execute (src/agents/executor.ts:55:39)
      at OrchestratorAgent.handleQuery (src/agents/orchestrator.ts:62:43)
      at Object.<anonymous> (src/tests/integration/agents/orchestrator.integration.test.ts:240:24)

  console.log
    [ExecutorAgent] Plan execution complete. 1 results

      at ExecutorAgent.execute (src/agents/executor.ts:79:13)

  console.log
    [OrchestratorAgent][ac6f8914-e153-48e8-bc73-793fe47e1ada] Execution complete. Results: 1

      at OrchestratorAgent.handleQuery (src/agents/orchestrator.ts:63:15)

  console.log
    [OrchestratorAgent][ac6f8914-e153-48e8-bc73-793fe47e1ada] Analyzing results...

      at OrchestratorAgent.handleQuery (src/agents/orchestrator.ts:66:15)

  console.log
    [AnalyzerAgent] Analyzing 1 tool results

      at AnalyzerAgent.analyze (src/agents/analyzer.ts:33:13)

  console.log
    [OrchestratorAgent][ac6f8914-e153-48e8-bc73-793fe47e1ada] Analysis complete

      at OrchestratorAgent.handleQuery (src/agents/orchestrator.ts:68:15)

  console.log
    [OrchestratorAgent][ac6f8914-e153-48e8-bc73-793fe47e1ada] Generating summary...

      at OrchestratorAgent.handleQuery (src/agents/orchestrator.ts:71:15)

  console.log
    [SummarizerAgent] Generating summary...

      at SummarizerAgent.summarize (src/agents/summarizer.ts:39:13)

  console.log
    [LLMProvider] Using openai provider

      at LLMProvider.generate (src/shared/llm/provider.ts:42:17)

  console.log
    [PlannerAgent] Plan generated successfully

      at PlannerAgent.plan (src/agents/planner.ts:98:17)

  console.log
    [OrchestratorAgent][1843eff9-5ef9-4083-bee8-3aa6e2b2ebdd] Plan generated: {
      steps: [
        {
          tool: 'contaminants-detected',
          params: [Object],
          depends_on: [],
          parallel: false
        }
      ],
      metadata: {
        query: 'Show me shipments with HCl levels above medium',
        timestamp: '2022-01-15T15:30:00Z',
        estimated_duration_ms: 1500
      }
    }

      at OrchestratorAgent.handleQuery (src/agents/orchestrator.ts:58:15)

  console.log
    [OrchestratorAgent][1843eff9-5ef9-4083-bee8-3aa6e2b2ebdd] Executing plan...

      at OrchestratorAgent.handleQuery (src/agents/orchestrator.ts:61:15)

  console.log
    [ExecutorAgent] Executing plan with 1 steps

      at ExecutorAgent.execute (src/agents/executor.ts:35:13)

  console.log
    [ExecutorAgent] Executing 1 steps in parallel

      at ExecutorAgent.execute (src/agents/executor.ts:52:15)

  console.log
    [ExecutorAgent] Executing step 0: contaminants-detected

      at ExecutorAgent.executeStep (src/agents/executor.ts:177:13)
          at Array.map (<anonymous>)

  console.error
    [ExecutorAgent] Step 0 (contaminants-detected) failed: Tool not found: contaminants-detected

      202 |
      203 |     } catch (error: any) {
    > 204 |       console.error(`[ExecutorAgent] Step ${index} (${step.tool}) failed:`, error.message);
          |               ^
      205 |
      206 |       return {
      207 |         success: false,

      at ExecutorAgent.executeStep (src/agents/executor.ts:204:15)
      at src/agents/executor.ts:166:19
          at Array.map (<anonymous>)
      at ExecutorAgent.executeBatch (src/agents/executor.ts:161:34)
      at ExecutorAgent.execute (src/agents/executor.ts:55:39)
      at OrchestratorAgent.handleQuery (src/agents/orchestrator.ts:62:43)
      at Object.<anonymous> (src/tests/integration/agents/system.integration.test.ts:306:24)

  console.log
    [ExecutorAgent] Plan execution complete. 1 results

      at ExecutorAgent.execute (src/agents/executor.ts:79:13)

  console.log
    [OrchestratorAgent][1843eff9-5ef9-4083-bee8-3aa6e2b2ebdd] Execution complete. Results: 1

      at OrchestratorAgent.handleQuery (src/agents/orchestrator.ts:63:15)

  console.log
    [OrchestratorAgent][1843eff9-5ef9-4083-bee8-3aa6e2b2ebdd] Analyzing results...

      at OrchestratorAgent.handleQuery (src/agents/orchestrator.ts:66:15)

  console.log
    [AnalyzerAgent] Analyzing 1 tool results

      at AnalyzerAgent.analyze (src/agents/analyzer.ts:33:13)

  console.log
    [OrchestratorAgent][1843eff9-5ef9-4083-bee8-3aa6e2b2ebdd] Analysis complete

      at OrchestratorAgent.handleQuery (src/agents/orchestrator.ts:68:15)

  console.log
    [OrchestratorAgent][1843eff9-5ef9-4083-bee8-3aa6e2b2ebdd] Generating summary...

      at OrchestratorAgent.handleQuery (src/agents/orchestrator.ts:71:15)

  console.log
    [SummarizerAgent] Generating summary...

      at SummarizerAgent.summarize (src/agents/summarizer.ts:39:13)

  console.log
    [LLMProvider] Using openai provider

      at LLMProvider.generate (src/shared/llm/provider.ts:42:17)

  console.log
    [OrchestratorAgent] Stored request ac6f8914-e153-48e8-bc73-793fe47e1ada in memory

      at OrchestratorAgent.storeInMemory (src/agents/orchestrator.ts:188:15)

  console.log
    [OrchestratorAgent][ac6f8914-e153-48e8-bc73-793fe47e1ada] Complete in 1577ms

      at OrchestratorAgent.handleQuery (src/agents/orchestrator.ts:98:15)

  console.log
    
    üìä Metrics collected: { duration: 1577, toolsUsed: 1, timestamp: '2025-10-12T06:01:31.114Z' }

      at Object.<anonymous> (src/tests/integration/agents/orchestrator.integration.test.ts:251:15)

  console.log
    [OrchestratorAgent][e13ec6c5-debc-482c-9948-a3c032164719] Processing query: Get shipments

      at OrchestratorAgent.handleQuery (src/agents/orchestrator.ts:45:13)

  console.log
    [OrchestratorAgent][2e766d8d-0c4e-4622-8841-b9587ab004de] Processing query: Get facilities

      at OrchestratorAgent.handleQuery (src/agents/orchestrator.ts:45:13)

  console.log
    [OrchestratorAgent][751b9bc7-09ea-4a3c-b766-2ea51835770c] Processing query: Get inspections

      at OrchestratorAgent.handleQuery (src/agents/orchestrator.ts:45:13)

  console.log
    [OrchestratorAgent][e13ec6c5-debc-482c-9948-a3c032164719] Loaded context: {
      semantic: undefined,
      episodic: undefined,
      entities: [ 'entity:shipment' ]
    }

      at OrchestratorAgent.handleQuery (src/agents/orchestrator.ts:52:17)
          at async Promise.all (index 0)

  console.log
    [OrchestratorAgent][e13ec6c5-debc-482c-9948-a3c032164719] Planning...

      at OrchestratorAgent.handleQuery (src/agents/orchestrator.ts:56:15)
          at async Promise.all (index 0)

  console.log
    [PlannerAgent] Planning for query: Get shipments

      at PlannerAgent.plan (src/agents/planner.ts:60:13)
          at async Promise.all (index 0)

  console.log
    [OrchestratorAgent][2e766d8d-0c4e-4622-8841-b9587ab004de] Loaded context: { semantic: undefined, episodic: undefined, entities: [] }

      at OrchestratorAgent.handleQuery (src/agents/orchestrator.ts:52:17)
          at async Promise.all (index 1)

  console.log
    [OrchestratorAgent][2e766d8d-0c4e-4622-8841-b9587ab004de] Planning...

      at OrchestratorAgent.handleQuery (src/agents/orchestrator.ts:56:15)
          at async Promise.all (index 1)

  console.log
    [PlannerAgent] Planning for query: Get facilities

      at PlannerAgent.plan (src/agents/planner.ts:60:13)
          at async Promise.all (index 1)

  console.log
    [OrchestratorAgent][751b9bc7-09ea-4a3c-b766-2ea51835770c] Loaded context: {
      semantic: undefined,
      episodic: undefined,
      entities: [ 'entity:inspection' ]
    }

      at OrchestratorAgent.handleQuery (src/agents/orchestrator.ts:52:17)
          at async Promise.all (index 2)

  console.log
    [OrchestratorAgent][751b9bc7-09ea-4a3c-b766-2ea51835770c] Planning...

      at OrchestratorAgent.handleQuery (src/agents/orchestrator.ts:56:15)
          at async Promise.all (index 2)

  console.log
    [PlannerAgent] Planning for query: Get inspections

      at PlannerAgent.plan (src/agents/planner.ts:60:13)
          at async Promise.all (index 2)

  console.log
    [LLMProvider] Using openai provider

      at LLMProvider.generate (src/shared/llm/provider.ts:42:17)
          at async Promise.all (index 0)

  console.log
    [LLMProvider] Using openai provider

      at LLMProvider.generate (src/shared/llm/provider.ts:42:17)
          at async Promise.all (index 1)

  console.log
    [LLMProvider] Using openai provider

      at LLMProvider.generate (src/shared/llm/provider.ts:42:17)
          at async Promise.all (index 2)

  console.error
    [PlannerAgent] Attempt 1/3 failed: Unexpected token '$', ..."ity_id": [${step[0]."... is not valid JSON

      101 |       } catch (error: any) {
      102 |         attempts++;
    > 103 |         console.error(`[PlannerAgent] Attempt ${attempts}/${this.config.maxRetries} failed:`, error.message);
          |                 ^
      104 |
      105 |         if (attempts >= this.config.maxRetries) {
      106 |           throw new Error(`Failed to generate valid plan after ${attempts} attempts: ${error.message}`);

      at PlannerAgent.plan (src/agents/planner.ts:103:17)
      at Object.<anonymous> (src/tests/integration/agents/planner.integration.test.ts:296:20)

  console.log
    [LLMProvider] Using openai provider

      at LLMProvider.generate (src/shared/llm/provider.ts:42:17)

  console.log
    [OrchestratorAgent] Stored request 1843eff9-5ef9-4083-bee8-3aa6e2b2ebdd in memory

      at OrchestratorAgent.storeInMemory (src/agents/orchestrator.ts:188:15)

  console.log
    [OrchestratorAgent][1843eff9-5ef9-4083-bee8-3aa6e2b2ebdd] Complete in 1927ms

      at OrchestratorAgent.handleQuery (src/agents/orchestrator.ts:98:15)

  console.log
    
    üî¨ Blueprint 6 - HCl levels: {
      message: 'There were no shipments found with HCl levels above medium in the analysis.',
      tools: [ 'contaminants-detected' ]
    }

      at Object.<anonymous> (src/tests/integration/agents/system.integration.test.ts:313:15)

  console.log
    [OrchestratorAgent][cfb1bde2-decb-4aab-a9d7-9692446dfc45] Processing query: Which carriers have the highest contamination rates?

      at OrchestratorAgent.handleQuery (src/agents/orchestrator.ts:45:13)

  console.log
    [OrchestratorAgent][cfb1bde2-decb-4aab-a9d7-9692446dfc45] Loaded context: { semantic: undefined, episodic: undefined, entities: [] }

      at OrchestratorAgent.handleQuery (src/agents/orchestrator.ts:52:17)

  console.log
    [OrchestratorAgent][cfb1bde2-decb-4aab-a9d7-9692446dfc45] Planning...

      at OrchestratorAgent.handleQuery (src/agents/orchestrator.ts:56:15)

  console.log
    [PlannerAgent] Planning for query: Which carriers have the highest contamination rates?

      at PlannerAgent.plan (src/agents/planner.ts:60:13)

  console.log
    [LLMProvider] Using openai provider

      at LLMProvider.generate (src/shared/llm/provider.ts:42:17)

  console.log
    [PlannerAgent] Plan generated successfully

      at PlannerAgent.plan (src/agents/planner.ts:98:17)
          at async Promise.all (index 1)

  console.log
    [OrchestratorAgent][2e766d8d-0c4e-4622-8841-b9587ab004de] Plan generated: {
      steps: [
        { tool: 'facilities', params: {}, depends_on: [], parallel: false }
      ],
      metadata: {
        query: 'Get facilities',
        timestamp: '2022-01-01T12:00:00Z',
        estimated_duration_ms: 1500
      }
    }

      at OrchestratorAgent.handleQuery (src/agents/orchestrator.ts:58:15)
          at async Promise.all (index 1)

  console.log
    [OrchestratorAgent][2e766d8d-0c4e-4622-8841-b9587ab004de] Executing plan...

      at OrchestratorAgent.handleQuery (src/agents/orchestrator.ts:61:15)
          at async Promise.all (index 1)

  console.log
    [ExecutorAgent] Executing plan with 1 steps

      at ExecutorAgent.execute (src/agents/executor.ts:35:13)
          at async Promise.all (index 1)

  console.log
    [ExecutorAgent] Executing 1 steps in parallel

      at ExecutorAgent.execute (src/agents/executor.ts:52:15)
          at async Promise.all (index 1)

  console.log
    [ExecutorAgent] Executing step 0: facilities

      at ExecutorAgent.executeStep (src/agents/executor.ts:177:13)
          at Array.map (<anonymous>)
          at async Promise.all (index 1)

  console.error
    [ExecutorAgent] Step 0 (facilities) failed: Tool not found: facilities

      202 |
      203 |     } catch (error: any) {
    > 204 |       console.error(`[ExecutorAgent] Step ${index} (${step.tool}) failed:`, error.message);
          |               ^
      205 |
      206 |       return {
      207 |         success: false,

      at ExecutorAgent.executeStep (src/agents/executor.ts:204:15)
      at src/agents/executor.ts:166:19
          at Array.map (<anonymous>)
      at ExecutorAgent.executeBatch (src/agents/executor.ts:161:34)
      at ExecutorAgent.execute (src/agents/executor.ts:55:39)
      at OrchestratorAgent.handleQuery (src/agents/orchestrator.ts:62:43)
          at async Promise.all (index 1)
      at Object.<anonymous> (src/tests/integration/agents/orchestrator.integration.test.ts:263:49)

  console.log
    [ExecutorAgent] Plan execution complete. 1 results

      at ExecutorAgent.execute (src/agents/executor.ts:79:13)
          at async Promise.all (index 1)

  console.log
    [OrchestratorAgent][2e766d8d-0c4e-4622-8841-b9587ab004de] Execution complete. Results: 1

      at OrchestratorAgent.handleQuery (src/agents/orchestrator.ts:63:15)
          at async Promise.all (index 1)

  console.log
    [OrchestratorAgent][2e766d8d-0c4e-4622-8841-b9587ab004de] Analyzing results...

      at OrchestratorAgent.handleQuery (src/agents/orchestrator.ts:66:15)
          at async Promise.all (index 1)

  console.log
    [AnalyzerAgent] Analyzing 1 tool results

      at AnalyzerAgent.analyze (src/agents/analyzer.ts:33:13)
          at async Promise.all (index 1)

  console.log
    [OrchestratorAgent][2e766d8d-0c4e-4622-8841-b9587ab004de] Analysis complete

      at OrchestratorAgent.handleQuery (src/agents/orchestrator.ts:68:15)
          at async Promise.all (index 1)

  console.log
    [OrchestratorAgent][2e766d8d-0c4e-4622-8841-b9587ab004de] Generating summary...

      at OrchestratorAgent.handleQuery (src/agents/orchestrator.ts:71:15)
          at async Promise.all (index 1)

  console.log
    [SummarizerAgent] Generating summary...

      at SummarizerAgent.summarize (src/agents/summarizer.ts:39:13)
          at async Promise.all (index 1)

  console.log
    [LLMProvider] Using openai provider

      at LLMProvider.generate (src/shared/llm/provider.ts:42:17)
          at async Promise.all (index 1)

  console.log
    [PlannerAgent] Plan generated successfully

      at PlannerAgent.plan (src/agents/planner.ts:98:17)
          at async Promise.all (index 0)

  console.log
    [OrchestratorAgent][e13ec6c5-debc-482c-9948-a3c032164719] Plan generated: {
      steps: [
        { tool: 'shipments', params: {}, depends_on: [], parallel: false }
      ],
      metadata: {
        query: 'Get shipments',
        timestamp: '2022-01-15T13:30:00Z',
        estimated_duration_ms: 1500
      }
    }

      at OrchestratorAgent.handleQuery (src/agents/orchestrator.ts:58:15)
          at async Promise.all (index 0)

  console.log
    [OrchestratorAgent][e13ec6c5-debc-482c-9948-a3c032164719] Executing plan...

      at OrchestratorAgent.handleQuery (src/agents/orchestrator.ts:61:15)
          at async Promise.all (index 0)

  console.log
    [ExecutorAgent] Executing plan with 1 steps

      at ExecutorAgent.execute (src/agents/executor.ts:35:13)
          at async Promise.all (index 0)

  console.log
    [ExecutorAgent] Executing 1 steps in parallel

      at ExecutorAgent.execute (src/agents/executor.ts:52:15)
          at async Promise.all (index 0)

  console.log
    [ExecutorAgent] Executing step 0: shipments

      at ExecutorAgent.executeStep (src/agents/executor.ts:177:13)
          at Array.map (<anonymous>)
          at async Promise.all (index 0)

  console.error
    [ExecutorAgent] Step 0 (shipments) failed: Tool not found: shipments

      202 |
      203 |     } catch (error: any) {
    > 204 |       console.error(`[ExecutorAgent] Step ${index} (${step.tool}) failed:`, error.message);
          |               ^
      205 |
      206 |       return {
      207 |         success: false,

      at ExecutorAgent.executeStep (src/agents/executor.ts:204:15)
      at src/agents/executor.ts:166:19
          at Array.map (<anonymous>)
      at ExecutorAgent.executeBatch (src/agents/executor.ts:161:34)
      at ExecutorAgent.execute (src/agents/executor.ts:55:39)
      at OrchestratorAgent.handleQuery (src/agents/orchestrator.ts:62:43)
          at async Promise.all (index 0)
      at Object.<anonymous> (src/tests/integration/agents/orchestrator.integration.test.ts:263:49)

  console.log
    [ExecutorAgent] Plan execution complete. 1 results

      at ExecutorAgent.execute (src/agents/executor.ts:79:13)
          at async Promise.all (index 0)

  console.log
    [OrchestratorAgent][e13ec6c5-debc-482c-9948-a3c032164719] Execution complete. Results: 1

      at OrchestratorAgent.handleQuery (src/agents/orchestrator.ts:63:15)
          at async Promise.all (index 0)

  console.log
    [OrchestratorAgent][e13ec6c5-debc-482c-9948-a3c032164719] Analyzing results...

      at OrchestratorAgent.handleQuery (src/agents/orchestrator.ts:66:15)
          at async Promise.all (index 0)

  console.log
    [AnalyzerAgent] Analyzing 1 tool results

      at AnalyzerAgent.analyze (src/agents/analyzer.ts:33:13)
          at async Promise.all (index 0)

  console.log
    [OrchestratorAgent][e13ec6c5-debc-482c-9948-a3c032164719] Analysis complete

      at OrchestratorAgent.handleQuery (src/agents/orchestrator.ts:68:15)
          at async Promise.all (index 0)

  console.log
    [OrchestratorAgent][e13ec6c5-debc-482c-9948-a3c032164719] Generating summary...

      at OrchestratorAgent.handleQuery (src/agents/orchestrator.ts:71:15)
          at async Promise.all (index 0)

  console.log
    [SummarizerAgent] Generating summary...

      at SummarizerAgent.summarize (src/agents/summarizer.ts:39:13)
          at async Promise.all (index 0)

  console.log
    [LLMProvider] Using openai provider

      at LLMProvider.generate (src/shared/llm/provider.ts:42:17)
          at async Promise.all (index 0)

  console.log
    [PlannerAgent] Plan generated successfully

      at PlannerAgent.plan (src/agents/planner.ts:98:17)
          at async Promise.all (index 2)

  console.log
    [OrchestratorAgent][751b9bc7-09ea-4a3c-b766-2ea51835770c] Plan generated: {
      steps: [
        {
          tool: 'inspections',
          params: {},
          depends_on: [],
          parallel: false
        }
      ],
      metadata: {
        query: 'Get inspections',
        timestamp: '2022-01-01T12:00:00Z',
        estimated_duration_ms: 1500
      }
    }

      at OrchestratorAgent.handleQuery (src/agents/orchestrator.ts:58:15)
          at async Promise.all (index 2)

  console.log
    [OrchestratorAgent][751b9bc7-09ea-4a3c-b766-2ea51835770c] Executing plan...

      at OrchestratorAgent.handleQuery (src/agents/orchestrator.ts:61:15)
          at async Promise.all (index 2)

  console.log
    [ExecutorAgent] Executing plan with 1 steps

      at ExecutorAgent.execute (src/agents/executor.ts:35:13)
          at async Promise.all (index 2)

  console.log
    [ExecutorAgent] Executing 1 steps in parallel

      at ExecutorAgent.execute (src/agents/executor.ts:52:15)
          at async Promise.all (index 2)

  console.log
    [ExecutorAgent] Executing step 0: inspections

      at ExecutorAgent.executeStep (src/agents/executor.ts:177:13)
          at Array.map (<anonymous>)
          at async Promise.all (index 2)

  console.error
    [ExecutorAgent] Step 0 (inspections) failed: Tool not found: inspections

      202 |
      203 |     } catch (error: any) {
    > 204 |       console.error(`[ExecutorAgent] Step ${index} (${step.tool}) failed:`, error.message);
          |               ^
      205 |
      206 |       return {
      207 |         success: false,

      at ExecutorAgent.executeStep (src/agents/executor.ts:204:15)
      at src/agents/executor.ts:166:19
          at Array.map (<anonymous>)
      at ExecutorAgent.executeBatch (src/agents/executor.ts:161:34)
      at ExecutorAgent.execute (src/agents/executor.ts:55:39)
      at OrchestratorAgent.handleQuery (src/agents/orchestrator.ts:62:43)
          at async Promise.all (index 2)
      at Object.<anonymous> (src/tests/integration/agents/orchestrator.integration.test.ts:263:49)

  console.log
    [ExecutorAgent] Plan execution complete. 1 results

      at ExecutorAgent.execute (src/agents/executor.ts:79:13)
          at async Promise.all (index 2)

  console.log
    [OrchestratorAgent][751b9bc7-09ea-4a3c-b766-2ea51835770c] Execution complete. Results: 1

      at OrchestratorAgent.handleQuery (src/agents/orchestrator.ts:63:15)
          at async Promise.all (index 2)

  console.log
    [OrchestratorAgent][751b9bc7-09ea-4a3c-b766-2ea51835770c] Analyzing results...

      at OrchestratorAgent.handleQuery (src/agents/orchestrator.ts:66:15)
          at async Promise.all (index 2)

  console.log
    [AnalyzerAgent] Analyzing 1 tool results

      at AnalyzerAgent.analyze (src/agents/analyzer.ts:33:13)
          at async Promise.all (index 2)

  console.log
    [OrchestratorAgent][751b9bc7-09ea-4a3c-b766-2ea51835770c] Analysis complete

      at OrchestratorAgent.handleQuery (src/agents/orchestrator.ts:68:15)
          at async Promise.all (index 2)

  console.log
    [OrchestratorAgent][751b9bc7-09ea-4a3c-b766-2ea51835770c] Generating summary...

      at OrchestratorAgent.handleQuery (src/agents/orchestrator.ts:71:15)
          at async Promise.all (index 2)

  console.log
    [SummarizerAgent] Generating summary...

      at SummarizerAgent.summarize (src/agents/summarizer.ts:39:13)
          at async Promise.all (index 2)

  console.log
    [LLMProvider] Using openai provider

      at LLMProvider.generate (src/shared/llm/provider.ts:42:17)
          at async Promise.all (index 2)

  console.log
    [PlannerAgent] Plan generated successfully

      at PlannerAgent.plan (src/agents/planner.ts:98:17)

  console.log
    [PlannerAgent] Planning for query: Which carriers have the highest contamination rates?

      at PlannerAgent.plan (src/agents/planner.ts:60:13)

  console.log
    [LLMProvider] Using openai provider

      at LLMProvider.generate (src/shared/llm/provider.ts:42:17)

  console.log
    [OrchestratorAgent] Stored request 2e766d8d-0c4e-4622-8841-b9587ab004de in memory

      at OrchestratorAgent.storeInMemory (src/agents/orchestrator.ts:188:15)
          at async Promise.all (index 1)

  console.log
    [OrchestratorAgent][2e766d8d-0c4e-4622-8841-b9587ab004de] Complete in 1475ms

      at OrchestratorAgent.handleQuery (src/agents/orchestrator.ts:98:15)
          at async Promise.all (index 1)

  console.log
    [PlannerAgent] Plan generated successfully

      at PlannerAgent.plan (src/agents/planner.ts:98:17)

  console.log
    [OrchestratorAgent][cfb1bde2-decb-4aab-a9d7-9692446dfc45] Plan generated: {
      steps: [
        { tool: 'shipments', params: [Object] },
        { tool: 'shipments', params: [Object] },
        { tool: 'shipments', params: [Object] }
      ],
      metadata: {
        query: 'Which carriers have the highest contamination rates?',
        timestamp: '2022-01-01T12:00:00Z',
        estimated_duration_ms: 3000
      }
    }

      at OrchestratorAgent.handleQuery (src/agents/orchestrator.ts:58:15)

  console.log
    [OrchestratorAgent][cfb1bde2-decb-4aab-a9d7-9692446dfc45] Executing plan...

      at OrchestratorAgent.handleQuery (src/agents/orchestrator.ts:61:15)

  console.log
    [ExecutorAgent] Executing plan with 3 steps

      at ExecutorAgent.execute (src/agents/executor.ts:35:13)

  console.log
    [ExecutorAgent] Executing 3 steps in parallel

      at ExecutorAgent.execute (src/agents/executor.ts:52:15)

  console.log
    [ExecutorAgent] Executing step 0: shipments

      at ExecutorAgent.executeStep (src/agents/executor.ts:177:13)
          at Array.map (<anonymous>)

  console.error
    [ExecutorAgent] Step 0 (shipments) failed: Tool not found: shipments

      202 |
      203 |     } catch (error: any) {
    > 204 |       console.error(`[ExecutorAgent] Step ${index} (${step.tool}) failed:`, error.message);
          |               ^
      205 |
      206 |       return {
      207 |         success: false,

      at ExecutorAgent.executeStep (src/agents/executor.ts:204:15)
      at src/agents/executor.ts:166:19
          at Array.map (<anonymous>)
      at ExecutorAgent.executeBatch (src/agents/executor.ts:161:34)
      at ExecutorAgent.execute (src/agents/executor.ts:55:39)
      at OrchestratorAgent.handleQuery (src/agents/orchestrator.ts:62:43)
      at Object.<anonymous> (src/tests/integration/agents/system.integration.test.ts:320:24)

  console.log
    [ExecutorAgent] Executing step 1: shipments

      at ExecutorAgent.executeStep (src/agents/executor.ts:177:13)
          at Array.map (<anonymous>)

  console.error
    [ExecutorAgent] Step 1 (shipments) failed: Tool not found: shipments

      202 |
      203 |     } catch (error: any) {
    > 204 |       console.error(`[ExecutorAgent] Step ${index} (${step.tool}) failed:`, error.message);
          |               ^
      205 |
      206 |       return {
      207 |         success: false,

      at ExecutorAgent.executeStep (src/agents/executor.ts:204:15)
      at src/agents/executor.ts:166:19
          at Array.map (<anonymous>)
      at ExecutorAgent.executeBatch (src/agents/executor.ts:161:34)
      at ExecutorAgent.execute (src/agents/executor.ts:55:39)
      at OrchestratorAgent.handleQuery (src/agents/orchestrator.ts:62:43)
      at Object.<anonymous> (src/tests/integration/agents/system.integration.test.ts:320:24)

  console.log
    [ExecutorAgent] Executing step 2: shipments

      at ExecutorAgent.executeStep (src/agents/executor.ts:177:13)
          at Array.map (<anonymous>)

  console.error
    [ExecutorAgent] Step 2 (shipments) failed: Tool not found: shipments

      202 |
      203 |     } catch (error: any) {
    > 204 |       console.error(`[ExecutorAgent] Step ${index} (${step.tool}) failed:`, error.message);
          |               ^
      205 |
      206 |       return {
      207 |         success: false,

      at ExecutorAgent.executeStep (src/agents/executor.ts:204:15)
      at src/agents/executor.ts:166:19
          at Array.map (<anonymous>)
      at ExecutorAgent.executeBatch (src/agents/executor.ts:161:34)
      at ExecutorAgent.execute (src/agents/executor.ts:55:39)
      at OrchestratorAgent.handleQuery (src/agents/orchestrator.ts:62:43)
      at Object.<anonymous> (src/tests/integration/agents/system.integration.test.ts:320:24)

  console.log
    [ExecutorAgent] Plan execution complete. 3 results

      at ExecutorAgent.execute (src/agents/executor.ts:79:13)

  console.log
    [OrchestratorAgent][cfb1bde2-decb-4aab-a9d7-9692446dfc45] Execution complete. Results: 3

      at OrchestratorAgent.handleQuery (src/agents/orchestrator.ts:63:15)

  console.log
    [OrchestratorAgent][cfb1bde2-decb-4aab-a9d7-9692446dfc45] Analyzing results...

      at OrchestratorAgent.handleQuery (src/agents/orchestrator.ts:66:15)

  console.log
    [AnalyzerAgent] Analyzing 3 tool results

      at AnalyzerAgent.analyze (src/agents/analyzer.ts:33:13)

  console.log
    [OrchestratorAgent][cfb1bde2-decb-4aab-a9d7-9692446dfc45] Analysis complete

      at OrchestratorAgent.handleQuery (src/agents/orchestrator.ts:68:15)

  console.log
    [OrchestratorAgent][cfb1bde2-decb-4aab-a9d7-9692446dfc45] Generating summary...

      at OrchestratorAgent.handleQuery (src/agents/orchestrator.ts:71:15)

  console.log
    [SummarizerAgent] Generating summary...

      at SummarizerAgent.summarize (src/agents/summarizer.ts:39:13)

  console.log
    [LLMProvider] Using openai provider

      at LLMProvider.generate (src/shared/llm/provider.ts:42:17)

  console.log
    [OrchestratorAgent] Stored request 751b9bc7-09ea-4a3c-b766-2ea51835770c in memory

      at OrchestratorAgent.storeInMemory (src/agents/orchestrator.ts:188:15)
          at async Promise.all (index 2)

  console.log
    [OrchestratorAgent][751b9bc7-09ea-4a3c-b766-2ea51835770c] Complete in 1770ms

      at OrchestratorAgent.handleQuery (src/agents/orchestrator.ts:98:15)
          at async Promise.all (index 2)

  console.log
    [OrchestratorAgent] Stored request e13ec6c5-debc-482c-9948-a3c032164719 in memory

      at OrchestratorAgent.storeInMemory (src/agents/orchestrator.ts:188:15)
          at async Promise.all (index 0)

  console.log
    [OrchestratorAgent][e13ec6c5-debc-482c-9948-a3c032164719] Complete in 1889ms

      at OrchestratorAgent.handleQuery (src/agents/orchestrator.ts:98:15)
          at async Promise.all (index 0)

  console.log
    
    ‚ö° Concurrent execution: {
      totalTime: 1889,
      query1: 1889,
      query2: 1475,
      query3: 1770,
      allSucceeded: true
    }

      at Object.<anonymous> (src/tests/integration/agents/orchestrator.integration.test.ts:279:15)

  console.log
    [OrchestratorAgent][7879a10a-f7b5-400b-9c11-d29a21ed01b9] Processing query: Get contaminated shipments from last week

      at OrchestratorAgent.handleQuery (src/agents/orchestrator.ts:45:13)

  console.log
    [OrchestratorAgent][7879a10a-f7b5-400b-9c11-d29a21ed01b9] Loaded context: {
      semantic: undefined,
      episodic: undefined,
      entities: [ 'temporal:week', 'entity:shipment' ]
    }

      at OrchestratorAgent.handleQuery (src/agents/orchestrator.ts:52:17)

  console.log
    [OrchestratorAgent][7879a10a-f7b5-400b-9c11-d29a21ed01b9] Planning...

      at OrchestratorAgent.handleQuery (src/agents/orchestrator.ts:56:15)

  console.log
    [PlannerAgent] Planning for query: Get contaminated shipments from last week

      at PlannerAgent.plan (src/agents/planner.ts:60:13)

  console.log
    [LLMProvider] Using openai provider

      at LLMProvider.generate (src/shared/llm/provider.ts:42:17)

  console.log
    [OrchestratorAgent] Stored request cfb1bde2-decb-4aab-a9d7-9692446dfc45 in memory

      at OrchestratorAgent.storeInMemory (src/agents/orchestrator.ts:188:15)

  console.log
    [OrchestratorAgent][cfb1bde2-decb-4aab-a9d7-9692446dfc45] Complete in 1753ms

      at OrchestratorAgent.handleQuery (src/agents/orchestrator.ts:98:15)

  console.log
    
    üöö Blueprint 7 - Carrier contamination rates: {
      message: 'There were no successful results to analyze the carriers with the highest contamination rates. No insights or anomalies were found in the analysis.',
      insights: 0
    }

      at Object.<anonymous> (src/tests/integration/agents/system.integration.test.ts:331:15)

  console.log
    [OrchestratorAgent][03912a46-d6c0-48c6-9872-8367a6d156a9] Processing query: Show me inspection failures by waste type

      at OrchestratorAgent.handleQuery (src/agents/orchestrator.ts:45:13)

  console.log
    [OrchestratorAgent][03912a46-d6c0-48c6-9872-8367a6d156a9] Loaded context: {
      semantic: undefined,
      episodic: undefined,
      entities: [ 'entity:inspection' ]
    }

      at OrchestratorAgent.handleQuery (src/agents/orchestrator.ts:52:17)

  console.log
    [OrchestratorAgent][03912a46-d6c0-48c6-9872-8367a6d156a9] Planning...

      at OrchestratorAgent.handleQuery (src/agents/orchestrator.ts:56:15)

  console.log
    [PlannerAgent] Planning for query: Show me inspection failures by waste type

      at PlannerAgent.plan (src/agents/planner.ts:60:13)

  console.log
    [LLMProvider] Using openai provider

      at LLMProvider.generate (src/shared/llm/provider.ts:42:17)

  console.log
    [PlannerAgent] Plan generated successfully

      at PlannerAgent.plan (src/agents/planner.ts:98:17)

  console.log
    [PlannerAgent] Plan generated successfully

      at PlannerAgent.plan (src/agents/planner.ts:98:17)

  console.log
    [OrchestratorAgent][03912a46-d6c0-48c6-9872-8367a6d156a9] Plan generated: {
      steps: [
        {
          tool: 'inspections',
          params: [Object],
          depends_on: [],
          parallel: false
        }
      ],
      metadata: {
        query: 'Show me inspection failures by waste type',
        timestamp: '2022-01-01T12:00:00Z',
        estimated_duration_ms: 1500
      }
    }

      at OrchestratorAgent.handleQuery (src/agents/orchestrator.ts:58:15)

  console.log
    [OrchestratorAgent][03912a46-d6c0-48c6-9872-8367a6d156a9] Executing plan...

      at OrchestratorAgent.handleQuery (src/agents/orchestrator.ts:61:15)

  console.log
    [ExecutorAgent] Executing plan with 1 steps

      at ExecutorAgent.execute (src/agents/executor.ts:35:13)

  console.log
    [ExecutorAgent] Executing 1 steps in parallel

      at ExecutorAgent.execute (src/agents/executor.ts:52:15)

  console.log
    [ExecutorAgent] Executing step 0: inspections

      at ExecutorAgent.executeStep (src/agents/executor.ts:177:13)
          at Array.map (<anonymous>)

  console.log
    [PlannerAgent] Planning for query: Show me the data

      at PlannerAgent.plan (src/agents/planner.ts:60:13)

  console.log
    [LLMProvider] Using openai provider

      at LLMProvider.generate (src/shared/llm/provider.ts:42:17)

  console.error
    [ExecutorAgent] Step 0 (inspections) failed: Tool not found: inspections

      202 |
      203 |     } catch (error: any) {
    > 204 |       console.error(`[ExecutorAgent] Step ${index} (${step.tool}) failed:`, error.message);
          |               ^
      205 |
      206 |       return {
      207 |         success: false,

      at ExecutorAgent.executeStep (src/agents/executor.ts:204:15)
      at src/agents/executor.ts:166:19
          at Array.map (<anonymous>)
      at ExecutorAgent.executeBatch (src/agents/executor.ts:161:34)
      at ExecutorAgent.execute (src/agents/executor.ts:55:39)
      at OrchestratorAgent.handleQuery (src/agents/orchestrator.ts:62:43)
      at Object.<anonymous> (src/tests/integration/agents/system.integration.test.ts:338:24)

  console.log
    [ExecutorAgent] Plan execution complete. 1 results

      at ExecutorAgent.execute (src/agents/executor.ts:79:13)

  console.log
    [OrchestratorAgent][03912a46-d6c0-48c6-9872-8367a6d156a9] Execution complete. Results: 1

      at OrchestratorAgent.handleQuery (src/agents/orchestrator.ts:63:15)

  console.log
    [OrchestratorAgent][03912a46-d6c0-48c6-9872-8367a6d156a9] Analyzing results...

      at OrchestratorAgent.handleQuery (src/agents/orchestrator.ts:66:15)

  console.log
    [AnalyzerAgent] Analyzing 1 tool results

      at AnalyzerAgent.analyze (src/agents/analyzer.ts:33:13)

  console.log
    [OrchestratorAgent][03912a46-d6c0-48c6-9872-8367a6d156a9] Analysis complete

      at OrchestratorAgent.handleQuery (src/agents/orchestrator.ts:68:15)

  console.log
    [OrchestratorAgent][03912a46-d6c0-48c6-9872-8367a6d156a9] Generating summary...

      at OrchestratorAgent.handleQuery (src/agents/orchestrator.ts:71:15)

  console.log
    [SummarizerAgent] Generating summary...

      at SummarizerAgent.summarize (src/agents/summarizer.ts:39:13)

  console.log
    [LLMProvider] Using openai provider

      at LLMProvider.generate (src/shared/llm/provider.ts:42:17)

  console.log
    [OrchestratorAgent] Stored request 03912a46-d6c0-48c6-9872-8367a6d156a9 in memory

      at OrchestratorAgent.storeInMemory (src/agents/orchestrator.ts:188:15)

  console.log
    [OrchestratorAgent][03912a46-d6c0-48c6-9872-8367a6d156a9] Complete in 1646ms

      at OrchestratorAgent.handleQuery (src/agents/orchestrator.ts:98:15)

  console.log
    
    üîç Blueprint 8 - Inspection failures: {
      message: 'There were no inspection failures by waste type found in the analysis. No insights or anomalies were identified related to this query.',
      entities: 0
    }

      at Object.<anonymous> (src/tests/integration/agents/system.integration.test.ts:349:15)

  console.log
    [OrchestratorAgent][211f6f0d-2317-4321-9783-7bff23b2b1b0] Processing query: What facilities are near capacity?

      at OrchestratorAgent.handleQuery (src/agents/orchestrator.ts:45:13)

  console.log
    [OrchestratorAgent][211f6f0d-2317-4321-9783-7bff23b2b1b0] Loaded context: { semantic: undefined, episodic: undefined, entities: [] }

      at OrchestratorAgent.handleQuery (src/agents/orchestrator.ts:52:17)

  console.log
    [OrchestratorAgent][211f6f0d-2317-4321-9783-7bff23b2b1b0] Planning...

      at OrchestratorAgent.handleQuery (src/agents/orchestrator.ts:56:15)

  console.log
    [PlannerAgent] Planning for query: What facilities are near capacity?

      at PlannerAgent.plan (src/agents/planner.ts:60:13)

  console.log
    [LLMProvider] Using openai provider

      at LLMProvider.generate (src/shared/llm/provider.ts:42:17)

  console.error
    [PlannerAgent] Attempt 1/3 failed: [
      {
        "origin": "array",
        "code": "too_small",
        "minimum": 1,
        "inclusive": true,
        "path": [
          "steps"
        ],
        "message": "Too small: expected array to have >=1 items"
      }
    ]

      101 |       } catch (error: any) {
      102 |         attempts++;
    > 103 |         console.error(`[PlannerAgent] Attempt ${attempts}/${this.config.maxRetries} failed:`, error.message);
          |                 ^
      104 |
      105 |         if (attempts >= this.config.maxRetries) {
      106 |           throw new Error(`Failed to generate valid plan after ${attempts} attempts: ${error.message}`);

      at PlannerAgent.plan (src/agents/planner.ts:103:17)
      at Object.<anonymous> (src/tests/integration/agents/planner.integration.test.ts:334:20)

  console.log
    [LLMProvider] Using openai provider

      at LLMProvider.generate (src/shared/llm/provider.ts:42:17)

  console.error
    [PlannerAgent] Attempt 2/3 failed: [
      {
        "origin": "array",
        "code": "too_small",
        "minimum": 1,
        "inclusive": true,
        "path": [
          "steps"
        ],
        "message": "Too small: expected array to have >=1 items"
      }
    ]

      101 |       } catch (error: any) {
      102 |         attempts++;
    > 103 |         console.error(`[PlannerAgent] Attempt ${attempts}/${this.config.maxRetries} failed:`, error.message);
          |                 ^
      104 |
      105 |         if (attempts >= this.config.maxRetries) {
      106 |           throw new Error(`Failed to generate valid plan after ${attempts} attempts: ${error.message}`);

      at PlannerAgent.plan (src/agents/planner.ts:103:17)
      at Object.<anonymous> (src/tests/integration/agents/planner.integration.test.ts:334:20)

  console.log
    [LLMProvider] Using openai provider

      at LLMProvider.generate (src/shared/llm/provider.ts:42:17)

  console.log
    [PlannerAgent] Plan generated successfully

      at PlannerAgent.plan (src/agents/planner.ts:98:17)

  console.log
    [OrchestratorAgent][211f6f0d-2317-4321-9783-7bff23b2b1b0] Plan generated: {
      steps: [
        {
          tool: 'facilities',
          params: [Object],
          depends_on: [],
          parallel: false
        }
      ],
      metadata: {
        query: 'What facilities are near capacity?',
        timestamp: '2022-01-15T13:30:00Z',
        estimated_duration_ms: 1500
      }
    }

      at OrchestratorAgent.handleQuery (src/agents/orchestrator.ts:58:15)

  console.log
    [OrchestratorAgent][211f6f0d-2317-4321-9783-7bff23b2b1b0] Executing plan...

      at OrchestratorAgent.handleQuery (src/agents/orchestrator.ts:61:15)

  console.log
    [ExecutorAgent] Executing plan with 1 steps

      at ExecutorAgent.execute (src/agents/executor.ts:35:13)

  console.log
    [ExecutorAgent] Executing 1 steps in parallel

      at ExecutorAgent.execute (src/agents/executor.ts:52:15)

  console.log
    [ExecutorAgent] Executing step 0: facilities

      at ExecutorAgent.executeStep (src/agents/executor.ts:177:13)
          at Array.map (<anonymous>)

  console.error
    [ExecutorAgent] Step 0 (facilities) failed: Tool not found: facilities

      202 |
      203 |     } catch (error: any) {
    > 204 |       console.error(`[ExecutorAgent] Step ${index} (${step.tool}) failed:`, error.message);
          |               ^
      205 |
      206 |       return {
      207 |         success: false,

      at ExecutorAgent.executeStep (src/agents/executor.ts:204:15)
      at src/agents/executor.ts:166:19
          at Array.map (<anonymous>)
      at ExecutorAgent.executeBatch (src/agents/executor.ts:161:34)
      at ExecutorAgent.execute (src/agents/executor.ts:55:39)
      at OrchestratorAgent.handleQuery (src/agents/orchestrator.ts:62:43)
      at Object.<anonymous> (src/tests/integration/agents/system.integration.test.ts:356:24)

  console.log
    [ExecutorAgent] Plan execution complete. 1 results

      at ExecutorAgent.execute (src/agents/executor.ts:79:13)

  console.log
    [OrchestratorAgent][211f6f0d-2317-4321-9783-7bff23b2b1b0] Execution complete. Results: 1

      at OrchestratorAgent.handleQuery (src/agents/orchestrator.ts:63:15)

  console.log
    [OrchestratorAgent][211f6f0d-2317-4321-9783-7bff23b2b1b0] Analyzing results...

      at OrchestratorAgent.handleQuery (src/agents/orchestrator.ts:66:15)

  console.log
    [AnalyzerAgent] Analyzing 1 tool results

      at AnalyzerAgent.analyze (src/agents/analyzer.ts:33:13)

  console.log
    [OrchestratorAgent][211f6f0d-2317-4321-9783-7bff23b2b1b0] Analysis complete

      at OrchestratorAgent.handleQuery (src/agents/orchestrator.ts:68:15)

  console.log
    [OrchestratorAgent][211f6f0d-2317-4321-9783-7bff23b2b1b0] Generating summary...

      at OrchestratorAgent.handleQuery (src/agents/orchestrator.ts:71:15)

  console.log
    [SummarizerAgent] Generating summary...

      at SummarizerAgent.summarize (src/agents/summarizer.ts:39:13)

  console.log
    [LLMProvider] Using openai provider

      at LLMProvider.generate (src/shared/llm/provider.ts:42:17)

  console.log
    [PlannerAgent] Plan generated successfully

      at PlannerAgent.plan (src/agents/planner.ts:98:17)

  console.log
    [OrchestratorAgent][7879a10a-f7b5-400b-9c11-d29a21ed01b9] Plan generated: {
      steps: [
        {
          tool: 'shipments',
          params: [Object],
          depends_on: [],
          parallel: false
        },
        {
          tool: 'contaminants-detected',
          params: [Object],
          depends_on: [Array],
          parallel: false
        }
      ],
      metadata: {
        query: 'Get contaminated shipments from last week',
        timestamp: '2022-01-31T08:00:00Z',
        estimated_duration_ms: 2000
      }
    }

      at OrchestratorAgent.handleQuery (src/agents/orchestrator.ts:58:15)

  console.log
    [OrchestratorAgent][7879a10a-f7b5-400b-9c11-d29a21ed01b9] Executing plan...

      at OrchestratorAgent.handleQuery (src/agents/orchestrator.ts:61:15)

  console.log
    [ExecutorAgent] Executing plan with 2 steps

      at ExecutorAgent.execute (src/agents/executor.ts:35:13)

  console.log
    [ExecutorAgent] Executing 1 steps in parallel

      at ExecutorAgent.execute (src/agents/executor.ts:52:15)

  console.log
    [ExecutorAgent] Executing step 0: shipments

      at ExecutorAgent.executeStep (src/agents/executor.ts:177:13)
          at Array.map (<anonymous>)

  console.error
    [ExecutorAgent] Step 0 (shipments) failed: Tool not found: shipments

      202 |
      203 |     } catch (error: any) {
    > 204 |       console.error(`[ExecutorAgent] Step ${index} (${step.tool}) failed:`, error.message);
          |               ^
      205 |
      206 |       return {
      207 |         success: false,

      at ExecutorAgent.executeStep (src/agents/executor.ts:204:15)
      at src/agents/executor.ts:166:19
          at Array.map (<anonymous>)
      at ExecutorAgent.executeBatch (src/agents/executor.ts:161:34)
      at ExecutorAgent.execute (src/agents/executor.ts:55:39)
      at OrchestratorAgent.handleQuery (src/agents/orchestrator.ts:62:43)
      at Object.<anonymous> (src/tests/integration/agents/orchestrator.integration.test.ts:292:24)

  console.log
    [ExecutorAgent] Executing 1 steps in parallel

      at ExecutorAgent.execute (src/agents/executor.ts:52:15)

  console.log
    [ExecutorAgent] Executing step 1: contaminants-detected

      at ExecutorAgent.executeStep (src/agents/executor.ts:177:13)
          at Array.map (<anonymous>)

  console.error
    [ExecutorAgent] Step 1 (contaminants-detected) failed: Tool not found: contaminants-detected

      202 |
      203 |     } catch (error: any) {
    > 204 |       console.error(`[ExecutorAgent] Step ${index} (${step.tool}) failed:`, error.message);
          |               ^
      205 |
      206 |       return {
      207 |         success: false,

      at ExecutorAgent.executeStep (src/agents/executor.ts:204:15)
      at src/agents/executor.ts:166:19
          at Array.map (<anonymous>)
      at ExecutorAgent.executeBatch (src/agents/executor.ts:161:34)
      at ExecutorAgent.execute (src/agents/executor.ts:55:39)
      at OrchestratorAgent.handleQuery (src/agents/orchestrator.ts:62:23)
      at Object.<anonymous> (src/tests/integration/agents/orchestrator.integration.test.ts:292:24)

  console.log
    [ExecutorAgent] Plan execution complete. 2 results

      at ExecutorAgent.execute (src/agents/executor.ts:79:13)

  console.log
    [OrchestratorAgent][7879a10a-f7b5-400b-9c11-d29a21ed01b9] Execution complete. Results: 2

      at OrchestratorAgent.handleQuery (src/agents/orchestrator.ts:63:15)

  console.log
    [OrchestratorAgent][7879a10a-f7b5-400b-9c11-d29a21ed01b9] Analyzing results...

      at OrchestratorAgent.handleQuery (src/agents/orchestrator.ts:66:15)

  console.log
    [AnalyzerAgent] Analyzing 2 tool results

      at AnalyzerAgent.analyze (src/agents/analyzer.ts:33:13)

  console.log
    [OrchestratorAgent][7879a10a-f7b5-400b-9c11-d29a21ed01b9] Analysis complete

      at OrchestratorAgent.handleQuery (src/agents/orchestrator.ts:68:15)

  console.log
    [OrchestratorAgent][7879a10a-f7b5-400b-9c11-d29a21ed01b9] Generating summary...

      at OrchestratorAgent.handleQuery (src/agents/orchestrator.ts:71:15)

  console.log
    [SummarizerAgent] Generating summary...

      at SummarizerAgent.summarize (src/agents/summarizer.ts:39:13)

  console.log
    [LLMProvider] Using openai provider

      at LLMProvider.generate (src/shared/llm/provider.ts:42:17)

  console.log
    [OrchestratorAgent] Stored request 211f6f0d-2317-4321-9783-7bff23b2b1b0 in memory

      at OrchestratorAgent.storeInMemory (src/agents/orchestrator.ts:188:15)

  console.log
    [OrchestratorAgent][211f6f0d-2317-4321-9783-7bff23b2b1b0] Complete in 1393ms

      at OrchestratorAgent.handleQuery (src/agents/orchestrator.ts:98:15)

  console.log
    
    üìà Blueprint 9 - Near capacity facilities: {
      message: 'There were no successful results found to analyze the facilities near capacity. No entities or insights were identified in the analysis.',
      anomalies: 0
    }

      at Object.<anonymous> (src/tests/integration/agents/system.integration.test.ts:367:15)

  console.log
    [OrchestratorAgent][2478114c-7776-4be3-8ed6-f402fe8de9eb] Processing query: Show me contaminant trends over the past 30 days

      at OrchestratorAgent.handleQuery (src/agents/orchestrator.ts:45:13)

  console.log
    [OrchestratorAgent][2478114c-7776-4be3-8ed6-f402fe8de9eb] Loaded context: { semantic: undefined, episodic: undefined, entities: [] }

      at OrchestratorAgent.handleQuery (src/agents/orchestrator.ts:52:17)

  console.log
    [OrchestratorAgent][2478114c-7776-4be3-8ed6-f402fe8de9eb] Planning...

      at OrchestratorAgent.handleQuery (src/agents/orchestrator.ts:56:15)

  console.log
    [PlannerAgent] Planning for query: Show me contaminant trends over the past 30 days

      at PlannerAgent.plan (src/agents/planner.ts:60:13)

  console.log
    [LLMProvider] Using openai provider

      at LLMProvider.generate (src/shared/llm/provider.ts:42:17)

  console.log
    [PlannerAgent] Plan generated successfully

      at PlannerAgent.plan (src/agents/planner.ts:98:17)

  console.log
    [PlannerAgent] Planning for query: Get shipments from October 1st to October 10th going to Hannover

      at PlannerAgent.plan (src/agents/planner.ts:60:13)

  console.log
    [LLMProvider] Using openai provider

      at LLMProvider.generate (src/shared/llm/provider.ts:42:17)

  console.log
    [OrchestratorAgent] Stored request 7879a10a-f7b5-400b-9c11-d29a21ed01b9 in memory

      at OrchestratorAgent.storeInMemory (src/agents/orchestrator.ts:188:15)

  console.log
    [OrchestratorAgent][7879a10a-f7b5-400b-9c11-d29a21ed01b9] Complete in 3718ms

      at OrchestratorAgent.handleQuery (src/agents/orchestrator.ts:98:15)

  console.log
    
    ‚öôÔ∏è  Planner config test: { toolsUsed: [ 'shipments', 'contaminants-detected' ], success: true }

      at Object.<anonymous> (src/tests/integration/agents/orchestrator.integration.test.ts:300:15)

  console.log
    [OrchestratorAgent][00db237e-e6e4-45d5-9e2e-6a29017356de] Processing query: Analyze facility capacity

      at OrchestratorAgent.handleQuery (src/agents/orchestrator.ts:45:13)

  console.log
    [OrchestratorAgent][00db237e-e6e4-45d5-9e2e-6a29017356de] Loaded context: {
      semantic: undefined,
      episodic: undefined,
      entities: [ 'entity:facility' ]
    }

      at OrchestratorAgent.handleQuery (src/agents/orchestrator.ts:52:17)

  console.log
    [OrchestratorAgent][00db237e-e6e4-45d5-9e2e-6a29017356de] Planning...

      at OrchestratorAgent.handleQuery (src/agents/orchestrator.ts:56:15)

  console.log
    [PlannerAgent] Planning for query: Analyze facility capacity

      at PlannerAgent.plan (src/agents/planner.ts:60:13)

  console.log
    [LLMProvider] Using openai provider

      at LLMProvider.generate (src/shared/llm/provider.ts:42:17)

  console.log
    [PlannerAgent] Plan generated successfully

      at PlannerAgent.plan (src/agents/planner.ts:98:17)

  console.log
    [OrchestratorAgent][2478114c-7776-4be3-8ed6-f402fe8de9eb] Plan generated: {
      steps: [
        {
          tool: 'contaminants-detected',
          params: [Object],
          depends_on: [],
          parallel: false
        }
      ],
      metadata: {
        query: 'Show me contaminant trends over the past 30 days',
        timestamp: '2022-03-02T15:30:00Z',
        estimated_duration_ms: 1500
      }
    }

      at OrchestratorAgent.handleQuery (src/agents/orchestrator.ts:58:15)

  console.log
    [OrchestratorAgent][2478114c-7776-4be3-8ed6-f402fe8de9eb] Executing plan...

      at OrchestratorAgent.handleQuery (src/agents/orchestrator.ts:61:15)

  console.log
    [ExecutorAgent] Executing plan with 1 steps

      at ExecutorAgent.execute (src/agents/executor.ts:35:13)

  console.log
    [ExecutorAgent] Executing 1 steps in parallel

      at ExecutorAgent.execute (src/agents/executor.ts:52:15)

  console.log
    [ExecutorAgent] Executing step 0: contaminants-detected

      at ExecutorAgent.executeStep (src/agents/executor.ts:177:13)
          at Array.map (<anonymous>)

  console.error
    [ExecutorAgent] Step 0 (contaminants-detected) failed: Tool not found: contaminants-detected

      202 |
      203 |     } catch (error: any) {
    > 204 |       console.error(`[ExecutorAgent] Step ${index} (${step.tool}) failed:`, error.message);
          |               ^
      205 |
      206 |       return {
      207 |         success: false,

      at ExecutorAgent.executeStep (src/agents/executor.ts:204:15)
      at src/agents/executor.ts:166:19
          at Array.map (<anonymous>)
      at ExecutorAgent.executeBatch (src/agents/executor.ts:161:34)
      at ExecutorAgent.execute (src/agents/executor.ts:55:39)
      at OrchestratorAgent.handleQuery (src/agents/orchestrator.ts:62:43)
      at Object.<anonymous> (src/tests/integration/agents/system.integration.test.ts:374:24)

  console.log
    [ExecutorAgent] Plan execution complete. 1 results

      at ExecutorAgent.execute (src/agents/executor.ts:79:13)

  console.log
    [OrchestratorAgent][2478114c-7776-4be3-8ed6-f402fe8de9eb] Execution complete. Results: 1

      at OrchestratorAgent.handleQuery (src/agents/orchestrator.ts:63:15)

  console.log
    [OrchestratorAgent][2478114c-7776-4be3-8ed6-f402fe8de9eb] Analyzing results...

      at OrchestratorAgent.handleQuery (src/agents/orchestrator.ts:66:15)

  console.log
    [AnalyzerAgent] Analyzing 1 tool results

      at AnalyzerAgent.analyze (src/agents/analyzer.ts:33:13)

  console.log
    [OrchestratorAgent][2478114c-7776-4be3-8ed6-f402fe8de9eb] Analysis complete

      at OrchestratorAgent.handleQuery (src/agents/orchestrator.ts:68:15)

  console.log
    [OrchestratorAgent][2478114c-7776-4be3-8ed6-f402fe8de9eb] Generating summary...

      at OrchestratorAgent.handleQuery (src/agents/orchestrator.ts:71:15)

  console.log
    [SummarizerAgent] Generating summary...

      at SummarizerAgent.summarize (src/agents/summarizer.ts:39:13)

  console.log
    [LLMProvider] Using openai provider

      at LLMProvider.generate (src/shared/llm/provider.ts:42:17)

  console.log
    [PlannerAgent] Plan generated successfully

      at PlannerAgent.plan (src/agents/planner.ts:98:17)

  console.log
    [OrchestratorAgent][00db237e-e6e4-45d5-9e2e-6a29017356de] Plan generated: {
      steps: [ { tool: 'facilities', params: [Object] } ],
      metadata: {
        query: 'Analyze facility capacity',
        timestamp: '2022-01-01T12:00:00Z',
        estimated_duration_ms: 2000
      }
    }

      at OrchestratorAgent.handleQuery (src/agents/orchestrator.ts:58:15)

  console.log
    [OrchestratorAgent][00db237e-e6e4-45d5-9e2e-6a29017356de] Executing plan...

      at OrchestratorAgent.handleQuery (src/agents/orchestrator.ts:61:15)

  console.log
    [ExecutorAgent] Executing plan with 1 steps

      at ExecutorAgent.execute (src/agents/executor.ts:35:13)

  console.log
    [ExecutorAgent] Executing 1 steps in parallel

      at ExecutorAgent.execute (src/agents/executor.ts:52:15)

  console.log
    [ExecutorAgent] Executing step 0: facilities

      at ExecutorAgent.executeStep (src/agents/executor.ts:177:13)
          at Array.map (<anonymous>)

  console.error
    [ExecutorAgent] Step 0 (facilities) failed: Tool not found: facilities

      202 |
      203 |     } catch (error: any) {
    > 204 |       console.error(`[ExecutorAgent] Step ${index} (${step.tool}) failed:`, error.message);
          |               ^
      205 |
      206 |       return {
      207 |         success: false,

      at ExecutorAgent.executeStep (src/agents/executor.ts:204:15)
      at src/agents/executor.ts:166:19
          at Array.map (<anonymous>)
      at ExecutorAgent.executeBatch (src/agents/executor.ts:161:34)
      at ExecutorAgent.execute (src/agents/executor.ts:55:39)
      at OrchestratorAgent.handleQuery (src/agents/orchestrator.ts:62:43)
      at Object.<anonymous> (src/tests/integration/agents/orchestrator.integration.test.ts:309:24)

  console.log
    [ExecutorAgent] Plan execution complete. 1 results

      at ExecutorAgent.execute (src/agents/executor.ts:79:13)

  console.log
    [OrchestratorAgent][00db237e-e6e4-45d5-9e2e-6a29017356de] Execution complete. Results: 1

      at OrchestratorAgent.handleQuery (src/agents/orchestrator.ts:63:15)

  console.log
    [OrchestratorAgent][00db237e-e6e4-45d5-9e2e-6a29017356de] Analyzing results...

      at OrchestratorAgent.handleQuery (src/agents/orchestrator.ts:66:15)

  console.log
    [AnalyzerAgent] Analyzing 1 tool results

      at AnalyzerAgent.analyze (src/agents/analyzer.ts:33:13)

  console.log
    [OrchestratorAgent][00db237e-e6e4-45d5-9e2e-6a29017356de] Analysis complete

      at OrchestratorAgent.handleQuery (src/agents/orchestrator.ts:68:15)

  console.log
    [OrchestratorAgent][00db237e-e6e4-45d5-9e2e-6a29017356de] Generating summary...

      at OrchestratorAgent.handleQuery (src/agents/orchestrator.ts:71:15)

  console.log
    [SummarizerAgent] Generating summary...

      at SummarizerAgent.summarize (src/agents/summarizer.ts:39:13)

  console.log
    [LLMProvider] Using openai provider

      at LLMProvider.generate (src/shared/llm/provider.ts:42:17)

  console.log
    [OrchestratorAgent] Stored request 2478114c-7776-4be3-8ed6-f402fe8de9eb in memory

      at OrchestratorAgent.storeInMemory (src/agents/orchestrator.ts:188:15)

  console.log
    [OrchestratorAgent][2478114c-7776-4be3-8ed6-f402fe8de9eb] Complete in 1789ms

      at OrchestratorAgent.handleQuery (src/agents/orchestrator.ts:98:15)

  console.log
    
    üìâ Blueprint 10 - Contaminant trends: {
      message: 'There were no successful results to analyze contaminant trends over the past 30 days.',
      insights: 0
    }

      at Object.<anonymous> (src/tests/integration/agents/system.integration.test.ts:385:15)

  console.log
    [OrchestratorAgent][10b013b8-f858-494c-832c-4412036150ab] Processing query: Get shipments from NonExistentFacility123

      at OrchestratorAgent.handleQuery (src/agents/orchestrator.ts:45:13)

  console.log
    [OrchestratorAgent][10b013b8-f858-494c-832c-4412036150ab] Loaded context: {
      semantic: undefined,
      episodic: undefined,
      entities: [ 'entity:shipment' ]
    }

      at OrchestratorAgent.handleQuery (src/agents/orchestrator.ts:52:17)

  console.log
    [OrchestratorAgent][10b013b8-f858-494c-832c-4412036150ab] Planning...

      at OrchestratorAgent.handleQuery (src/agents/orchestrator.ts:56:15)

  console.log
    [PlannerAgent] Planning for query: Get shipments from NonExistentFacility123

      at PlannerAgent.plan (src/agents/planner.ts:60:13)

  console.log
    [LLMProvider] Using openai provider

      at LLMProvider.generate (src/shared/llm/provider.ts:42:17)

  console.log
    [OrchestratorAgent] Stored request 00db237e-e6e4-45d5-9e2e-6a29017356de in memory

      at OrchestratorAgent.storeInMemory (src/agents/orchestrator.ts:188:15)

  console.log
    [OrchestratorAgent][00db237e-e6e4-45d5-9e2e-6a29017356de] Complete in 1776ms

      at OrchestratorAgent.handleQuery (src/agents/orchestrator.ts:98:15)

  console.log
    
    üîç Analyzer mode test: { hasAnalysis: true, insights: 0 }

      at Object.<anonymous> (src/tests/integration/agents/orchestrator.integration.test.ts:320:15)

  console.log
    [OrchestratorAgent][25b9b4b6-5127-4300-b14c-cb804d974b3e] Processing query: Show me inspection results

      at OrchestratorAgent.handleQuery (src/agents/orchestrator.ts:45:13)

  console.log
    [OrchestratorAgent][25b9b4b6-5127-4300-b14c-cb804d974b3e] Loaded context: {
      semantic: undefined,
      episodic: undefined,
      entities: [ 'entity:inspection' ]
    }

      at OrchestratorAgent.handleQuery (src/agents/orchestrator.ts:52:17)

  console.log
    [OrchestratorAgent][25b9b4b6-5127-4300-b14c-cb804d974b3e] Planning...

      at OrchestratorAgent.handleQuery (src/agents/orchestrator.ts:56:15)

  console.log
    [PlannerAgent] Planning for query: Show me inspection results

      at PlannerAgent.plan (src/agents/planner.ts:60:13)

  console.log
    [LLMProvider] Using openai provider

      at LLMProvider.generate (src/shared/llm/provider.ts:42:17)

  console.log
    [PlannerAgent] Plan generated successfully

      at PlannerAgent.plan (src/agents/planner.ts:98:17)

  console.log
    [PlannerAgent] Planning for query: Get facilities

      at PlannerAgent.plan (src/agents/planner.ts:60:13)

  console.log
    [LLMProvider] Using openai provider

      at LLMProvider.generate (src/shared/llm/provider.ts:42:17)

  console.log
    [PlannerAgent] Plan generated successfully

      at PlannerAgent.plan (src/agents/planner.ts:98:17)

  console.log
    [OrchestratorAgent][10b013b8-f858-494c-832c-4412036150ab] Plan generated: {
      steps: [
        {
          tool: 'facilities',
          params: [Object],
          depends_on: [],
          parallel: false
        },
        {
          tool: 'shipments',
          params: [Object],
          depends_on: [Array],
          parallel: false
        }
      ],
      metadata: {
        query: 'Get shipments from NonExistentFacility123',
        timestamp: '2022-01-01T12:00:00Z',
        estimated_duration_ms: 2000
      }
    }

      at OrchestratorAgent.handleQuery (src/agents/orchestrator.ts:58:15)

  console.log
    [OrchestratorAgent][10b013b8-f858-494c-832c-4412036150ab] Executing plan...

      at OrchestratorAgent.handleQuery (src/agents/orchestrator.ts:61:15)

  console.log
    [ExecutorAgent] Executing plan with 2 steps

      at ExecutorAgent.execute (src/agents/executor.ts:35:13)

  console.log
    [ExecutorAgent] Executing 1 steps in parallel

      at ExecutorAgent.execute (src/agents/executor.ts:52:15)

  console.log
    [ExecutorAgent] Executing step 0: facilities

      at ExecutorAgent.executeStep (src/agents/executor.ts:177:13)
          at Array.map (<anonymous>)

  console.error
    [ExecutorAgent] Step 0 (facilities) failed: Tool not found: facilities

      202 |
      203 |     } catch (error: any) {
    > 204 |       console.error(`[ExecutorAgent] Step ${index} (${step.tool}) failed:`, error.message);
          |               ^
      205 |
      206 |       return {
      207 |         success: false,

      at ExecutorAgent.executeStep (src/agents/executor.ts:204:15)
      at src/agents/executor.ts:166:19
          at Array.map (<anonymous>)
      at ExecutorAgent.executeBatch (src/agents/executor.ts:161:34)
      at ExecutorAgent.execute (src/agents/executor.ts:55:39)
      at OrchestratorAgent.handleQuery (src/agents/orchestrator.ts:62:43)
      at Object.<anonymous> (src/tests/integration/agents/system.integration.test.ts:394:24)

  console.log
    [ExecutorAgent] Executing 1 steps in parallel

      at ExecutorAgent.execute (src/agents/executor.ts:52:15)

  console.log
    [ExecutorAgent] Executing step 1: shipments

      at ExecutorAgent.executeStep (src/agents/executor.ts:177:13)
          at Array.map (<anonymous>)

  console.error
    [ExecutorAgent] Step 1 (shipments) failed: Tool not found: shipments

      202 |
      203 |     } catch (error: any) {
    > 204 |       console.error(`[ExecutorAgent] Step ${index} (${step.tool}) failed:`, error.message);
          |               ^
      205 |
      206 |       return {
      207 |         success: false,

      at ExecutorAgent.executeStep (src/agents/executor.ts:204:15)
      at src/agents/executor.ts:166:19
          at Array.map (<anonymous>)
      at ExecutorAgent.executeBatch (src/agents/executor.ts:161:34)
      at ExecutorAgent.execute (src/agents/executor.ts:55:39)
      at OrchestratorAgent.handleQuery (src/agents/orchestrator.ts:62:23)
      at Object.<anonymous> (src/tests/integration/agents/system.integration.test.ts:394:24)

  console.log
    [ExecutorAgent] Plan execution complete. 2 results

      at ExecutorAgent.execute (src/agents/executor.ts:79:13)

  console.log
    [OrchestratorAgent][10b013b8-f858-494c-832c-4412036150ab] Execution complete. Results: 2

      at OrchestratorAgent.handleQuery (src/agents/orchestrator.ts:63:15)

  console.log
    [OrchestratorAgent][10b013b8-f858-494c-832c-4412036150ab] Analyzing results...

      at OrchestratorAgent.handleQuery (src/agents/orchestrator.ts:66:15)

  console.log
    [AnalyzerAgent] Analyzing 2 tool results

      at AnalyzerAgent.analyze (src/agents/analyzer.ts:33:13)

  console.log
    [OrchestratorAgent][10b013b8-f858-494c-832c-4412036150ab] Analysis complete

      at OrchestratorAgent.handleQuery (src/agents/orchestrator.ts:68:15)

  console.log
    [OrchestratorAgent][10b013b8-f858-494c-832c-4412036150ab] Generating summary...

      at OrchestratorAgent.handleQuery (src/agents/orchestrator.ts:71:15)

  console.log
    [SummarizerAgent] Generating summary...

      at SummarizerAgent.summarize (src/agents/summarizer.ts:39:13)

  console.log
    [LLMProvider] Using openai provider

      at LLMProvider.generate (src/shared/llm/provider.ts:42:17)

  console.log
    [PlannerAgent] Plan generated successfully

      at PlannerAgent.plan (src/agents/planner.ts:98:17)

  console.log
    [OrchestratorAgent][25b9b4b6-5127-4300-b14c-cb804d974b3e] Plan generated: {
      steps: [
        {
          tool: 'inspections',
          params: {},
          depends_on: [],
          parallel: false
        }
      ],
      metadata: {
        query: 'Show me inspection results',
        timestamp: '2022-01-15T13:30:00Z',
        estimated_duration_ms: 1500
      }
    }

      at OrchestratorAgent.handleQuery (src/agents/orchestrator.ts:58:15)

  console.log
    [OrchestratorAgent][25b9b4b6-5127-4300-b14c-cb804d974b3e] Executing plan...

      at OrchestratorAgent.handleQuery (src/agents/orchestrator.ts:61:15)

  console.log
    [ExecutorAgent] Executing plan with 1 steps

      at ExecutorAgent.execute (src/agents/executor.ts:35:13)

  console.log
    [ExecutorAgent] Executing 1 steps in parallel

      at ExecutorAgent.execute (src/agents/executor.ts:52:15)

  console.log
    [ExecutorAgent] Executing step 0: inspections

      at ExecutorAgent.executeStep (src/agents/executor.ts:177:13)
          at Array.map (<anonymous>)

  console.error
    [ExecutorAgent] Step 0 (inspections) failed: Tool not found: inspections

      202 |
      203 |     } catch (error: any) {
    > 204 |       console.error(`[ExecutorAgent] Step ${index} (${step.tool}) failed:`, error.message);
          |               ^
      205 |
      206 |       return {
      207 |         success: false,

      at ExecutorAgent.executeStep (src/agents/executor.ts:204:15)
      at src/agents/executor.ts:166:19
          at Array.map (<anonymous>)
      at ExecutorAgent.executeBatch (src/agents/executor.ts:161:34)
      at ExecutorAgent.execute (src/agents/executor.ts:55:39)
      at OrchestratorAgent.handleQuery (src/agents/orchestrator.ts:62:43)
      at Object.<anonymous> (src/tests/integration/agents/orchestrator.integration.test.ts:328:24)

  console.log
    [ExecutorAgent] Plan execution complete. 1 results

      at ExecutorAgent.execute (src/agents/executor.ts:79:13)

  console.log
    [OrchestratorAgent][25b9b4b6-5127-4300-b14c-cb804d974b3e] Execution complete. Results: 1

      at OrchestratorAgent.handleQuery (src/agents/orchestrator.ts:63:15)

  console.log
    [OrchestratorAgent][25b9b4b6-5127-4300-b14c-cb804d974b3e] Analyzing results...

      at OrchestratorAgent.handleQuery (src/agents/orchestrator.ts:66:15)

  console.log
    [AnalyzerAgent] Analyzing 1 tool results

      at AnalyzerAgent.analyze (src/agents/analyzer.ts:33:13)

  console.log
    [OrchestratorAgent][25b9b4b6-5127-4300-b14c-cb804d974b3e] Analysis complete

      at OrchestratorAgent.handleQuery (src/agents/orchestrator.ts:68:15)

  console.log
    [OrchestratorAgent][25b9b4b6-5127-4300-b14c-cb804d974b3e] Generating summary...

      at OrchestratorAgent.handleQuery (src/agents/orchestrator.ts:71:15)

  console.log
    [SummarizerAgent] Generating summary...

      at SummarizerAgent.summarize (src/agents/summarizer.ts:39:13)

  console.log
    [LLMProvider] Using openai provider

      at LLMProvider.generate (src/shared/llm/provider.ts:42:17)

  console.log
    [OrchestratorAgent] Stored request 25b9b4b6-5127-4300-b14c-cb804d974b3e in memory

      at OrchestratorAgent.storeInMemory (src/agents/orchestrator.ts:188:15)

  console.log
    [OrchestratorAgent][25b9b4b6-5127-4300-b14c-cb804d974b3e] Complete in 1627ms

      at OrchestratorAgent.handleQuery (src/agents/orchestrator.ts:98:15)

  console.log
    
    üìù Summarizer format test: { messageLength: 68, hasAnalysis: true }

      at Object.<anonymous> (src/tests/integration/agents/orchestrator.integration.test.ts:335:15)

  console.log
    [OrchestratorAgent][46620fc5-7881-4ea8-a029-d4504bf5abb0] Processing query: Get all shipments from Berlin facilities, analyze contamination patterns, and summarize the findings

      at OrchestratorAgent.handleQuery (src/agents/orchestrator.ts:45:13)

  console.log
    [OrchestratorAgent][46620fc5-7881-4ea8-a029-d4504bf5abb0] Loaded context: {
      semantic: undefined,
      episodic: undefined,
      entities: [ 'entity:shipment' ]
    }

      at OrchestratorAgent.handleQuery (src/agents/orchestrator.ts:52:17)

  console.log
    [OrchestratorAgent][46620fc5-7881-4ea8-a029-d4504bf5abb0] Planning...

      at OrchestratorAgent.handleQuery (src/agents/orchestrator.ts:56:15)

  console.log
    [PlannerAgent] Planning for query: Get all shipments from Berlin facilities, analyze contamination patterns, and summarize the findings

      at PlannerAgent.plan (src/agents/planner.ts:60:13)

  console.log
    [LLMProvider] Using openai provider

      at LLMProvider.generate (src/shared/llm/provider.ts:42:17)

  console.log
    [OrchestratorAgent] Stored request 10b013b8-f858-494c-832c-4412036150ab in memory

      at OrchestratorAgent.storeInMemory (src/agents/orchestrator.ts:188:15)

  console.log
    [OrchestratorAgent][10b013b8-f858-494c-832c-4412036150ab] Complete in 2445ms

      at OrchestratorAgent.handleQuery (src/agents/orchestrator.ts:98:15)

  console.log
    
    ‚ùå Error recovery - Non-existent facility: {
      message: 'No shipments were found from NonExistentFacility123 in the analysis conducted. No insights or anomal',
      error: undefined
    }

      at Object.<anonymous> (src/tests/integration/agents/system.integration.test.ts:403:15)

  console.log
    [OrchestratorAgent][a2ac9f7d-502a-497f-bcfa-6425d04df4d8] Processing query: Get facilities in Berlin

      at OrchestratorAgent.handleQuery (src/agents/orchestrator.ts:45:13)

  console.log
    [OrchestratorAgent][a2ac9f7d-502a-497f-bcfa-6425d04df4d8] Loaded context: {
      semantic: undefined,
      episodic: undefined,
      entities: [ 'location:Berlin' ]
    }

      at OrchestratorAgent.handleQuery (src/agents/orchestrator.ts:52:17)

  console.log
    [OrchestratorAgent][a2ac9f7d-502a-497f-bcfa-6425d04df4d8] Planning...

      at OrchestratorAgent.handleQuery (src/agents/orchestrator.ts:56:15)

  console.log
    [PlannerAgent] Planning for query: Get facilities in Berlin

      at PlannerAgent.plan (src/agents/planner.ts:60:13)

  console.log
    [LLMProvider] Using openai provider

      at LLMProvider.generate (src/shared/llm/provider.ts:42:17)

  console.log
    [PlannerAgent] Plan generated successfully

      at PlannerAgent.plan (src/agents/planner.ts:98:17)

  console.log
    [PlannerAgent] Planning for query: Get facilities in Berlin, then get their shipments, then check for contaminants

      at PlannerAgent.plan (src/agents/planner.ts:60:13)

  console.log
    [LLMProvider] Using openai provider

      at LLMProvider.generate (src/shared/llm/provider.ts:42:17)

  console.log
    [PlannerAgent] Plan generated successfully

      at PlannerAgent.plan (src/agents/planner.ts:98:17)

  console.log
    [OrchestratorAgent][a2ac9f7d-502a-497f-bcfa-6425d04df4d8] Plan generated: {
      steps: [
        {
          tool: 'facilities',
          params: [Object],
          depends_on: [],
          parallel: false
        }
      ],
      metadata: {
        query: 'Get facilities in Berlin',
        timestamp: '2022-01-15T15:30:00Z',
        estimated_duration_ms: 1500
      }
    }

      at OrchestratorAgent.handleQuery (src/agents/orchestrator.ts:58:15)

  console.log
    [OrchestratorAgent][a2ac9f7d-502a-497f-bcfa-6425d04df4d8] Executing plan...

      at OrchestratorAgent.handleQuery (src/agents/orchestrator.ts:61:15)

  console.log
    [ExecutorAgent] Executing plan with 1 steps

      at ExecutorAgent.execute (src/agents/executor.ts:35:13)

  console.log
    [ExecutorAgent] Executing 1 steps in parallel

      at ExecutorAgent.execute (src/agents/executor.ts:52:15)

  console.log
    [ExecutorAgent] Executing step 0: facilities

      at ExecutorAgent.executeStep (src/agents/executor.ts:177:13)
          at Array.map (<anonymous>)

  console.error
    [ExecutorAgent] Step 0 (facilities) failed: Tool not found: facilities

      202 |
      203 |     } catch (error: any) {
    > 204 |       console.error(`[ExecutorAgent] Step ${index} (${step.tool}) failed:`, error.message);
          |               ^
      205 |
      206 |       return {
      207 |         success: false,

      at ExecutorAgent.executeStep (src/agents/executor.ts:204:15)
      at src/agents/executor.ts:166:19
          at Array.map (<anonymous>)
      at ExecutorAgent.executeBatch (src/agents/executor.ts:161:34)
      at ExecutorAgent.execute (src/agents/executor.ts:55:39)
      at OrchestratorAgent.handleQuery (src/agents/orchestrator.ts:62:43)
      at Object.<anonymous> (src/tests/integration/agents/system.integration.test.ts:411:25)

  console.log
    [ExecutorAgent] Plan execution complete. 1 results

      at ExecutorAgent.execute (src/agents/executor.ts:79:13)

  console.log
    [OrchestratorAgent][a2ac9f7d-502a-497f-bcfa-6425d04df4d8] Execution complete. Results: 1

      at OrchestratorAgent.handleQuery (src/agents/orchestrator.ts:63:15)

  console.log
    [OrchestratorAgent][a2ac9f7d-502a-497f-bcfa-6425d04df4d8] Analyzing results...

      at OrchestratorAgent.handleQuery (src/agents/orchestrator.ts:66:15)

  console.log
    [AnalyzerAgent] Analyzing 1 tool results

      at AnalyzerAgent.analyze (src/agents/analyzer.ts:33:13)

  console.log
    [OrchestratorAgent][a2ac9f7d-502a-497f-bcfa-6425d04df4d8] Analysis complete

      at OrchestratorAgent.handleQuery (src/agents/orchestrator.ts:68:15)

  console.log
    [OrchestratorAgent][a2ac9f7d-502a-497f-bcfa-6425d04df4d8] Generating summary...

      at OrchestratorAgent.handleQuery (src/agents/orchestrator.ts:71:15)

  console.log
    [SummarizerAgent] Generating summary...

      at SummarizerAgent.summarize (src/agents/summarizer.ts:39:13)

  console.log
    [LLMProvider] Using openai provider

      at LLMProvider.generate (src/shared/llm/provider.ts:42:17)

  console.log
    [OrchestratorAgent] Stored request a2ac9f7d-502a-497f-bcfa-6425d04df4d8 in memory

      at OrchestratorAgent.storeInMemory (src/agents/orchestrator.ts:188:15)

  console.log
    [OrchestratorAgent][a2ac9f7d-502a-497f-bcfa-6425d04df4d8] Complete in 1638ms

      at OrchestratorAgent.handleQuery (src/agents/orchestrator.ts:98:15)

  console.log
    [OrchestratorAgent][2851c1b4-10d7-4a31-87bb-557204c61dc9] Processing query: Show me their shipments

      at OrchestratorAgent.handleQuery (src/agents/orchestrator.ts:45:13)

  console.log
    [OrchestratorAgent][2851c1b4-10d7-4a31-87bb-557204c61dc9] Loaded context: {
      semantic: undefined,
      episodic: undefined,
      entities: [ 'entity:shipment' ]
    }

      at OrchestratorAgent.handleQuery (src/agents/orchestrator.ts:52:17)

  console.log
    [OrchestratorAgent][2851c1b4-10d7-4a31-87bb-557204c61dc9] Planning...

      at OrchestratorAgent.handleQuery (src/agents/orchestrator.ts:56:15)

  console.log
    [PlannerAgent] Planning for query: Show me their shipments

      at PlannerAgent.plan (src/agents/planner.ts:60:13)

  console.log
    [LLMProvider] Using openai provider

      at LLMProvider.generate (src/shared/llm/provider.ts:42:17)

  console.log
    [PlannerAgent] Plan generated successfully

      at PlannerAgent.plan (src/agents/planner.ts:98:17)

  console.log
    [PlannerAgent] Planning for query: Get shipments

      at PlannerAgent.plan (src/agents/planner.ts:60:13)

  console.log
    [LLMProvider] Using openai provider

      at LLMProvider.generate (src/shared/llm/provider.ts:42:17)

  console.log
    [PlannerAgent] Plan generated successfully

      at PlannerAgent.plan (src/agents/planner.ts:98:17)

  console.log
    [OrchestratorAgent][2851c1b4-10d7-4a31-87bb-557204c61dc9] Plan generated: {
      steps: [
        { tool: 'shipments', params: {}, depends_on: [], parallel: false }
      ],
      metadata: {
        query: 'Show me their shipments',
        timestamp: '2022-01-15T13:30:00Z',
        estimated_duration_ms: 1500
      }
    }

      at OrchestratorAgent.handleQuery (src/agents/orchestrator.ts:58:15)

  console.log
    [OrchestratorAgent][2851c1b4-10d7-4a31-87bb-557204c61dc9] Executing plan...

      at OrchestratorAgent.handleQuery (src/agents/orchestrator.ts:61:15)

  console.log
    [ExecutorAgent] Executing plan with 1 steps

      at ExecutorAgent.execute (src/agents/executor.ts:35:13)

  console.log
    [ExecutorAgent] Executing 1 steps in parallel

      at ExecutorAgent.execute (src/agents/executor.ts:52:15)

  console.log
    [ExecutorAgent] Executing step 0: shipments

      at ExecutorAgent.executeStep (src/agents/executor.ts:177:13)
          at Array.map (<anonymous>)

  console.error
    [ExecutorAgent] Step 0 (shipments) failed: Tool not found: shipments

      202 |
      203 |     } catch (error: any) {
    > 204 |       console.error(`[ExecutorAgent] Step ${index} (${step.tool}) failed:`, error.message);
          |               ^
      205 |
      206 |       return {
      207 |         success: false,

      at ExecutorAgent.executeStep (src/agents/executor.ts:204:15)
      at src/agents/executor.ts:166:19
          at Array.map (<anonymous>)
      at ExecutorAgent.executeBatch (src/agents/executor.ts:161:34)
      at ExecutorAgent.execute (src/agents/executor.ts:55:39)
      at OrchestratorAgent.handleQuery (src/agents/orchestrator.ts:62:43)
      at Object.<anonymous> (src/tests/integration/agents/system.integration.test.ts:417:25)

  console.log
    [ExecutorAgent] Plan execution complete. 1 results

      at ExecutorAgent.execute (src/agents/executor.ts:79:13)

  console.log
    [OrchestratorAgent][2851c1b4-10d7-4a31-87bb-557204c61dc9] Execution complete. Results: 1

      at OrchestratorAgent.handleQuery (src/agents/orchestrator.ts:63:15)

  console.log
    [OrchestratorAgent][2851c1b4-10d7-4a31-87bb-557204c61dc9] Analyzing results...

      at OrchestratorAgent.handleQuery (src/agents/orchestrator.ts:66:15)

  console.log
    [AnalyzerAgent] Analyzing 1 tool results

      at AnalyzerAgent.analyze (src/agents/analyzer.ts:33:13)

  console.log
    [OrchestratorAgent][2851c1b4-10d7-4a31-87bb-557204c61dc9] Analysis complete

      at OrchestratorAgent.handleQuery (src/agents/orchestrator.ts:68:15)

  console.log
    [OrchestratorAgent][2851c1b4-10d7-4a31-87bb-557204c61dc9] Generating summary...

      at OrchestratorAgent.handleQuery (src/agents/orchestrator.ts:71:15)

  console.log
    [SummarizerAgent] Generating summary...

      at SummarizerAgent.summarize (src/agents/summarizer.ts:39:13)

  console.log
    [LLMProvider] Using openai provider

      at LLMProvider.generate (src/shared/llm/provider.ts:42:17)

  console.log
    [PlannerAgent] Plan generated successfully

      at PlannerAgent.plan (src/agents/planner.ts:98:17)

  console.log
    [PlannerAgent] Planning for query: Which facilities are near capacity?

      at PlannerAgent.plan (src/agents/planner.ts:60:13)

  console.log
    [LLMProvider] Using openai provider

      at LLMProvider.generate (src/shared/llm/provider.ts:42:17)

  console.log
    [OrchestratorAgent] Stored request 2851c1b4-10d7-4a31-87bb-557204c61dc9 in memory

      at OrchestratorAgent.storeInMemory (src/agents/orchestrator.ts:188:15)

  console.log
    [OrchestratorAgent][2851c1b4-10d7-4a31-87bb-557204c61dc9] Complete in 1365ms

      at OrchestratorAgent.handleQuery (src/agents/orchestrator.ts:98:15)

  console.log
    
    üí¨ Memory-based follow-up: {
      query1: 'There were no successful results found for facilities in Berlin.',
      query2: 'There are no shipments to show as there were no successful results found in the analysis.',
      bothSucceeded: true
    }

      at Object.<anonymous> (src/tests/integration/agents/system.integration.test.ts:422:15)

PASS src/tests/integration/agents/system.integration.test.ts (45.819 s)
  System Integration - Complete Agent Pipeline
    End-to-End Query Scenarios
      ‚úì should handle: "Get me last week's shipments that got contaminants" (1850 ms)
      ‚úì should handle: "Analyse today's contaminants in Hannover" (2771 ms)
      ‚úì should handle: "From inspections accepted this week, did we detect any risky contaminants?" (1566 ms)
    Agent Pipeline Verification
      ‚úì should execute complete pipeline: Plan ‚Üí Execute ‚Üí Analyze ‚Üí Summarize (2409 ms)
      ‚úì should track execution time and request ID (2173 ms)
    Memory Integration
      ‚úì should store query results in memory (2586 ms)
      ‚úì should handle multiple queries in sequence (3144 ms)
    Error Handling
      ‚úì should handle queries that might fail gracefully (2868 ms)
    Blueprint Example Queries
      ‚úì Blueprint 1: Show me all shipments from last week with contaminants (1891 ms)
      ‚úì Blueprint 2: Which facilities received the most rejected shipments? (2817 ms)
      ‚úì Blueprint 3: What are the most common contaminants detected this month? (2026 ms)
      ‚úì Blueprint 4: Show me high-risk contaminants detected in Berlin facilities (2648 ms)
      ‚úì Blueprint 5: What is the acceptance rate for each facility? (1469 ms)
      ‚úì Blueprint 6: Show me shipments with HCl levels above medium (1927 ms)
      ‚úì Blueprint 7: Which carriers have the highest contamination rates? (1755 ms)
      ‚úì Blueprint 8: Show me inspection failures by waste type (1647 ms)
      ‚úì Blueprint 9: What facilities are near capacity? (1393 ms)
      ‚úì Blueprint 10: Show me contaminant trends over the past 30 days (1789 ms)
    Error Recovery Scenarios
      ‚úì should handle non-existent facility queries (2446 ms)
      ‚úì should handle follow-up questions based on previous query context (3004 ms)

  console.log
    [PlannerAgent] Plan generated successfully

      at PlannerAgent.plan (src/agents/planner.ts:98:17)

  console.log
    [OrchestratorAgent][46620fc5-7881-4ea8-a029-d4504bf5abb0] Plan generated: {
      steps: [
        {
          tool: 'facilities',
          params: [Object],
          depends_on: [],
          parallel: false
        },
        {
          tool: 'shipments',
          params: [Object],
          depends_on: [Array],
          parallel: false
        },
        {
          tool: 'contaminants-detected',
          params: [Object],
          depends_on: [Array],
          parallel: false
        }
      ],
      metadata: {
        query: 'Get all shipments from Berlin facilities, analyze contamination patterns, and summarize the findings',
        timestamp: '2022-01-01T12:00:00Z',
        estimated_duration_ms: 3000
      }
    }

      at OrchestratorAgent.handleQuery (src/agents/orchestrator.ts:58:15)

  console.log
    [OrchestratorAgent][46620fc5-7881-4ea8-a029-d4504bf5abb0] Executing plan...

      at OrchestratorAgent.handleQuery (src/agents/orchestrator.ts:61:15)

  console.log
    [ExecutorAgent] Executing plan with 3 steps

      at ExecutorAgent.execute (src/agents/executor.ts:35:13)

  console.log
    [ExecutorAgent] Executing 1 steps in parallel

      at ExecutorAgent.execute (src/agents/executor.ts:52:15)

  console.log
    [ExecutorAgent] Executing step 0: facilities

      at ExecutorAgent.executeStep (src/agents/executor.ts:177:13)
          at Array.map (<anonymous>)

  console.error
    [ExecutorAgent] Step 0 (facilities) failed: Tool not found: facilities

      202 |
      203 |     } catch (error: any) {
    > 204 |       console.error(`[ExecutorAgent] Step ${index} (${step.tool}) failed:`, error.message);
          |               ^
      205 |
      206 |       return {
      207 |         success: false,

      at ExecutorAgent.executeStep (src/agents/executor.ts:204:15)
      at src/agents/executor.ts:166:19
          at Array.map (<anonymous>)
      at ExecutorAgent.executeBatch (src/agents/executor.ts:161:34)
      at ExecutorAgent.execute (src/agents/executor.ts:55:39)
      at OrchestratorAgent.handleQuery (src/agents/orchestrator.ts:62:43)
      at Object.<anonymous> (src/tests/integration/agents/orchestrator.integration.test.ts:344:24)

  console.log
    [ExecutorAgent] Executing 1 steps in parallel

      at ExecutorAgent.execute (src/agents/executor.ts:52:15)

  console.log
    [ExecutorAgent] Executing step 1: shipments

      at ExecutorAgent.executeStep (src/agents/executor.ts:177:13)
          at Array.map (<anonymous>)

  console.error
    [ExecutorAgent] Step 1 (shipments) failed: Tool not found: shipments

      202 |
      203 |     } catch (error: any) {
    > 204 |       console.error(`[ExecutorAgent] Step ${index} (${step.tool}) failed:`, error.message);
          |               ^
      205 |
      206 |       return {
      207 |         success: false,

      at ExecutorAgent.executeStep (src/agents/executor.ts:204:15)
      at src/agents/executor.ts:166:19
          at Array.map (<anonymous>)
      at ExecutorAgent.executeBatch (src/agents/executor.ts:161:34)
      at ExecutorAgent.execute (src/agents/executor.ts:55:39)
      at OrchestratorAgent.handleQuery (src/agents/orchestrator.ts:62:23)
      at Object.<anonymous> (src/tests/integration/agents/orchestrator.integration.test.ts:344:24)

  console.log
    [ExecutorAgent] Executing 1 steps in parallel

      at ExecutorAgent.execute (src/agents/executor.ts:52:15)

  console.log
    [ExecutorAgent] Executing step 2: contaminants-detected

      at ExecutorAgent.executeStep (src/agents/executor.ts:177:13)
          at Array.map (<anonymous>)

  console.error
    [ExecutorAgent] Step 2 (contaminants-detected) failed: Tool not found: contaminants-detected

      202 |
      203 |     } catch (error: any) {
    > 204 |       console.error(`[ExecutorAgent] Step ${index} (${step.tool}) failed:`, error.message);
          |               ^
      205 |
      206 |       return {
      207 |         success: false,

      at ExecutorAgent.executeStep (src/agents/executor.ts:204:15)
      at src/agents/executor.ts:166:19
          at Array.map (<anonymous>)
      at ExecutorAgent.executeBatch (src/agents/executor.ts:161:34)
      at ExecutorAgent.execute (src/agents/executor.ts:55:39)
      at OrchestratorAgent.handleQuery (src/agents/orchestrator.ts:62:23)
      at Object.<anonymous> (src/tests/integration/agents/orchestrator.integration.test.ts:344:24)

  console.log
    [ExecutorAgent] Plan execution complete. 3 results

      at ExecutorAgent.execute (src/agents/executor.ts:79:13)

  console.log
    [OrchestratorAgent][46620fc5-7881-4ea8-a029-d4504bf5abb0] Execution complete. Results: 3

      at OrchestratorAgent.handleQuery (src/agents/orchestrator.ts:63:15)

  console.log
    [OrchestratorAgent][46620fc5-7881-4ea8-a029-d4504bf5abb0] Analyzing results...

      at OrchestratorAgent.handleQuery (src/agents/orchestrator.ts:66:15)

  console.log
    [AnalyzerAgent] Analyzing 3 tool results

      at AnalyzerAgent.analyze (src/agents/analyzer.ts:33:13)

  console.log
    [OrchestratorAgent][46620fc5-7881-4ea8-a029-d4504bf5abb0] Analysis complete

      at OrchestratorAgent.handleQuery (src/agents/orchestrator.ts:68:15)

  console.log
    [OrchestratorAgent][46620fc5-7881-4ea8-a029-d4504bf5abb0] Generating summary...

      at OrchestratorAgent.handleQuery (src/agents/orchestrator.ts:71:15)

  console.log
    [SummarizerAgent] Generating summary...

      at SummarizerAgent.summarize (src/agents/summarizer.ts:39:13)

  console.log
    [LLMProvider] Using openai provider

      at LLMProvider.generate (src/shared/llm/provider.ts:42:17)

  console.log
    [OrchestratorAgent] Stored request 46620fc5-7881-4ea8-a029-d4504bf5abb0 in memory

      at OrchestratorAgent.storeInMemory (src/agents/orchestrator.ts:188:15)

  console.log
    [OrchestratorAgent][46620fc5-7881-4ea8-a029-d4504bf5abb0] Complete in 3902ms

      at OrchestratorAgent.handleQuery (src/agents/orchestrator.ts:98:15)

  console.log
    
    üîÑ Multi-agent pipeline: {
      tools: [ 'facilities', 'shipments', 'contaminants-detected' ],
      insights: 0,
      messageLength: 157
    }

      at Object.<anonymous> (src/tests/integration/agents/orchestrator.integration.test.ts:356:15)

  console.log
    [OrchestratorAgent][43aa9b3b-ae4c-410b-a574-66b410138717] Processing query: Get 5 recent shipments with contaminants

      at OrchestratorAgent.handleQuery (src/agents/orchestrator.ts:45:13)

  console.log
    [OrchestratorAgent][43aa9b3b-ae4c-410b-a574-66b410138717] Loaded context: {
      semantic: undefined,
      episodic: undefined,
      entities: [ 'entity:shipment' ]
    }

      at OrchestratorAgent.handleQuery (src/agents/orchestrator.ts:52:17)

  console.log
    [OrchestratorAgent][43aa9b3b-ae4c-410b-a574-66b410138717] Planning...

      at OrchestratorAgent.handleQuery (src/agents/orchestrator.ts:56:15)

  console.log
    [PlannerAgent] Planning for query: Get 5 recent shipments with contaminants

      at PlannerAgent.plan (src/agents/planner.ts:60:13)

  console.log
    [LLMProvider] Using openai provider

      at LLMProvider.generate (src/shared/llm/provider.ts:42:17)

  console.log
    [PlannerAgent] Plan generated successfully

      at PlannerAgent.plan (src/agents/planner.ts:98:17)

FAIL src/tests/integration/agents/planner.integration.test.ts (46.836 s)
  PlannerAgent Integration
    Simple Queries
      ‚úì should generate plan for shipment query with real LLM (1847 ms)
      ‚úì should generate plan for facility query (870 ms)
      ‚úì should generate plan for contaminant query (1684 ms)
    Complex Queries with Dependencies
      ‚úì should generate multi-step plan for nested query (1572 ms)
      ‚úì should generate plan for location-based nested query (1391 ms)
      ‚úì should handle inspection-based queries (1338 ms)
    Temporal References
      ‚úì should correctly parse "last week" reference (1064 ms)
      ‚úì should correctly parse "this week" reference (3171 ms)
      ‚úì should correctly parse "today" reference (2609 ms)
    Plan Metadata
      ‚úì should include query in metadata (1236 ms)
      ‚úì should include timestamp in metadata (3689 ms)
    Context Handling
      ‚úì should incorporate context into planning (1355 ms)
    Error Handling
      ‚úì should handle simple queries without complexity (1407 ms)
      ‚úì should handle queries with filters (2942 ms)
    Plan Validation
      ‚úì should produce executable plans with valid tool names (1006 ms)
      ‚úì should produce plans with valid dependencies (2404 ms)
    Complex Multi-Facility Queries
      ‚úì should handle queries across multiple facilities with temporal context (4104 ms)
      ‚úì should generate plan requiring data aggregation across multiple tools (1736 ms)
      ‚úì should handle ambiguous queries with reasonable assumptions (2170 ms)
      ‚úï should extract parameters from natural language (dates, locations, IDs) (2452 ms)
      ‚úì should check tool availability before planning (1687 ms)
      ‚úì should create dependency chain for sequential queries (1744 ms)
      ‚úì should generate metadata with timestamps and estimated duration (946 ms)
      ‚úì should handle capacity-related facility queries (1229 ms)

  ‚óè PlannerAgent Integration ‚Ä∫ Complex Multi-Facility Queries ‚Ä∫ should extract parameters from natural language (dates, locations, IDs)

    expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

      359 |       // Should have location filter
      360 |       const hasLocation = JSON.stringify(shipmentStep?.params).includes('Hannover');
    > 361 |       expect(hasLocation).toBe(true);
          |                           ^
      362 |       
      363 |       expect(() => PlanSchema.parse(plan)).not.toThrow();
      364 |     }, 30000);

      at Object.<anonymous> (src/tests/integration/agents/planner.integration.test.ts:361:27)

  console.log
    [PlannerAgent] Plan generated successfully

      at PlannerAgent.plan (src/agents/planner.ts:98:17)

  console.log
    [OrchestratorAgent][43aa9b3b-ae4c-410b-a574-66b410138717] Plan generated: {
      steps: [
        {
          tool: 'shipments',
          params: [Object],
          depends_on: [Array],
          parallel: false
        },
        {
          tool: 'shipments',
          params: [Object],
          depends_on: [Array],
          parallel: false
        }
      ],
      metadata: {
        query: 'Get 5 recent shipments with contaminants',
        timestamp: '2022-01-01T12:00:00Z',
        estimated_duration_ms: 2000
      }
    }

      at OrchestratorAgent.handleQuery (src/agents/orchestrator.ts:58:15)

  console.log
    [OrchestratorAgent][43aa9b3b-ae4c-410b-a574-66b410138717] Executing plan...

      at OrchestratorAgent.handleQuery (src/agents/orchestrator.ts:61:15)

  console.log
    [ExecutorAgent] Executing plan with 2 steps

      at ExecutorAgent.execute (src/agents/executor.ts:35:13)

  console.error
    [OrchestratorAgent][43aa9b3b-ae4c-410b-a574-66b410138717] Error: Error: Circular dependency detected in plan
        at ExecutorAgent.detectCircularDependencies (/Users/yab/Projects/clear-ai-v2/src/agents/executor.ts:124:17)
        at ExecutorAgent.buildExecutionGraph (/Users/yab/Projects/clear-ai-v2/src/agents/executor.ts:95:10)
        at ExecutorAgent.execute (/Users/yab/Projects/clear-ai-v2/src/agents/executor.ts:41:24)
        at OrchestratorAgent.handleQuery (/Users/yab/Projects/clear-ai-v2/src/agents/orchestrator.ts:62:43)
        at processTicksAndRejections (node:internal/process/task_queues:105:5)
        at Object.<anonymous> (/Users/yab/Projects/clear-ai-v2/src/tests/integration/agents/orchestrator.integration.test.ts:364:24)

      101 |
      102 |     } catch (error: any) {
    > 103 |       console.error(`[OrchestratorAgent][${requestId}] Error:`, error);
          |               ^
      104 |
      105 |       // Store error in memory for learning
      106 |       if (this.config.enableMemory) {

      at OrchestratorAgent.handleQuery (src/agents/orchestrator.ts:103:15)
      at Object.<anonymous> (src/tests/integration/agents/orchestrator.integration.test.ts:364:24)

  console.log
    
    ‚úì Data consistency check: { toolsUsed: 0, entities: 0, hasMessage: true }

      at Object.<anonymous> (src/tests/integration/agents/orchestrator.integration.test.ts:377:15)

PASS src/tests/integration/agents/orchestrator.integration.test.ts (47.938 s)
  OrchestratorAgent Integration
    Complete Pipeline Execution
      ‚úì should execute full query flow (1864 ms)
      ‚úì should handle complex nested queries (3481 ms)
    Memory Integration
      ‚úì should store query in memory (3964 ms)
      ‚úì should load context from memory (1506 ms)
    Error Recovery
      ‚úì should handle errors gracefully (2318 ms)
    Advanced Memory Integration
      ‚úì should load memory context for follow-up queries (1736 ms)
      ‚úì should propagate errors through full pipeline (2777 ms)
      ‚úì should work with different memory configurations (1621 ms)
    Request Tracking
      ‚úì should generate unique request IDs (11005 ms)
      ‚úì should collect execution metrics (1578 ms)
    Concurrent Query Handling
      ‚úì should handle 3 queries in parallel (1890 ms)
    Configuration Variations
      ‚úì should work with different planner configurations (3719 ms)
      ‚úì should work with different analyzer modes (1777 ms)
      ‚úì should work with different summarizer formats (1627 ms)
    Complex Scenarios
      ‚úì should handle queries requiring multiple agents in sequence (3902 ms)
      ‚úì should maintain data consistency through pipeline (1542 ms)

Test Suites: 7 failed, 9 passed, 16 total
Tests:       12 failed, 135 passed, 147 total
Snapshots:   0 total
Time:        49.209 s
Ran all test suites matching integration.
