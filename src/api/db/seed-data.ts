// Seed data - can be imported by seed script and reset endpoint
import { ShipmentModel } from "../models/Shipment.js";
import { FacilityModel } from "../models/Facility.js";
import { ContaminantModel } from "../models/Contaminant.js";
import { InspectionModel } from "../models/Inspection.js";

export const facilities = [
  {
    id: "F1",
    name: "Hannover Sorting Center",
    location: "Hannover",
    type: "sorting",
    capacity_tons: 500,
    current_load_tons: 320,
    coordinates: { lat: 52.3759, lon: 9.732 },
    accepted_waste_types: ["plastic", "metal", "paper", "glass"],
    rejected_waste_types: ["hazardous", "medical"],
    contact_email: "info@hannover-sort.de",
    contact_phone: "+49-511-123456",
    operating_hours: "Mon-Fri 7:00-18:00, Sat 8:00-14:00",
  },
  {
    id: "F2",
    name: "Berlin Processing Plant",
    location: "Berlin",
    type: "processing",
    capacity_tons: 1000,
    current_load_tons: 750,
    coordinates: { lat: 52.52, lon: 13.405 },
    accepted_waste_types: ["plastic", "metal", "electronic", "organic"],
    rejected_waste_types: ["radioactive", "explosive"],
    contact_email: "contact@berlin-process.de",
    contact_phone: "+49-30-789012",
    operating_hours: "24/7",
  },
  {
    id: "F3",
    name: "Munich Disposal Center",
    location: "Munich",
    type: "disposal",
    capacity_tons: 800,
    current_load_tons: 450,
    coordinates: { lat: 48.1351, lon: 11.582 },
    accepted_waste_types: ["general", "construction", "industrial"],
    rejected_waste_types: ["chemical", "biological"],
    contact_email: "disposal@munich-waste.de",
    contact_phone: "+49-89-345678",
    operating_hours: "Mon-Sat 6:00-20:00",
  },
  {
    id: "F4",
    name: "Frankfurt Sorting Hub",
    location: "Frankfurt",
    type: "sorting",
    capacity_tons: 600,
    current_load_tons: 380,
    coordinates: { lat: 50.1109, lon: 8.6821 },
  },
  {
    id: "F5",
    name: "Hamburg Processing Center",
    location: "Hamburg",
    type: "processing",
    capacity_tons: 900,
    current_load_tons: 650,
    coordinates: { lat: 53.5511, lon: 9.9937 },
  },
  {
    id: "F6",
    name: "Stuttgart Disposal Facility",
    location: "Stuttgart",
    type: "disposal",
    capacity_tons: 700,
    current_load_tons: 420,
    coordinates: { lat: 48.7758, lon: 9.1829 },
  },
  {
    id: "F7",
    name: "Cologne Sorting Station",
    location: "Cologne",
    type: "sorting",
    capacity_tons: 550,
    current_load_tons: 310,
    coordinates: { lat: 50.9375, lon: 6.9603 },
  },
  {
    id: "F8",
    name: "Dresden Processing Plant",
    location: "Dresden",
    type: "processing",
    capacity_tons: 750,
    current_load_tons: 490,
    coordinates: { lat: 51.0504, lon: 13.7373 },
  },
  {
    id: "F9",
    name: "Leipzig Disposal Center",
    location: "Leipzig",
    type: "disposal",
    capacity_tons: 650,
    current_load_tons: 380,
    coordinates: { lat: 51.3397, lon: 12.3731 },
  },
  {
    id: "F10",
    name: "Dortmund Sorting Facility",
    location: "Dortmund",
    type: "sorting",
    capacity_tons: 580,
    current_load_tons: 340,
    coordinates: { lat: 51.5136, lon: 7.4653 },
  },
];

export const shipments = [
  {
    id: "S1",
    facility_id: "F1",
    date: "2025-10-05",
    status: "delivered",
    weight_kg: 1500,
    has_contaminants: false,
    origin: "Hamburg",
    destination: "Hannover",
    waste_type: "plastic",
    waste_code: "PL-150",
    carrier: "EcoTrans GmbH",
    composition_notes: "Mixed plastic waste from household collection",
  },
  {
    id: "S2",
    facility_id: "F2",
    date: "2025-10-06",
    status: "rejected",
    weight_kg: 800,
    has_contaminants: true,
    origin: "Berlin",
    destination: "Munich",
    waste_type: "industrial",
    waste_code: "IND-080",
    carrier: "WasteLogistics AG",
    composition_notes: "Industrial waste with heavy metal contamination detected",
  },
  {
    id: "S3",
    facility_id: "F1",
    date: "2025-10-07",
    status: "in_transit",
    weight_kg: 2000,
    has_contaminants: false,
    origin: "Frankfurt",
    destination: "Hannover",
    waste_type: "paper",
    waste_code: "PAP-200",
    carrier: "GreenTransport SE",
    composition_notes: "Commercial paper and cardboard waste",
  },
  {
    id: "S4",
    facility_id: "F3",
    date: "2025-10-04",
    status: "delivered",
    weight_kg: 1200,
    has_contaminants: true,
    origin: "Stuttgart",
    destination: "Munich",
  },
  {
    id: "S5",
    facility_id: "F4",
    date: "2025-10-08",
    status: "pending",
    weight_kg: 1800,
    has_contaminants: false,
    origin: "Cologne",
    destination: "Frankfurt",
  },
  {
    id: "S6",
    facility_id: "F5",
    date: "2025-10-09",
    status: "in_transit",
    weight_kg: 2200,
    has_contaminants: false,
    origin: "Bremen",
    destination: "Hamburg",
  },
  {
    id: "S7",
    facility_id: "F6",
    date: "2025-10-10",
    status: "delivered",
    weight_kg: 950,
    has_contaminants: true,
    origin: "Mannheim",
    destination: "Stuttgart",
  },
  {
    id: "S8",
    facility_id: "F7",
    date: "2025-10-03",
    status: "delivered",
    weight_kg: 1650,
    has_contaminants: false,
    origin: "Bonn",
    destination: "Cologne",
  },
  {
    id: "S9",
    facility_id: "F8",
    date: "2025-10-11",
    status: "in_transit",
    weight_kg: 1350,
    has_contaminants: false,
    origin: "Chemnitz",
    destination: "Dresden",
  },
  {
    id: "S10",
    facility_id: "F9",
    date: "2025-10-02",
    status: "delivered",
    weight_kg: 1100,
    has_contaminants: false,
    origin: "Halle",
    destination: "Leipzig",
  },
  {
    id: "S11",
    facility_id: "F10",
    date: "2025-10-01",
    status: "rejected",
    weight_kg: 750,
    has_contaminants: true,
    origin: "Essen",
    destination: "Dortmund",
  },
  {
    id: "S12",
    facility_id: "F2",
    date: "2025-09-30",
    status: "delivered",
    weight_kg: 1900,
    has_contaminants: false,
    origin: "Potsdam",
    destination: "Berlin",
  },
];

export const contaminants = [
  {
    id: "C1",
    shipment_id: "S2",
    facility_id: "F2",
    type: "Lead",
    concentration_ppm: 150,
    risk_level: "high",
    detected_at: "2025-10-06T10:30:00Z",
    notes: "Exceeds safety threshold",
    analysis_notes: "Detected via XRF analysis, consistent with industrial paint waste",
    waste_item_detected: "Lead-based paint chips",
    explosive_level: "low",
    so2_level: "low",
    hcl_level: "medium",
    estimated_size: 25.5,
  },
  {
    id: "C2",
    shipment_id: "S4",
    facility_id: "F3",
    type: "Mercury",
    concentration_ppm: 75,
    risk_level: "medium",
    detected_at: "2025-10-04T14:20:00Z",
    notes: "Within acceptable limits but requires monitoring",
    analysis_notes: "Detected in fluorescent lamp waste",
    waste_item_detected: "Broken fluorescent tubes",
    explosive_level: "low",
    so2_level: "low",
    hcl_level: "low",
    estimated_size: 12.3,
  },
  {
    id: "C3",
    shipment_id: "S2",
    facility_id: "F2",
    type: "Plastic",
    concentration_ppm: 200,
    risk_level: "low",
    detected_at: "2025-10-06T10:35:00Z",
    notes: "Standard contamination",
    analysis_notes: "Non-recyclable plastic mixed with recyclables",
    waste_item_detected: "PVC and composite plastics",
    explosive_level: "low",
    so2_level: "medium",
    hcl_level: "high",
    estimated_size: 45.8,
  },
  {
    id: "C4",
    shipment_id: "S7",
    facility_id: "F6",
    type: "Arsenic",
    concentration_ppm: 120,
    risk_level: "critical",
    detected_at: "2025-10-10T09:15:00Z",
    notes: "Critical contamination - immediate disposal required",
    analysis_notes: "Arsenic detected in treated wood waste from construction site",
    waste_item_detected: "CCA-treated lumber",
    explosive_level: "low",
    so2_level: "low",
    hcl_level: "low",
    estimated_size: 78.2,
  },
  {
    id: "C5",
    shipment_id: "S11",
    facility_id: "F10",
    type: "Cadmium",
    concentration_ppm: 95,
    risk_level: "high",
    detected_at: "2025-10-01T11:45:00Z",
    notes: "High toxicity detected",
  },
  {
    id: "C6",
    shipment_id: "S7",
    facility_id: "F6",
    type: "Lead",
    concentration_ppm: 88,
    risk_level: "medium",
    detected_at: "2025-10-10T09:20:00Z",
    notes: "Secondary contamination source",
  },
  {
    id: "C7",
    shipment_id: "S11",
    facility_id: "F10",
    type: "Mercury",
    concentration_ppm: 102,
    risk_level: "high",
    detected_at: "2025-10-01T11:50:00Z",
    notes: "Multiple contamination sources detected",
  },
  {
    id: "C8",
    shipment_id: "S4",
    facility_id: "F3",
    type: "Chromium",
    concentration_ppm: 45,
    risk_level: "low",
    detected_at: "2025-10-04T14:25:00Z",
    notes: "Trace amounts detected",
  },
];

export const inspections = [
  {
    id: "I1",
    shipment_id: "S1",
    facility_id: "F1",
    date: "2025-10-05",
    status: "accepted",
    inspector: "John Doe",
    notes: "Clean shipment, no issues detected",
    inspection_type: "arrival",
    duration_minutes: 45,
    passed: true,
    follow_up_required: false,
    photos: ["https://storage.example.com/inspections/I1-1.jpg"],
  },
  {
    id: "I2",
    shipment_id: "S2",
    facility_id: "F2",
    date: "2025-10-06",
    status: "rejected",
    inspector: "Jane Smith",
    notes: "High lead concentration detected",
    contaminants_detected: ["Lead", "Plastic"],
    risk_assessment: "High risk - immediate action required",
    inspection_type: "processing",
    duration_minutes: 120,
    passed: false,
    follow_up_required: true,
    photos: [
      "https://storage.example.com/inspections/I2-1.jpg",
      "https://storage.example.com/inspections/I2-2.jpg",
      "https://storage.example.com/inspections/I2-3.jpg",
    ],
  },
  {
    id: "I3",
    shipment_id: "S3",
    facility_id: "F1",
    date: "2025-10-07",
    status: "pending",
    inspector: "Mike Johnson",
    notes: "Inspection in progress",
    inspection_type: "arrival",
    duration_minutes: 30,
    passed: undefined,
    follow_up_required: false,
    photos: [],
  },
  {
    id: "I4",
    shipment_id: "S4",
    facility_id: "F3",
    date: "2025-10-04",
    status: "accepted",
    inspector: "Sarah Williams",
    notes: "Mercury levels within acceptable range",
    contaminants_detected: ["Mercury", "Chromium"],
    risk_assessment: "Low risk - continue monitoring",
  },
  {
    id: "I5",
    shipment_id: "S5",
    facility_id: "F4",
    date: "2025-10-08",
    status: "pending",
    inspector: "David Brown",
    notes: "Awaiting lab results",
  },
  {
    id: "I6",
    shipment_id: "S6",
    facility_id: "F5",
    date: "2025-10-09",
    status: "accepted",
    inspector: "Emily Davis",
    notes: "Standard waste, approved for processing",
  },
  {
    id: "I7",
    shipment_id: "S7",
    facility_id: "F6",
    date: "2025-10-10",
    status: "rejected",
    inspector: "Robert Miller",
    notes: "Critical arsenic contamination detected",
    contaminants_detected: ["Arsenic", "Lead"],
    risk_assessment: "Critical risk - requires specialized disposal",
  },
  {
    id: "I8",
    shipment_id: "S8",
    facility_id: "F7",
    date: "2025-10-03",
    status: "accepted",
    inspector: "Lisa Anderson",
    notes: "Clean municipal waste",
  },
  {
    id: "I9",
    shipment_id: "S9",
    facility_id: "F8",
    date: "2025-10-11",
    status: "pending",
    inspector: "Thomas Wilson",
    notes: "Processing inspection",
  },
  {
    id: "I10",
    shipment_id: "S10",
    facility_id: "F9",
    date: "2025-10-02",
    status: "accepted",
    inspector: "Jennifer Taylor",
    notes: "Approved for disposal",
  },
  {
    id: "I11",
    shipment_id: "S11",
    facility_id: "F10",
    date: "2025-10-01",
    status: "rejected",
    inspector: "Michael Moore",
    notes: "Multiple heavy metal contaminations",
    contaminants_detected: ["Cadmium", "Mercury"],
    risk_assessment: "High risk - requires decontamination",
  },
  {
    id: "I12",
    shipment_id: "S12",
    facility_id: "F2",
    date: "2025-09-30",
    status: "accepted",
    inspector: "Patricia Jackson",
    notes: "Standard processing approved",
  },
];

/**
 * Clear all collections in the database
 */
export async function clearCollections() {
  await ShipmentModel.deleteMany({});
  await FacilityModel.deleteMany({});
  await ContaminantModel.deleteMany({});
  await InspectionModel.deleteMany({});
}

/**
 * Seed the database with test data
 * @returns Summary of seeded data
 */
export async function seedCollections() {
  // Clear existing data first
  await clearCollections();

  // Insert facilities first (referenced by other collections)
  await FacilityModel.insertMany(facilities);
  await ShipmentModel.insertMany(shipments);
  await ContaminantModel.insertMany(contaminants);
  await InspectionModel.insertMany(inspections);

  return {
    facilities: facilities.length,
    shipments: shipments.length,
    contaminants: contaminants.length,
    inspections: inspections.length,
  };
}

