ts-jest[ts-jest-transformer] (WARN) Define `ts-jest` config under `globals` is deprecated. Please do
transform: {
    <transform_regex>: ['ts-jest', { /* ts-jest config goes here in Jest */ }],
},
See more at https://kulshekhar.github.io/ts-jest/docs/getting-started/presets#advanced
ts-jest[ts-jest-transformer] (WARN) Define `ts-jest` config under `globals` is deprecated. Please do
transform: {
    <transform_regex>: ['ts-jest', { /* ts-jest config goes here in Jest */ }],
},
See more at https://kulshekhar.github.io/ts-jest/docs/getting-started/presets#advanced
ts-jest[ts-jest-transformer] (WARN) Define `ts-jest` config under `globals` is deprecated. Please do
transform: {
    <transform_regex>: ['ts-jest', { /* ts-jest config goes here in Jest */ }],
},
See more at https://kulshekhar.github.io/ts-jest/docs/getting-started/presets#advanced
ts-jest[ts-jest-transformer] (WARN) Define `ts-jest` config under `globals` is deprecated. Please do
transform: {
    <transform_regex>: ['ts-jest', { /* ts-jest config goes here in Jest */ }],
},
See more at https://kulshekhar.github.io/ts-jest/docs/getting-started/presets#advanced
ts-jest[ts-jest-transformer] (WARN) Define `ts-jest` config under `globals` is deprecated. Please do
transform: {
    <transform_regex>: ['ts-jest', { /* ts-jest config goes here in Jest */ }],
},
See more at https://kulshekhar.github.io/ts-jest/docs/getting-started/presets#advanced
ts-jest[ts-jest-transformer] (WARN) Define `ts-jest` config under `globals` is deprecated. Please do
transform: {
    <transform_regex>: ['ts-jest', { /* ts-jest config goes here in Jest */ }],
},
See more at https://kulshekhar.github.io/ts-jest/docs/getting-started/presets#advanced
ts-jest[ts-jest-transformer] (WARN) Define `ts-jest` config under `globals` is deprecated. Please do
transform: {
    <transform_regex>: ['ts-jest', { /* ts-jest config goes here in Jest */ }],
},
See more at https://kulshekhar.github.io/ts-jest/docs/getting-started/presets#advanced
ts-jest[ts-jest-transformer] (WARN) Define `ts-jest` config under `globals` is deprecated. Please do
transform: {
    <transform_regex>: ['ts-jest', { /* ts-jest config goes here in Jest */ }],
},
See more at https://kulshekhar.github.io/ts-jest/docs/getting-started/presets#advanced
ts-jest[ts-jest-transformer] (WARN) Define `ts-jest` config under `globals` is deprecated. Please do
transform: {
    <transform_regex>: ['ts-jest', { /* ts-jest config goes here in Jest */ }],
},
See more at https://kulshekhar.github.io/ts-jest/docs/getting-started/presets#advanced
ts-jest[ts-jest-transformer] (WARN) Define `ts-jest` config under `globals` is deprecated. Please do
transform: {
    <transform_regex>: ['ts-jest', { /* ts-jest config goes here in Jest */ }],
},
See more at https://kulshekhar.github.io/ts-jest/docs/getting-started/presets#advanced
ts-jest[ts-jest-transformer] (WARN) Define `ts-jest` config under `globals` is deprecated. Please do
transform: {
    <transform_regex>: ['ts-jest', { /* ts-jest config goes here in Jest */ }],
},
See more at https://kulshekhar.github.io/ts-jest/docs/getting-started/presets#advanced
  console.log
    [ExecutorAgent] Executing plan with 1 steps

      at ExecutorAgent.execute (src/agents/executor.ts:35:13)

  console.log
    [ExecutorAgent] Executing 1 steps in parallel

      at ExecutorAgent.execute (src/agents/executor.ts:52:15)

  console.log
    [ExecutorAgent] Executing step 0: shipments

      at ExecutorAgent.executeStep (src/agents/executor.ts:177:13)
          at Array.map (<anonymous>)

  console.log
    [ExecutorAgent] Resolved params for shipments: { limit: 10 }

      at ExecutorAgent.executeStep (src/agents/executor.ts:193:15)
          at Array.map (<anonymous>)

  console.log
    [ExecutorAgent] Plan execution complete. 1 results

      at ExecutorAgent.execute (src/agents/executor.ts:79:13)

  console.log
    [ExecutorAgent] Executing plan with 2 steps

      at ExecutorAgent.execute (src/agents/executor.ts:35:13)

  console.log
    [ExecutorAgent] Executing 1 steps in parallel

      at ExecutorAgent.execute (src/agents/executor.ts:52:15)

  console.log
    [ExecutorAgent] Executing step 0: shipments

      at ExecutorAgent.executeStep (src/agents/executor.ts:177:13)
          at Array.map (<anonymous>)

  console.log
    [ExecutorAgent] Resolved params for shipments: { has_contaminants: true }

      at ExecutorAgent.executeStep (src/agents/executor.ts:193:15)
          at Array.map (<anonymous>)

  console.log
    [ExecutorAgent] Executing 1 steps in parallel

      at ExecutorAgent.execute (src/agents/executor.ts:52:15)

  console.log
    [ExecutorAgent] Executing step 1: contaminants-detected

      at ExecutorAgent.executeStep (src/agents/executor.ts:177:13)
          at Array.map (<anonymous>)

  console.log
    [ExecutorAgent] Resolved params for contaminants-detected: { shipment_ids: [ 'S1' ] }

      at ExecutorAgent.executeStep (src/agents/executor.ts:193:15)
          at Array.map (<anonymous>)

  console.log
    [ExecutorAgent] Plan execution complete. 2 results

      at ExecutorAgent.execute (src/agents/executor.ts:79:13)

  console.log
    [ExecutorAgent] Executing plan with 3 steps

      at ExecutorAgent.execute (src/agents/executor.ts:35:13)

  console.log
    [ExecutorAgent] Executing 3 steps in parallel

      at ExecutorAgent.execute (src/agents/executor.ts:52:15)

  console.log
    [ExecutorAgent] Executing step 0: tool1

      at ExecutorAgent.executeStep (src/agents/executor.ts:177:13)
          at Array.map (<anonymous>)

  console.log
    [ExecutorAgent] Resolved params for tool1: {}

      at ExecutorAgent.executeStep (src/agents/executor.ts:193:15)
          at Array.map (<anonymous>)

  console.log
    [ExecutorAgent] Executing step 1: tool2

      at ExecutorAgent.executeStep (src/agents/executor.ts:177:13)
          at Array.map (<anonymous>)

  console.log
    [ExecutorAgent] Resolved params for tool2: {}

      at ExecutorAgent.executeStep (src/agents/executor.ts:193:15)
          at Array.map (<anonymous>)

  console.log
    [ExecutorAgent] Executing step 2: tool3

      at ExecutorAgent.executeStep (src/agents/executor.ts:177:13)
          at Array.map (<anonymous>)

  console.log
    [ExecutorAgent] Resolved params for tool3: {}

      at ExecutorAgent.executeStep (src/agents/executor.ts:193:15)
          at Array.map (<anonymous>)

  console.log
    [PlannerAgent] Planning for query: Get shipments from last week

      at PlannerAgent.plan (src/agents/planner.ts:60:13)

  console.error
    [PlannerAgent] Attempt 1/3 failed: Tool not available: shipments

      101 |       } catch (error: any) {
      102 |         attempts++;
    > 103 |         console.error(`[PlannerAgent] Attempt ${attempts}/${this.config.maxRetries} failed:`, error.message);
          |                 ^
      104 |
      105 |         if (attempts >= this.config.maxRetries) {
      106 |           throw new Error(`Failed to generate valid plan after ${attempts} attempts: ${error.message}`);

      at PlannerAgent.plan (src/agents/planner.ts:103:17)
      at Object.<anonymous> (src/tests/agents/planner.test.ts:58:20)

  console.error
    [PlannerAgent] Attempt 2/3 failed: Tool not available: shipments

      101 |       } catch (error: any) {
      102 |         attempts++;
    > 103 |         console.error(`[PlannerAgent] Attempt ${attempts}/${this.config.maxRetries} failed:`, error.message);
          |                 ^
      104 |
      105 |         if (attempts >= this.config.maxRetries) {
      106 |           throw new Error(`Failed to generate valid plan after ${attempts} attempts: ${error.message}`);

      at PlannerAgent.plan (src/agents/planner.ts:103:17)
      at Object.<anonymous> (src/tests/agents/planner.test.ts:58:20)

  console.error
    [PlannerAgent] Attempt 3/3 failed: Tool not available: shipments

      101 |       } catch (error: any) {
      102 |         attempts++;
    > 103 |         console.error(`[PlannerAgent] Attempt ${attempts}/${this.config.maxRetries} failed:`, error.message);
          |                 ^
      104 |
      105 |         if (attempts >= this.config.maxRetries) {
      106 |           throw new Error(`Failed to generate valid plan after ${attempts} attempts: ${error.message}`);

      at PlannerAgent.plan (src/agents/planner.ts:103:17)
      at Object.<anonymous> (src/tests/agents/planner.test.ts:58:20)

  console.log
    [PlannerAgent] Planning for query: test query

      at PlannerAgent.plan (src/agents/planner.ts:60:13)

  console.error
    [PlannerAgent] Attempt 1/3 failed: Tool not available: facilities

      101 |       } catch (error: any) {
      102 |         attempts++;
    > 103 |         console.error(`[PlannerAgent] Attempt ${attempts}/${this.config.maxRetries} failed:`, error.message);
          |                 ^
      104 |
      105 |         if (attempts >= this.config.maxRetries) {
      106 |           throw new Error(`Failed to generate valid plan after ${attempts} attempts: ${error.message}`);

      at PlannerAgent.plan (src/agents/planner.ts:103:17)
      at Object.<anonymous> (src/tests/agents/planner.test.ts:84:20)

  console.error
    [PlannerAgent] Attempt 2/3 failed: Tool not available: facilities

      101 |       } catch (error: any) {
      102 |         attempts++;
    > 103 |         console.error(`[PlannerAgent] Attempt ${attempts}/${this.config.maxRetries} failed:`, error.message);
          |                 ^
      104 |
      105 |         if (attempts >= this.config.maxRetries) {
      106 |           throw new Error(`Failed to generate valid plan after ${attempts} attempts: ${error.message}`);

      at PlannerAgent.plan (src/agents/planner.ts:103:17)
      at Object.<anonymous> (src/tests/agents/planner.test.ts:84:20)

  console.error
    [PlannerAgent] Attempt 3/3 failed: Tool not available: facilities

      101 |       } catch (error: any) {
      102 |         attempts++;
    > 103 |         console.error(`[PlannerAgent] Attempt ${attempts}/${this.config.maxRetries} failed:`, error.message);
          |                 ^
      104 |
      105 |         if (attempts >= this.config.maxRetries) {
      106 |           throw new Error(`Failed to generate valid plan after ${attempts} attempts: ${error.message}`);

      at PlannerAgent.plan (src/agents/planner.ts:103:17)
      at Object.<anonymous> (src/tests/agents/planner.test.ts:84:20)

  console.log
    [PlannerAgent] Planning for query: Get contaminated shipments and details

      at PlannerAgent.plan (src/agents/planner.ts:60:13)

  console.error
    [PlannerAgent] Attempt 1/3 failed: Tool not available: shipments

      101 |       } catch (error: any) {
      102 |         attempts++;
    > 103 |         console.error(`[PlannerAgent] Attempt ${attempts}/${this.config.maxRetries} failed:`, error.message);
          |                 ^
      104 |
      105 |         if (attempts >= this.config.maxRetries) {
      106 |           throw new Error(`Failed to generate valid plan after ${attempts} attempts: ${error.message}`);

      at PlannerAgent.plan (src/agents/planner.ts:103:17)
      at Object.<anonymous> (src/tests/agents/planner.test.ts:117:20)

  console.error
    [PlannerAgent] Attempt 2/3 failed: Tool not available: shipments

      101 |       } catch (error: any) {
      102 |         attempts++;
    > 103 |         console.error(`[PlannerAgent] Attempt ${attempts}/${this.config.maxRetries} failed:`, error.message);
          |                 ^
      104 |
      105 |         if (attempts >= this.config.maxRetries) {
      106 |           throw new Error(`Failed to generate valid plan after ${attempts} attempts: ${error.message}`);

      at PlannerAgent.plan (src/agents/planner.ts:103:17)
      at Object.<anonymous> (src/tests/agents/planner.test.ts:117:20)

  console.error
    [PlannerAgent] Attempt 3/3 failed: Tool not available: shipments

      101 |       } catch (error: any) {
      102 |         attempts++;
    > 103 |         console.error(`[PlannerAgent] Attempt ${attempts}/${this.config.maxRetries} failed:`, error.message);
          |                 ^
      104 |
      105 |         if (attempts >= this.config.maxRetries) {
      106 |           throw new Error(`Failed to generate valid plan after ${attempts} attempts: ${error.message}`);

      at PlannerAgent.plan (src/agents/planner.ts:103:17)
      at Object.<anonymous> (src/tests/agents/planner.test.ts:117:20)

  console.log
    [PlannerAgent] Planning for query: test

      at PlannerAgent.plan (src/agents/planner.ts:60:13)

  console.error
    [PlannerAgent] Attempt 1/3 failed: Tool not available: shipments

      101 |       } catch (error: any) {
      102 |         attempts++;
    > 103 |         console.error(`[PlannerAgent] Attempt ${attempts}/${this.config.maxRetries} failed:`, error.message);
          |                 ^
      104 |
      105 |         if (attempts >= this.config.maxRetries) {
      106 |           throw new Error(`Failed to generate valid plan after ${attempts} attempts: ${error.message}`);

      at PlannerAgent.plan (src/agents/planner.ts:103:17)
      at Object.<anonymous> (src/tests/agents/planner.test.ts:150:7)

  console.error
    [PlannerAgent] Attempt 2/3 failed: Tool not available: shipments

      101 |       } catch (error: any) {
      102 |         attempts++;
    > 103 |         console.error(`[PlannerAgent] Attempt ${attempts}/${this.config.maxRetries} failed:`, error.message);
          |                 ^
      104 |
      105 |         if (attempts >= this.config.maxRetries) {
      106 |           throw new Error(`Failed to generate valid plan after ${attempts} attempts: ${error.message}`);

      at PlannerAgent.plan (src/agents/planner.ts:103:17)
      at Object.<anonymous> (src/tests/agents/planner.test.ts:150:7)

  console.error
    [PlannerAgent] Attempt 3/3 failed: Tool not available: shipments

      101 |       } catch (error: any) {
      102 |         attempts++;
    > 103 |         console.error(`[PlannerAgent] Attempt ${attempts}/${this.config.maxRetries} failed:`, error.message);
          |                 ^
      104 |
      105 |         if (attempts >= this.config.maxRetries) {
      106 |           throw new Error(`Failed to generate valid plan after ${attempts} attempts: ${error.message}`);

      at PlannerAgent.plan (src/agents/planner.ts:103:17)
      at Object.<anonymous> (src/tests/agents/planner.test.ts:150:7)

  console.log
    [PlannerAgent] Planning for query: test

      at PlannerAgent.plan (src/agents/planner.ts:60:13)

  console.error
    [PlannerAgent] Attempt 1/3 failed: Tool not available: shipments

      101 |       } catch (error: any) {
      102 |         attempts++;
    > 103 |         console.error(`[PlannerAgent] Attempt ${attempts}/${this.config.maxRetries} failed:`, error.message);
          |                 ^
      104 |
      105 |         if (attempts >= this.config.maxRetries) {
      106 |           throw new Error(`Failed to generate valid plan after ${attempts} attempts: ${error.message}`);

      at PlannerAgent.plan (src/agents/planner.ts:103:17)
      at Object.<anonymous> (src/tests/agents/planner.test.ts:171:20)

  console.error
    [PlannerAgent] Attempt 2/3 failed: Tool not available: shipments

      101 |       } catch (error: any) {
      102 |         attempts++;
    > 103 |         console.error(`[PlannerAgent] Attempt ${attempts}/${this.config.maxRetries} failed:`, error.message);
          |                 ^
      104 |
      105 |         if (attempts >= this.config.maxRetries) {
      106 |           throw new Error(`Failed to generate valid plan after ${attempts} attempts: ${error.message}`);

      at PlannerAgent.plan (src/agents/planner.ts:103:17)
      at Object.<anonymous> (src/tests/agents/planner.test.ts:171:20)

  console.error
    [PlannerAgent] Attempt 3/3 failed: Tool not available: shipments

      101 |       } catch (error: any) {
      102 |         attempts++;
    > 103 |         console.error(`[PlannerAgent] Attempt ${attempts}/${this.config.maxRetries} failed:`, error.message);
          |                 ^
      104 |
      105 |         if (attempts >= this.config.maxRetries) {
      106 |           throw new Error(`Failed to generate valid plan after ${attempts} attempts: ${error.message}`);

      at PlannerAgent.plan (src/agents/planner.ts:103:17)
      at Object.<anonymous> (src/tests/agents/planner.test.ts:171:20)

  console.log
    [PlannerAgent] Planning for query: test

      at PlannerAgent.plan (src/agents/planner.ts:60:13)

  console.error
    [PlannerAgent] Attempt 1/3 failed: Tool not available: shipments

      101 |       } catch (error: any) {
      102 |         attempts++;
    > 103 |         console.error(`[PlannerAgent] Attempt ${attempts}/${this.config.maxRetries} failed:`, error.message);
          |                 ^
      104 |
      105 |         if (attempts >= this.config.maxRetries) {
      106 |           throw new Error(`Failed to generate valid plan after ${attempts} attempts: ${error.message}`);

      at PlannerAgent.plan (src/agents/planner.ts:103:17)
      at Object.<anonymous> (src/tests/agents/planner.test.ts:192:20)

  console.error
    [PlannerAgent] Attempt 2/3 failed: Tool not available: shipments

      101 |       } catch (error: any) {
      102 |         attempts++;
    > 103 |         console.error(`[PlannerAgent] Attempt ${attempts}/${this.config.maxRetries} failed:`, error.message);
          |                 ^
      104 |
      105 |         if (attempts >= this.config.maxRetries) {
      106 |           throw new Error(`Failed to generate valid plan after ${attempts} attempts: ${error.message}`);

      at PlannerAgent.plan (src/agents/planner.ts:103:17)
      at Object.<anonymous> (src/tests/agents/planner.test.ts:192:20)

  console.error
    [PlannerAgent] Attempt 3/3 failed: Tool not available: shipments

      101 |       } catch (error: any) {
      102 |         attempts++;
    > 103 |         console.error(`[PlannerAgent] Attempt ${attempts}/${this.config.maxRetries} failed:`, error.message);
          |                 ^
      104 |
      105 |         if (attempts >= this.config.maxRetries) {
      106 |           throw new Error(`Failed to generate valid plan after ${attempts} attempts: ${error.message}`);

      at PlannerAgent.plan (src/agents/planner.ts:103:17)
      at Object.<anonymous> (src/tests/agents/planner.test.ts:192:20)

  console.log
    [PlannerAgent] Planning for query: test

      at PlannerAgent.plan (src/agents/planner.ts:60:13)

  console.error
    [PlannerAgent] Attempt 1/3 failed: Tool not available: shipments

      101 |       } catch (error: any) {
      102 |         attempts++;
    > 103 |         console.error(`[PlannerAgent] Attempt ${attempts}/${this.config.maxRetries} failed:`, error.message);
          |                 ^
      104 |
      105 |         if (attempts >= this.config.maxRetries) {
      106 |           throw new Error(`Failed to generate valid plan after ${attempts} attempts: ${error.message}`);

      at PlannerAgent.plan (src/agents/planner.ts:103:17)
      at Object.<anonymous> (src/tests/agents/planner.test.ts:213:20)

  console.error
    [PlannerAgent] Attempt 2/3 failed: Tool not available: shipments

      101 |       } catch (error: any) {
      102 |         attempts++;
    > 103 |         console.error(`[PlannerAgent] Attempt ${attempts}/${this.config.maxRetries} failed:`, error.message);
          |                 ^
      104 |
      105 |         if (attempts >= this.config.maxRetries) {
      106 |           throw new Error(`Failed to generate valid plan after ${attempts} attempts: ${error.message}`);

      at PlannerAgent.plan (src/agents/planner.ts:103:17)
      at Object.<anonymous> (src/tests/agents/planner.test.ts:213:20)

  console.error
    [PlannerAgent] Attempt 3/3 failed: Tool not available: shipments

      101 |       } catch (error: any) {
      102 |         attempts++;
    > 103 |         console.error(`[PlannerAgent] Attempt ${attempts}/${this.config.maxRetries} failed:`, error.message);
          |                 ^
      104 |
      105 |         if (attempts >= this.config.maxRetries) {
      106 |           throw new Error(`Failed to generate valid plan after ${attempts} attempts: ${error.message}`);

      at PlannerAgent.plan (src/agents/planner.ts:103:17)
      at Object.<anonymous> (src/tests/agents/planner.test.ts:213:20)

  console.log
    [PlannerAgent] Planning for query: test

      at PlannerAgent.plan (src/agents/planner.ts:60:13)

  console.error
    [PlannerAgent] Attempt 1/3 failed: Could not extract valid JSON from response

      101 |       } catch (error: any) {
      102 |         attempts++;
    > 103 |         console.error(`[PlannerAgent] Attempt ${attempts}/${this.config.maxRetries} failed:`, error.message);
          |                 ^
      104 |
      105 |         if (attempts >= this.config.maxRetries) {
      106 |           throw new Error(`Failed to generate valid plan after ${attempts} attempts: ${error.message}`);

      at PlannerAgent.plan (src/agents/planner.ts:103:17)
      at Object.<anonymous> (src/tests/agents/planner.test.ts:243:20)

  console.error
    [PlannerAgent] Attempt 2/3 failed: Tool not available: shipments

      101 |       } catch (error: any) {
      102 |         attempts++;
    > 103 |         console.error(`[PlannerAgent] Attempt ${attempts}/${this.config.maxRetries} failed:`, error.message);
          |                 ^
      104 |
      105 |         if (attempts >= this.config.maxRetries) {
      106 |           throw new Error(`Failed to generate valid plan after ${attempts} attempts: ${error.message}`);

      at PlannerAgent.plan (src/agents/planner.ts:103:17)
      at Object.<anonymous> (src/tests/agents/planner.test.ts:243:20)

  console.error
    [PlannerAgent] Attempt 3/3 failed: Cannot read properties of undefined (reading 'content')

      101 |       } catch (error: any) {
      102 |         attempts++;
    > 103 |         console.error(`[PlannerAgent] Attempt ${attempts}/${this.config.maxRetries} failed:`, error.message);
          |                 ^
      104 |
      105 |         if (attempts >= this.config.maxRetries) {
      106 |           throw new Error(`Failed to generate valid plan after ${attempts} attempts: ${error.message}`);

      at PlannerAgent.plan (src/agents/planner.ts:103:17)
      at Object.<anonymous> (src/tests/agents/planner.test.ts:243:20)

  console.log
    [PlannerAgent] Planning for query: test

      at PlannerAgent.plan (src/agents/planner.ts:60:13)

  console.error
    [PlannerAgent] Attempt 1/3 failed: Could not extract valid JSON from response

      101 |       } catch (error: any) {
      102 |         attempts++;
    > 103 |         console.error(`[PlannerAgent] Attempt ${attempts}/${this.config.maxRetries} failed:`, error.message);
          |                 ^
      104 |
      105 |         if (attempts >= this.config.maxRetries) {
      106 |           throw new Error(`Failed to generate valid plan after ${attempts} attempts: ${error.message}`);

      at PlannerAgent.plan (src/agents/planner.ts:103:17)
      at Object.<anonymous> (src/tests/agents/planner.test.ts:257:7)

  console.error
    [PlannerAgent] Attempt 2/3 failed: Could not extract valid JSON from response

      101 |       } catch (error: any) {
      102 |         attempts++;
    > 103 |         console.error(`[PlannerAgent] Attempt ${attempts}/${this.config.maxRetries} failed:`, error.message);
          |                 ^
      104 |
      105 |         if (attempts >= this.config.maxRetries) {
      106 |           throw new Error(`Failed to generate valid plan after ${attempts} attempts: ${error.message}`);

      at PlannerAgent.plan (src/agents/planner.ts:103:17)
      at Object.<anonymous> (src/tests/agents/planner.test.ts:257:7)

  console.error
    [PlannerAgent] Attempt 3/3 failed: Could not extract valid JSON from response

      101 |       } catch (error: any) {
      102 |         attempts++;
    > 103 |         console.error(`[PlannerAgent] Attempt ${attempts}/${this.config.maxRetries} failed:`, error.message);
          |                 ^
      104 |
      105 |         if (attempts >= this.config.maxRetries) {
      106 |           throw new Error(`Failed to generate valid plan after ${attempts} attempts: ${error.message}`);

      at PlannerAgent.plan (src/agents/planner.ts:103:17)
      at Object.<anonymous> (src/tests/agents/planner.test.ts:257:7)

  console.log
    [PlannerAgent] Planning for query: test

      at PlannerAgent.plan (src/agents/planner.ts:60:13)

  console.error
    [PlannerAgent] Attempt 1/3 failed: Could not extract valid JSON from response

      101 |       } catch (error: any) {
      102 |         attempts++;
    > 103 |         console.error(`[PlannerAgent] Attempt ${attempts}/${this.config.maxRetries} failed:`, error.message);
          |                 ^
      104 |
      105 |         if (attempts >= this.config.maxRetries) {
      106 |           throw new Error(`Failed to generate valid plan after ${attempts} attempts: ${error.message}`);

      at PlannerAgent.plan (src/agents/planner.ts:103:17)
      at Object.<anonymous> (src/tests/agents/planner.test.ts:284:7)

  console.error
    [PlannerAgent] Attempt 2/3 failed: Tool not available: shipments

      101 |       } catch (error: any) {
      102 |         attempts++;
    > 103 |         console.error(`[PlannerAgent] Attempt ${attempts}/${this.config.maxRetries} failed:`, error.message);
          |                 ^
      104 |
      105 |         if (attempts >= this.config.maxRetries) {
      106 |           throw new Error(`Failed to generate valid plan after ${attempts} attempts: ${error.message}`);

      at PlannerAgent.plan (src/agents/planner.ts:103:17)
      at Object.<anonymous> (src/tests/agents/planner.test.ts:284:7)

  console.error
    [PlannerAgent] Attempt 3/3 failed: Cannot read properties of undefined (reading 'content')

      101 |       } catch (error: any) {
      102 |         attempts++;
    > 103 |         console.error(`[PlannerAgent] Attempt ${attempts}/${this.config.maxRetries} failed:`, error.message);
          |                 ^
      104 |
      105 |         if (attempts >= this.config.maxRetries) {
      106 |           throw new Error(`Failed to generate valid plan after ${attempts} attempts: ${error.message}`);

      at PlannerAgent.plan (src/agents/planner.ts:103:17)
      at Object.<anonymous> (src/tests/agents/planner.test.ts:284:7)

  console.log
    [PlannerAgent] Planning for query: test

      at PlannerAgent.plan (src/agents/planner.ts:60:13)

  console.error
    [PlannerAgent] Attempt 1/3 failed: Tool not available: non-existent-tool

      101 |       } catch (error: any) {
      102 |         attempts++;
    > 103 |         console.error(`[PlannerAgent] Attempt ${attempts}/${this.config.maxRetries} failed:`, error.message);
          |                 ^
      104 |
      105 |         if (attempts >= this.config.maxRetries) {
      106 |           throw new Error(`Failed to generate valid plan after ${attempts} attempts: ${error.message}`);

      at PlannerAgent.plan (src/agents/planner.ts:103:17)
      at Object.<anonymous> (src/tests/agents/planner.test.ts:308:7)

  console.error
    [PlannerAgent] Attempt 2/3 failed: Tool not available: non-existent-tool

      101 |       } catch (error: any) {
      102 |         attempts++;
    > 103 |         console.error(`[PlannerAgent] Attempt ${attempts}/${this.config.maxRetries} failed:`, error.message);
          |                 ^
      104 |
      105 |         if (attempts >= this.config.maxRetries) {
      106 |           throw new Error(`Failed to generate valid plan after ${attempts} attempts: ${error.message}`);

      at PlannerAgent.plan (src/agents/planner.ts:103:17)
      at Object.<anonymous> (src/tests/agents/planner.test.ts:308:7)

  console.error
    [PlannerAgent] Attempt 3/3 failed: Tool not available: non-existent-tool

      101 |       } catch (error: any) {
      102 |         attempts++;
    > 103 |         console.error(`[PlannerAgent] Attempt ${attempts}/${this.config.maxRetries} failed:`, error.message);
          |                 ^
      104 |
      105 |         if (attempts >= this.config.maxRetries) {
      106 |           throw new Error(`Failed to generate valid plan after ${attempts} attempts: ${error.message}`);

      at PlannerAgent.plan (src/agents/planner.ts:103:17)
      at Object.<anonymous> (src/tests/agents/planner.test.ts:308:7)

  console.log
    [PlannerAgent] Planning for query: test

      at PlannerAgent.plan (src/agents/planner.ts:60:13)

  console.log
    [PlannerAgent] Plan generated successfully

      at PlannerAgent.plan (src/agents/planner.ts:98:17)

  console.log
    [PlannerAgent] Planning for query: test query

      at PlannerAgent.plan (src/agents/planner.ts:60:13)

  console.log
    [ExecutorAgent] Plan execution complete. 3 results

      at ExecutorAgent.execute (src/agents/executor.ts:79:13)

  console.error
    [PlannerAgent] Attempt 1/3 failed: Tool not available: shipments

      101 |       } catch (error: any) {
      102 |         attempts++;
    > 103 |         console.error(`[PlannerAgent] Attempt ${attempts}/${this.config.maxRetries} failed:`, error.message);
          |                 ^
      104 |
      105 |         if (attempts >= this.config.maxRetries) {
      106 |           throw new Error(`Failed to generate valid plan after ${attempts} attempts: ${error.message}`);

      at PlannerAgent.plan (src/agents/planner.ts:103:17)
      at Object.<anonymous> (src/tests/agents/planner.test.ts:359:7)

  console.error
    [PlannerAgent] Attempt 2/3 failed: Tool not available: shipments

      101 |       } catch (error: any) {
      102 |         attempts++;
    > 103 |         console.error(`[PlannerAgent] Attempt ${attempts}/${this.config.maxRetries} failed:`, error.message);
          |                 ^
      104 |
      105 |         if (attempts >= this.config.maxRetries) {
      106 |           throw new Error(`Failed to generate valid plan after ${attempts} attempts: ${error.message}`);

      at PlannerAgent.plan (src/agents/planner.ts:103:17)
      at Object.<anonymous> (src/tests/agents/planner.test.ts:359:7)

  console.error
    [PlannerAgent] Attempt 3/3 failed: Tool not available: shipments

      101 |       } catch (error: any) {
      102 |         attempts++;
    > 103 |         console.error(`[PlannerAgent] Attempt ${attempts}/${this.config.maxRetries} failed:`, error.message);
          |                 ^
      104 |
      105 |         if (attempts >= this.config.maxRetries) {
      106 |           throw new Error(`Failed to generate valid plan after ${attempts} attempts: ${error.message}`);

      at PlannerAgent.plan (src/agents/planner.ts:103:17)
      at Object.<anonymous> (src/tests/agents/planner.test.ts:359:7)

  console.log
    [ExecutorAgent] Executing plan with 4 steps

      at ExecutorAgent.execute (src/agents/executor.ts:35:13)

  console.log
    [PlannerAgent] Planning for query: test query

      at PlannerAgent.plan (src/agents/planner.ts:60:13)

  console.error
    [PlannerAgent] Attempt 1/3 failed: Tool not available: shipments

      101 |       } catch (error: any) {
      102 |         attempts++;
    > 103 |         console.error(`[PlannerAgent] Attempt ${attempts}/${this.config.maxRetries} failed:`, error.message);
          |                 ^
      104 |
      105 |         if (attempts >= this.config.maxRetries) {
      106 |           throw new Error(`Failed to generate valid plan after ${attempts} attempts: ${error.message}`);

      at PlannerAgent.plan (src/agents/planner.ts:103:17)
      at Object.<anonymous> (src/tests/agents/planner.test.ts:382:20)

  console.error
    [PlannerAgent] Attempt 2/3 failed: Tool not available: shipments

      101 |       } catch (error: any) {
      102 |         attempts++;
    > 103 |         console.error(`[PlannerAgent] Attempt ${attempts}/${this.config.maxRetries} failed:`, error.message);
          |                 ^
      104 |
      105 |         if (attempts >= this.config.maxRetries) {
      106 |           throw new Error(`Failed to generate valid plan after ${attempts} attempts: ${error.message}`);

      at PlannerAgent.plan (src/agents/planner.ts:103:17)
      at Object.<anonymous> (src/tests/agents/planner.test.ts:382:20)

  console.log
    [ExecutorAgent] Executing 2 steps in parallel

      at ExecutorAgent.execute (src/agents/executor.ts:52:15)

  console.error
    [PlannerAgent] Attempt 3/3 failed: Tool not available: shipments

      101 |       } catch (error: any) {
      102 |         attempts++;
    > 103 |         console.error(`[PlannerAgent] Attempt ${attempts}/${this.config.maxRetries} failed:`, error.message);
          |                 ^
      104 |
      105 |         if (attempts >= this.config.maxRetries) {
      106 |           throw new Error(`Failed to generate valid plan after ${attempts} attempts: ${error.message}`);

      at PlannerAgent.plan (src/agents/planner.ts:103:17)
      at Object.<anonymous> (src/tests/agents/planner.test.ts:382:20)

  console.log
    [PlannerAgent] Planning for query: test

      at PlannerAgent.plan (src/agents/planner.ts:60:13)

  console.error
    [PlannerAgent] Attempt 1/3 failed: LLM error

      101 |       } catch (error: any) {
      102 |         attempts++;
    > 103 |         console.error(`[PlannerAgent] Attempt ${attempts}/${this.config.maxRetries} failed:`, error.message);
          |                 ^
      104 |
      105 |         if (attempts >= this.config.maxRetries) {
      106 |           throw new Error(`Failed to generate valid plan after ${attempts} attempts: ${error.message}`);

      at PlannerAgent.plan (src/agents/planner.ts:103:17)
      at Object.<anonymous> (src/tests/agents/planner.test.ts:392:7)

  console.error
    [PlannerAgent] Attempt 2/3 failed: LLM error

      101 |       } catch (error: any) {
      102 |         attempts++;
    > 103 |         console.error(`[PlannerAgent] Attempt ${attempts}/${this.config.maxRetries} failed:`, error.message);
          |                 ^
      104 |
      105 |         if (attempts >= this.config.maxRetries) {
      106 |           throw new Error(`Failed to generate valid plan after ${attempts} attempts: ${error.message}`);

      at PlannerAgent.plan (src/agents/planner.ts:103:17)
      at Object.<anonymous> (src/tests/agents/planner.test.ts:392:7)

  console.error
    [PlannerAgent] Attempt 3/3 failed: LLM error

      101 |       } catch (error: any) {
      102 |         attempts++;
    > 103 |         console.error(`[PlannerAgent] Attempt ${attempts}/${this.config.maxRetries} failed:`, error.message);
          |                 ^
      104 |
      105 |         if (attempts >= this.config.maxRetries) {
      106 |           throw new Error(`Failed to generate valid plan after ${attempts} attempts: ${error.message}`);

      at PlannerAgent.plan (src/agents/planner.ts:103:17)
      at Object.<anonymous> (src/tests/agents/planner.test.ts:392:7)

  console.log
    [ExecutorAgent] Executing step 0: tool1

      at ExecutorAgent.executeStep (src/agents/executor.ts:177:13)
          at Array.map (<anonymous>)

  console.log
    [PlannerAgent] Planning for query: test

      at PlannerAgent.plan (src/agents/planner.ts:60:13)

  console.error
    [PlannerAgent] Attempt 1/3 failed: [
      {
        "expected": "array",
        "code": "invalid_type",
        "path": [
          "steps"
        ],
        "message": "Invalid input: expected array, received undefined"
      }
    ]

      101 |       } catch (error: any) {
      102 |         attempts++;
    > 103 |         console.error(`[PlannerAgent] Attempt ${attempts}/${this.config.maxRetries} failed:`, error.message);
          |                 ^
      104 |
      105 |         if (attempts >= this.config.maxRetries) {
      106 |           throw new Error(`Failed to generate valid plan after ${attempts} attempts: ${error.message}`);

      at PlannerAgent.plan (src/agents/planner.ts:103:17)
      at Object.<anonymous> (src/tests/agents/planner.test.ts:403:7)

  console.log
    [ExecutorAgent] Resolved params for tool1: {}

      at ExecutorAgent.executeStep (src/agents/executor.ts:193:15)
          at Array.map (<anonymous>)

  console.error
    [PlannerAgent] Attempt 2/3 failed: [
      {
        "expected": "array",
        "code": "invalid_type",
        "path": [
          "steps"
        ],
        "message": "Invalid input: expected array, received undefined"
      }
    ]

      101 |       } catch (error: any) {
      102 |         attempts++;
    > 103 |         console.error(`[PlannerAgent] Attempt ${attempts}/${this.config.maxRetries} failed:`, error.message);
          |                 ^
      104 |
      105 |         if (attempts >= this.config.maxRetries) {
      106 |           throw new Error(`Failed to generate valid plan after ${attempts} attempts: ${error.message}`);

      at PlannerAgent.plan (src/agents/planner.ts:103:17)
      at Object.<anonymous> (src/tests/agents/planner.test.ts:403:7)

  console.error
    [PlannerAgent] Attempt 3/3 failed: [
      {
        "expected": "array",
        "code": "invalid_type",
        "path": [
          "steps"
        ],
        "message": "Invalid input: expected array, received undefined"
      }
    ]

      101 |       } catch (error: any) {
      102 |         attempts++;
    > 103 |         console.error(`[PlannerAgent] Attempt ${attempts}/${this.config.maxRetries} failed:`, error.message);
          |                 ^
      104 |
      105 |         if (attempts >= this.config.maxRetries) {
      106 |           throw new Error(`Failed to generate valid plan after ${attempts} attempts: ${error.message}`);

      at PlannerAgent.plan (src/agents/planner.ts:103:17)
      at Object.<anonymous> (src/tests/agents/planner.test.ts:403:7)

  console.log
    [PlannerAgent] Planning for query: test

      at PlannerAgent.plan (src/agents/planner.ts:60:13)

  console.error
    [PlannerAgent] Attempt 1/3 failed: Tool not available: shipments

      101 |       } catch (error: any) {
      102 |         attempts++;
    > 103 |         console.error(`[PlannerAgent] Attempt ${attempts}/${this.config.maxRetries} failed:`, error.message);
          |                 ^
      104 |
      105 |         if (attempts >= this.config.maxRetries) {
      106 |           throw new Error(`Failed to generate valid plan after ${attempts} attempts: ${error.message}`);

      at PlannerAgent.plan (src/agents/planner.ts:103:17)
      at Object.<anonymous> (src/tests/agents/planner.test.ts:428:7)

  console.log
    [ExecutorAgent] Executing step 1: tool2

      at ExecutorAgent.executeStep (src/agents/executor.ts:177:13)
          at Array.map (<anonymous>)

  console.log
    [ExecutorAgent] Resolved params for tool2: {}

      at ExecutorAgent.executeStep (src/agents/executor.ts:193:15)
          at Array.map (<anonymous>)

  console.error
    [PlannerAgent] Attempt 2/3 failed: Tool not available: shipments

      101 |       } catch (error: any) {
      102 |         attempts++;
    > 103 |         console.error(`[PlannerAgent] Attempt ${attempts}/${this.config.maxRetries} failed:`, error.message);
          |                 ^
      104 |
      105 |         if (attempts >= this.config.maxRetries) {
      106 |           throw new Error(`Failed to generate valid plan after ${attempts} attempts: ${error.message}`);

      at PlannerAgent.plan (src/agents/planner.ts:103:17)
      at Object.<anonymous> (src/tests/agents/planner.test.ts:428:7)

  console.error
    [PlannerAgent] Attempt 3/3 failed: Tool not available: shipments

      101 |       } catch (error: any) {
      102 |         attempts++;
    > 103 |         console.error(`[PlannerAgent] Attempt ${attempts}/${this.config.maxRetries} failed:`, error.message);
          |                 ^
      104 |
      105 |         if (attempts >= this.config.maxRetries) {
      106 |           throw new Error(`Failed to generate valid plan after ${attempts} attempts: ${error.message}`);

      at PlannerAgent.plan (src/agents/planner.ts:103:17)
      at Object.<anonymous> (src/tests/agents/planner.test.ts:428:7)

  console.log
    [PlannerAgent] Planning for query: test

      at PlannerAgent.plan (src/agents/planner.ts:60:13)

  console.error
    [PlannerAgent] Attempt 1/1 failed: Could not extract valid JSON from response

      101 |       } catch (error: any) {
      102 |         attempts++;
    > 103 |         console.error(`[PlannerAgent] Attempt ${attempts}/${this.config.maxRetries} failed:`, error.message);
          |                 ^
      104 |
      105 |         if (attempts >= this.config.maxRetries) {
      106 |           throw new Error(`Failed to generate valid plan after ${attempts} attempts: ${error.message}`);

      at PlannerAgent.plan (src/agents/planner.ts:103:17)
      at Object.<anonymous> (src/tests/agents/planner.test.ts:446:7)

FAIL src/tests/agents/planner.test.ts
  PlannerAgent
    Simple Query Planning
      ✕ should generate valid plan for simple query (53 ms)
      ✕ should include query in metadata (5 ms)
    Query with Dependencies
      ✕ should handle nested queries with dependencies (2 ms)
      ✕ should validate dependency indices (3 ms)
    JSON Extraction
      ✕ should extract JSON from markdown code blocks (5 ms)
      ✕ should extract JSON from mixed text (1 ms)
      ✕ should parse plain JSON (2 ms)
    Retry Logic
      ✕ should retry on invalid JSON (2 ms)
      ✓ should throw after max retries (3 ms)
      ✕ should include error feedback in retry prompt (1 ms)
    Tool Availability Validation
      ✓ should validate tool availability when enabled (2 ms)
      ✓ should skip validation when disabled (1 ms)
    Context Handling
      ✕ should include context in LLM prompt when provided (1 ms)
      ✕ should work without context (4 ms)
    Error Handling
      ✓ should handle LLM failures gracefully (1 ms)
      ✓ should handle schema validation failures (2 ms)
    Configuration
      ✕ should use custom temperature (2 ms)
      ✓ should use custom maxRetries (2 ms)

  ● PlannerAgent › Simple Query Planning › should generate valid plan for simple query

    Failed to generate valid plan after 3 attempts: Tool not available: shipments

      104 |
      105 |         if (attempts >= this.config.maxRetries) {
    > 106 |           throw new Error(`Failed to generate valid plan after ${attempts} attempts: ${error.message}`);
          |                 ^
      107 |         }
      108 |
      109 |         // Add error feedback to next attempt

      at PlannerAgent.plan (src/agents/planner.ts:106:17)
      at Object.<anonymous> (src/tests/agents/planner.test.ts:58:20)

  ● PlannerAgent › Simple Query Planning › should include query in metadata

    Failed to generate valid plan after 3 attempts: Tool not available: facilities

      104 |
      105 |         if (attempts >= this.config.maxRetries) {
    > 106 |           throw new Error(`Failed to generate valid plan after ${attempts} attempts: ${error.message}`);
          |                 ^
      107 |         }
      108 |
      109 |         // Add error feedback to next attempt

      at PlannerAgent.plan (src/agents/planner.ts:106:17)
      at Object.<anonymous> (src/tests/agents/planner.test.ts:84:20)

  ● PlannerAgent › Query with Dependencies › should handle nested queries with dependencies

    Failed to generate valid plan after 3 attempts: Tool not available: shipments

      104 |
      105 |         if (attempts >= this.config.maxRetries) {
    > 106 |           throw new Error(`Failed to generate valid plan after ${attempts} attempts: ${error.message}`);
          |                 ^
      107 |         }
      108 |
      109 |         // Add error feedback to next attempt

      at PlannerAgent.plan (src/agents/planner.ts:106:17)
      at Object.<anonymous> (src/tests/agents/planner.test.ts:117:20)

  ● PlannerAgent › Query with Dependencies › should validate dependency indices

    expect(received).rejects.toThrow(expected)

    Expected substring: "Invalid dependency index"
    Received message:   "Failed to generate valid plan after 3 attempts: Tool not available: shipments"

          104 |
          105 |         if (attempts >= this.config.maxRetries) {
        > 106 |           throw new Error(`Failed to generate valid plan after ${attempts} attempts: ${error.message}`);
              |                 ^
          107 |         }
          108 |
          109 |         // Add error feedback to next attempt

      at PlannerAgent.plan (src/agents/planner.ts:106:17)
      at Object.<anonymous> (src/tests/agents/planner.test.ts:150:7)
      at Object.toThrow (node_modules/expect/build/index.js:2155:20)
      at Object.<anonymous> (src/tests/agents/planner.test.ts:150:50)

  ● PlannerAgent › JSON Extraction › should extract JSON from markdown code blocks

    Failed to generate valid plan after 3 attempts: Tool not available: shipments

      104 |
      105 |         if (attempts >= this.config.maxRetries) {
    > 106 |           throw new Error(`Failed to generate valid plan after ${attempts} attempts: ${error.message}`);
          |                 ^
      107 |         }
      108 |
      109 |         // Add error feedback to next attempt

      at PlannerAgent.plan (src/agents/planner.ts:106:17)
      at Object.<anonymous> (src/tests/agents/planner.test.ts:171:20)

  ● PlannerAgent › JSON Extraction › should extract JSON from mixed text

    Failed to generate valid plan after 3 attempts: Tool not available: shipments

      104 |
      105 |         if (attempts >= this.config.maxRetries) {
    > 106 |           throw new Error(`Failed to generate valid plan after ${attempts} attempts: ${error.message}`);
          |                 ^
      107 |         }
      108 |
      109 |         // Add error feedback to next attempt

      at PlannerAgent.plan (src/agents/planner.ts:106:17)
      at Object.<anonymous> (src/tests/agents/planner.test.ts:192:20)

  ● PlannerAgent › JSON Extraction › should parse plain JSON

    Failed to generate valid plan after 3 attempts: Tool not available: shipments

      104 |
      105 |         if (attempts >= this.config.maxRetries) {
    > 106 |           throw new Error(`Failed to generate valid plan after ${attempts} attempts: ${error.message}`);
          |                 ^
      107 |         }
      108 |
      109 |         // Add error feedback to next attempt

      at PlannerAgent.plan (src/agents/planner.ts:106:17)
      at Object.<anonymous> (src/tests/agents/planner.test.ts:213:20)

  ● PlannerAgent › Retry Logic › should retry on invalid JSON

    Failed to generate valid plan after 3 attempts: Cannot read properties of undefined (reading 'content')

      104 |
      105 |         if (attempts >= this.config.maxRetries) {
    > 106 |           throw new Error(`Failed to generate valid plan after ${attempts} attempts: ${error.message}`);
          |                 ^
      107 |         }
      108 |
      109 |         // Add error feedback to next attempt

      at PlannerAgent.plan (src/agents/planner.ts:106:17)
      at Object.<anonymous> (src/tests/agents/planner.test.ts:243:20)

  ● PlannerAgent › Retry Logic › should include error feedback in retry prompt

    Failed to generate valid plan after 3 attempts: Cannot read properties of undefined (reading 'content')

      104 |
      105 |         if (attempts >= this.config.maxRetries) {
    > 106 |           throw new Error(`Failed to generate valid plan after ${attempts} attempts: ${error.message}`);
          |                 ^
      107 |         }
      108 |
      109 |         // Add error feedback to next attempt

      at PlannerAgent.plan (src/agents/planner.ts:106:17)
      at Object.<anonymous> (src/tests/agents/planner.test.ts:284:7)

  ● PlannerAgent › Context Handling › should include context in LLM prompt when provided

    Failed to generate valid plan after 3 attempts: Tool not available: shipments

      104 |
      105 |         if (attempts >= this.config.maxRetries) {
    > 106 |           throw new Error(`Failed to generate valid plan after ${attempts} attempts: ${error.message}`);
          |                 ^
      107 |         }
      108 |
      109 |         // Add error feedback to next attempt

      at PlannerAgent.plan (src/agents/planner.ts:106:17)
      at Object.<anonymous> (src/tests/agents/planner.test.ts:359:7)

  ● PlannerAgent › Context Handling › should work without context

    Failed to generate valid plan after 3 attempts: Tool not available: shipments

      104 |
      105 |         if (attempts >= this.config.maxRetries) {
    > 106 |           throw new Error(`Failed to generate valid plan after ${attempts} attempts: ${error.message}`);
          |                 ^
      107 |         }
      108 |
      109 |         // Add error feedback to next attempt

      at PlannerAgent.plan (src/agents/planner.ts:106:17)
      at Object.<anonymous> (src/tests/agents/planner.test.ts:382:20)

  ● PlannerAgent › Configuration › should use custom temperature

    Failed to generate valid plan after 3 attempts: Tool not available: shipments

      104 |
      105 |         if (attempts >= this.config.maxRetries) {
    > 106 |           throw new Error(`Failed to generate valid plan after ${attempts} attempts: ${error.message}`);
          |                 ^
      107 |         }
      108 |
      109 |         // Add error feedback to next attempt

      at PlannerAgent.plan (src/agents/planner.ts:106:17)
      at Object.<anonymous> (src/tests/agents/planner.test.ts:428:7)

  console.log
    [ExecutorAgent] Executing 2 steps in parallel

      at ExecutorAgent.execute (src/agents/executor.ts:52:15)

  console.log
    [ExecutorAgent] Executing step 2: tool3

      at ExecutorAgent.executeStep (src/agents/executor.ts:177:13)
          at Array.map (<anonymous>)

  console.log
    [ExecutorAgent] Resolved params for tool3: {}

      at ExecutorAgent.executeStep (src/agents/executor.ts:193:15)
          at Array.map (<anonymous>)

  console.log
    [ExecutorAgent] Executing step 3: tool4

      at ExecutorAgent.executeStep (src/agents/executor.ts:177:13)
          at Array.map (<anonymous>)

  console.log
    [ExecutorAgent] Resolved params for tool4: {}

      at ExecutorAgent.executeStep (src/agents/executor.ts:193:15)
          at Array.map (<anonymous>)

  console.log
    [ExecutorAgent] Plan execution complete. 4 results

      at ExecutorAgent.execute (src/agents/executor.ts:79:13)

  console.log
    [ExecutorAgent] Executing plan with 2 steps

      at ExecutorAgent.execute (src/agents/executor.ts:35:13)

  console.log
    [ExecutorAgent] Executing 1 steps in parallel

      at ExecutorAgent.execute (src/agents/executor.ts:52:15)

  console.log
    [ExecutorAgent] Executing step 0: shipments

      at ExecutorAgent.executeStep (src/agents/executor.ts:177:13)
          at Array.map (<anonymous>)

  console.log
    [ExecutorAgent] Resolved params for shipments: {}

      at ExecutorAgent.executeStep (src/agents/executor.ts:193:15)
          at Array.map (<anonymous>)

  console.log
    [ExecutorAgent] Executing 1 steps in parallel

      at ExecutorAgent.execute (src/agents/executor.ts:52:15)

  console.log
    [ExecutorAgent] Executing step 1: contaminants-detected

      at ExecutorAgent.executeStep (src/agents/executor.ts:177:13)
          at Array.map (<anonymous>)

  console.log
    [ExecutorAgent] Resolved params for contaminants-detected: { ids: [ 'S1' ] }

      at ExecutorAgent.executeStep (src/agents/executor.ts:193:15)
          at Array.map (<anonymous>)

  console.log
    [ExecutorAgent] Plan execution complete. 2 results

      at ExecutorAgent.execute (src/agents/executor.ts:79:13)

  console.log
    [ExecutorAgent] Executing plan with 5 steps

      at ExecutorAgent.execute (src/agents/executor.ts:35:13)

  console.log
    [ExecutorAgent] Executing 2 steps in parallel

      at ExecutorAgent.execute (src/agents/executor.ts:52:15)

  console.log
    [ExecutorAgent] Executing step 0: facilities

      at ExecutorAgent.executeStep (src/agents/executor.ts:177:13)
          at Array.map (<anonymous>)

  console.log
    [ExecutorAgent] Resolved params for facilities: {}

      at ExecutorAgent.executeStep (src/agents/executor.ts:193:15)
          at Array.map (<anonymous>)

  console.log
    [ExecutorAgent] Executing step 1: shipments

      at ExecutorAgent.executeStep (src/agents/executor.ts:177:13)
          at Array.map (<anonymous>)

  console.log
    [ExecutorAgent] Resolved params for shipments: {}

      at ExecutorAgent.executeStep (src/agents/executor.ts:193:15)
          at Array.map (<anonymous>)

  console.log
    [ExecutorAgent] Executing 2 steps in parallel

      at ExecutorAgent.execute (src/agents/executor.ts:52:15)

  console.log
    [ExecutorAgent] Executing step 2: contaminants1

      at ExecutorAgent.executeStep (src/agents/executor.ts:177:13)
          at Array.map (<anonymous>)

  console.log
    [ExecutorAgent] Resolved params for contaminants1: {}

      at ExecutorAgent.executeStep (src/agents/executor.ts:193:15)
          at Array.map (<anonymous>)

  console.log
    [ExecutorAgent] Executing step 3: contaminants2

      at ExecutorAgent.executeStep (src/agents/executor.ts:177:13)
          at Array.map (<anonymous>)

  console.log
    [ExecutorAgent] Resolved params for contaminants2: {}

      at ExecutorAgent.executeStep (src/agents/executor.ts:193:15)
          at Array.map (<anonymous>)

  console.log
    [ExecutorAgent] Executing 1 steps in parallel

      at ExecutorAgent.execute (src/agents/executor.ts:52:15)

  console.log
    [ExecutorAgent] Executing step 4: final

      at ExecutorAgent.executeStep (src/agents/executor.ts:177:13)
          at Array.map (<anonymous>)

  console.log
    [ExecutorAgent] Resolved params for final: {}

      at ExecutorAgent.executeStep (src/agents/executor.ts:193:15)
          at Array.map (<anonymous>)

  console.log
    [ExecutorAgent] Plan execution complete. 5 results

      at ExecutorAgent.execute (src/agents/executor.ts:79:13)

  console.log
    [ExecutorAgent] Executing plan with 2 steps

      at ExecutorAgent.execute (src/agents/executor.ts:35:13)

  console.log
    [ExecutorAgent] Executing 1 steps in parallel

      at ExecutorAgent.execute (src/agents/executor.ts:52:15)

  console.log
    [ExecutorAgent] Executing step 0: facilities

      at ExecutorAgent.executeStep (src/agents/executor.ts:177:13)
          at Array.map (<anonymous>)

  console.log
    [ExecutorAgent] Resolved params for facilities: { location: 'Hannover' }

      at ExecutorAgent.executeStep (src/agents/executor.ts:193:15)
          at Array.map (<anonymous>)

  console.log
    [ExecutorAgent] Executing 1 steps in parallel

      at ExecutorAgent.execute (src/agents/executor.ts:52:15)

  console.log
    [ExecutorAgent] Executing step 1: contaminants-detected

      at ExecutorAgent.executeStep (src/agents/executor.ts:177:13)
          at Array.map (<anonymous>)

  console.log
    [ExecutorAgent] Resolved params for contaminants-detected: { facility_id: 'F1' }

      at ExecutorAgent.executeStep (src/agents/executor.ts:193:15)
          at Array.map (<anonymous>)

  console.log
    [ExecutorAgent] Plan execution complete. 2 results

      at ExecutorAgent.execute (src/agents/executor.ts:79:13)

  console.log
    [ExecutorAgent] Executing plan with 2 steps

      at ExecutorAgent.execute (src/agents/executor.ts:35:13)

  console.log
    [ExecutorAgent] Executing 1 steps in parallel

      at ExecutorAgent.execute (src/agents/executor.ts:52:15)

  console.log
    [ExecutorAgent] Executing step 0: shipments

      at ExecutorAgent.executeStep (src/agents/executor.ts:177:13)
          at Array.map (<anonymous>)

  console.log
    [ExecutorAgent] Resolved params for shipments: { has_contaminants: true }

      at ExecutorAgent.executeStep (src/agents/executor.ts:193:15)
          at Array.map (<anonymous>)

  console.log
    [ExecutorAgent] Executing 1 steps in parallel

      at ExecutorAgent.execute (src/agents/executor.ts:52:15)

  console.log
    [ExecutorAgent] Executing step 1: contaminants-detected

      at ExecutorAgent.executeStep (src/agents/executor.ts:177:13)
          at Array.map (<anonymous>)

  console.log
    [ExecutorAgent] Resolved params for contaminants-detected: { shipment_ids: [ 'S1', 'S2', 'S3' ] }

      at ExecutorAgent.executeStep (src/agents/executor.ts:193:15)
          at Array.map (<anonymous>)

  console.log
    [ExecutorAgent] Plan execution complete. 2 results

      at ExecutorAgent.execute (src/agents/executor.ts:79:13)

  console.log
    [ExecutorAgent] Executing plan with 2 steps

      at ExecutorAgent.execute (src/agents/executor.ts:35:13)

  console.log
    [ExecutorAgent] Executing 1 steps in parallel

      at ExecutorAgent.execute (src/agents/executor.ts:52:15)

  console.log
    [ExecutorAgent] Executing step 0: shipments

      at ExecutorAgent.executeStep (src/agents/executor.ts:177:13)
          at Array.map (<anonymous>)

  console.log
    [ExecutorAgent] Resolved params for shipments: {}

      at ExecutorAgent.executeStep (src/agents/executor.ts:193:15)
          at Array.map (<anonymous>)

  console.log
    [ExecutorAgent] Executing 1 steps in parallel

      at ExecutorAgent.execute (src/agents/executor.ts:52:15)

  console.log
    [ExecutorAgent] Executing step 1: facilities

      at ExecutorAgent.executeStep (src/agents/executor.ts:177:13)
          at Array.map (<anonymous>)

  console.log
    [ExecutorAgent] Resolved params for facilities: { id: 'F1' }

      at ExecutorAgent.executeStep (src/agents/executor.ts:193:15)
          at Array.map (<anonymous>)

  console.log
    [ExecutorAgent] Plan execution complete. 2 results

      at ExecutorAgent.execute (src/agents/executor.ts:79:13)

  console.log
    [ExecutorAgent] Executing plan with 2 steps

      at ExecutorAgent.execute (src/agents/executor.ts:35:13)

  console.log
    [ExecutorAgent] Executing 1 steps in parallel

      at ExecutorAgent.execute (src/agents/executor.ts:52:15)

  console.log
    [ExecutorAgent] Executing step 0: test

      at ExecutorAgent.executeStep (src/agents/executor.ts:177:13)
          at Array.map (<anonymous>)

  console.log
    [ExecutorAgent] Resolved params for test: {}

      at ExecutorAgent.executeStep (src/agents/executor.ts:193:15)
          at Array.map (<anonymous>)

  console.log
    [ExecutorAgent] Executing 1 steps in parallel

      at ExecutorAgent.execute (src/agents/executor.ts:52:15)

  console.log
    [ExecutorAgent] Executing step 1: test2

      at ExecutorAgent.executeStep (src/agents/executor.ts:177:13)
          at Array.map (<anonymous>)

  console.log
    [ExecutorAgent] Resolved params for test2: { date_from: '2025-01-01', date_to: '2025-01-31' }

      at ExecutorAgent.executeStep (src/agents/executor.ts:193:15)
          at Array.map (<anonymous>)

  console.log
    [ExecutorAgent] Plan execution complete. 2 results

      at ExecutorAgent.execute (src/agents/executor.ts:79:13)

  console.log
    [ExecutorAgent] Executing plan with 2 steps

      at ExecutorAgent.execute (src/agents/executor.ts:35:13)

  console.log
    [ExecutorAgent] Executing plan with 3 steps

      at ExecutorAgent.execute (src/agents/executor.ts:35:13)

PASS src/tests/shared/llm/adapters.test.ts
  LLM Adapters
    OpenAIAdapter
      ✓ should check availability based on API key (5 ms)
      ✓ should not be available without API key
      ✓ should have correct name
    GroqAdapter
      ✓ should check availability based on API key (1 ms)
      ✓ should not be available without API key
      ✓ should have correct name (1 ms)
    OllamaAdapter
      ✓ should check availability by calling tags endpoint (42 ms)
      ✓ should not be available when server is down (60 ms)
      ✓ should generate response with proper message formatting (14 ms)
      ✓ should have correct name
      ✓ should use default base URL
      ✓ should use custom base URL
    Configuration
      ✓ should use config temperature (19 ms)
      ✓ should override temperature from request config (14 ms)

  console.log
    [ExecutorAgent] Executing plan with 4 steps

      at ExecutorAgent.execute (src/agents/executor.ts:35:13)

  console.log
    [ExecutorAgent] Executing 1 steps in parallel

      at ExecutorAgent.execute (src/agents/executor.ts:52:15)

  console.log
    [ExecutorAgent] Executing step 0: tool1

      at ExecutorAgent.executeStep (src/agents/executor.ts:177:13)
          at Array.map (<anonymous>)

  console.log
    [ExecutorAgent] Resolved params for tool1: {}

      at ExecutorAgent.executeStep (src/agents/executor.ts:193:15)
          at Array.map (<anonymous>)

  console.log
    [ExecutorAgent] Executing 1 steps in parallel

      at ExecutorAgent.execute (src/agents/executor.ts:52:15)

  console.log
    [ExecutorAgent] Executing step 1: tool2

      at ExecutorAgent.executeStep (src/agents/executor.ts:177:13)
          at Array.map (<anonymous>)

  console.log
    [ExecutorAgent] Resolved params for tool2: {}

      at ExecutorAgent.executeStep (src/agents/executor.ts:193:15)
          at Array.map (<anonymous>)

  console.log
    [ExecutorAgent] Executing 1 steps in parallel

      at ExecutorAgent.execute (src/agents/executor.ts:52:15)

  console.log
    [ExecutorAgent] Executing step 2: tool3

      at ExecutorAgent.executeStep (src/agents/executor.ts:177:13)
          at Array.map (<anonymous>)

  console.log
    [ExecutorAgent] Resolved params for tool3: {}

      at ExecutorAgent.executeStep (src/agents/executor.ts:193:15)
          at Array.map (<anonymous>)

  console.log
    [ExecutorAgent] Executing 1 steps in parallel

      at ExecutorAgent.execute (src/agents/executor.ts:52:15)

  console.log
    [ExecutorAgent] Executing step 3: tool4

      at ExecutorAgent.executeStep (src/agents/executor.ts:177:13)
          at Array.map (<anonymous>)

  console.log
    [ExecutorAgent] Resolved params for tool4: {}

      at ExecutorAgent.executeStep (src/agents/executor.ts:193:15)
          at Array.map (<anonymous>)

  console.log
    [ExecutorAgent] Plan execution complete. 4 results

      at ExecutorAgent.execute (src/agents/executor.ts:79:13)

  console.log
    [ExecutorAgent] Executing plan with 1 steps

      at ExecutorAgent.execute (src/agents/executor.ts:35:13)

  console.log
    [ExecutorAgent] Executing 1 steps in parallel

      at ExecutorAgent.execute (src/agents/executor.ts:52:15)

  console.log
    [ExecutorAgent] Executing step 0: non-existent

      at ExecutorAgent.executeStep (src/agents/executor.ts:177:13)
          at Array.map (<anonymous>)

  console.error
    [ExecutorAgent] Step 0 (non-existent) failed: Tool not found: non-existent

      202 |
      203 |     } catch (error: any) {
    > 204 |       console.error(`[ExecutorAgent] Step ${index} (${step.tool}) failed:`, error.message);
          |               ^
      205 |
      206 |       return {
      207 |         success: false,

      at ExecutorAgent.executeStep (src/agents/executor.ts:204:15)
      at src/agents/executor.ts:166:19
          at Array.map (<anonymous>)
      at ExecutorAgent.executeBatch (src/agents/executor.ts:161:34)
      at ExecutorAgent.execute (src/agents/executor.ts:55:39)
      at Object.<anonymous> (src/tests/agents/executor.test.ts:503:38)

  console.log
    [ExecutorAgent] Plan execution complete. 1 results

      at ExecutorAgent.execute (src/agents/executor.ts:79:13)

  console.log
    [ExecutorAgent] Executing plan with 1 steps

      at ExecutorAgent.execute (src/agents/executor.ts:35:13)

  console.log
    [ExecutorAgent] Executing 1 steps in parallel

      at ExecutorAgent.execute (src/agents/executor.ts:52:15)

  console.log
    [ExecutorAgent] Executing step 0: test

      at ExecutorAgent.executeStep (src/agents/executor.ts:177:13)
          at Array.map (<anonymous>)

  console.log
    [ExecutorAgent] Resolved params for test: {}

      at ExecutorAgent.executeStep (src/agents/executor.ts:193:15)
          at Array.map (<anonymous>)

  console.error
    [ExecutorAgent] Tool test attempt 1/3 failed: Execution failed

      353 |       } catch (error: any) {
      354 |         lastError = error;
    > 355 |         console.error(
          |                 ^
      356 |           `[ExecutorAgent] Tool ${toolName} attempt ${attempt}/${this.config.maxRetries} failed:`,
      357 |           error.message
      358 |         );

      at ExecutorAgent.executeWithRetry (src/agents/executor.ts:355:17)
      at ExecutorAgent.executeStep (src/agents/executor.ts:196:22)
          at async Promise.all (index 0)
      at ExecutorAgent.execute (src/agents/executor.ts:55:28)
      at Object.<anonymous> (src/tests/agents/executor.test.ts:520:23)

  console.log
    [LLMProvider] Using openai provider

      at LLMProvider.generate (src/shared/llm/provider.ts:42:17)

  console.log
    [LLMProvider] Using openai provider

      at LLMProvider.generate (src/shared/llm/provider.ts:42:17)

  console.error
    [LLMProvider] openai failed: API key invalid

      43 |         return await adapter.generate(request);
      44 |       } catch (error: any) {
    > 45 |         console.error(`[LLMProvider] ${adapter.name} failed:`, error.message);
         |                 ^
      46 |         errors.push(error);
      47 |       }
      48 |     }

      at LLMProvider.generate (src/shared/llm/provider.ts:45:17)
      at Object.<anonymous> (src/tests/shared/llm/provider.test.ts:76:20)

  console.log
    [LLMProvider] Using groq provider

      at LLMProvider.generate (src/shared/llm/provider.ts:42:17)

  console.log
    [LLMProvider] openai is not available, skipping...

      at LLMProvider.generate (src/shared/llm/provider.ts:38:19)

  console.log
    [LLMProvider] Using groq provider

      at LLMProvider.generate (src/shared/llm/provider.ts:42:17)

  console.log
    [LLMProvider] Using openai provider

      at LLMProvider.generate (src/shared/llm/provider.ts:42:17)

  console.error
    [LLMProvider] openai failed: Fail 1

      43 |         return await adapter.generate(request);
      44 |       } catch (error: any) {
    > 45 |         console.error(`[LLMProvider] ${adapter.name} failed:`, error.message);
         |                 ^
      46 |         errors.push(error);
      47 |       }
      48 |     }

      at LLMProvider.generate (src/shared/llm/provider.ts:45:17)
      at Object.<anonymous> (src/tests/shared/llm/provider.test.ts:133:5)

  console.log
    [LLMProvider] Using groq provider

      at LLMProvider.generate (src/shared/llm/provider.ts:42:17)

  console.error
    [LLMProvider] groq failed: Fail 2

      43 |         return await adapter.generate(request);
      44 |       } catch (error: any) {
    > 45 |         console.error(`[LLMProvider] ${adapter.name} failed:`, error.message);
         |                 ^
      46 |         errors.push(error);
      47 |       }
      48 |     }

      at LLMProvider.generate (src/shared/llm/provider.ts:45:17)
      at Object.<anonymous> (src/tests/shared/llm/provider.test.ts:133:5)

  console.log
    [LLMProvider] openai is not available, skipping...

      at LLMProvider.generate (src/shared/llm/provider.ts:38:19)

  console.log
    [LLMProvider] groq is not available, skipping...

      at LLMProvider.generate (src/shared/llm/provider.ts:38:19)

PASS src/tests/shared/llm/provider.test.ts
  LLMProvider
    ✓ should use first available provider (6 ms)
    ✓ should fallback to next provider on failure (2 ms)
    ✓ should skip unavailable providers (1 ms)
    ✓ should throw error when all providers fail (8 ms)
    ✓ should throw error when all providers unavailable (2 ms)

PASS src/tests/tools/inspections.test.ts
  InspectionsTool
    ✓ should have correct tool metadata (1 ms)
    ✓ should fetch all inspections (11 ms)
    ✓ should filter inspections by status (21 ms)
    ✓ should filter inspections by date range (12 ms)
    ✓ should filter inspections by facility (15 ms)
    ✓ should filter inspections by shipment (14 ms)
    ✓ should filter inspections with risk contaminants (14 ms)
    ✓ should handle API errors gracefully (69 ms)
    ✓ should handle network errors gracefully (13 ms)
    ✓ should get accepted inspections from this week (6 ms)
    ✓ should handle multiple filters simultaneously (7 ms)

PASS src/tests/shared/utils/retry.test.ts
  Retry Utilities
    sleep
      ✓ should sleep for specified duration (109 ms)
    withRetry
      ✓ should succeed on first attempt (2 ms)
      ✓ should retry on failure (25 ms)
      ✓ should throw after max retries (44 ms)
      ✓ should call onRetry callback (17 ms)
      ✓ should use exponential backoff (311 ms)
      ✓ should respect maxDelay (203 ms)
    withTimeout
      ✓ should resolve before timeout
      ✓ should timeout slow promises (101 ms)
      ✓ should use default error message (105 ms)

PASS src/tests/tools/contaminants.test.ts
  ContaminantsTool
    ✓ should have correct tool metadata (12 ms)
    ✓ should fetch all contaminants (39 ms)
    ✓ should filter contaminants by shipment IDs (7 ms)
    ✓ should filter contaminants by facility (12 ms)
    ✓ should filter contaminants by date range (17 ms)
    ✓ should filter contaminants by type (7 ms)
    ✓ should filter contaminants by risk level (5 ms)
    ✓ should handle API errors gracefully (83 ms)
    ✓ should handle network errors gracefully (59 ms)
    ✓ should handle multiple shipment IDs (273 ms)
    ✓ should handle complex filters (75 ms)

PASS src/tests/graphql/subscription-resolvers.test.ts
  GraphQL Subscription Resolvers
    queryProgress Subscription
      ✓ should return async iterable (4 ms)
      ✓ should subscribe to QUERY_PROGRESS channel (2 ms)
      ✓ should receive published progress updates (2 ms)
      ✓ should handle multiple progress updates (1 ms)
    agentStatus Subscription
      ✓ should return async iterable
      ✓ should subscribe to AGENT_STATUS channel
      ✓ should receive published agent status updates
      ✓ should handle multiple agent status updates
    PubSub Integration
      ✓ should support multiple subscribers on same channel
      ✓ should isolate different channels (502 ms)
      ✓ should handle rapid successive publishes (2 ms)
    Subscription Error Handling
      ✓ should handle iterator errors gracefully (569 ms)
      ✓ should handle malformed publish data (19 ms)
    Subscription Lifecycle
      ✓ should create new iterator on each subscribe call (4 ms)
      ✓ should work after multiple subscribe/unsubscribe cycles (32 ms)

PASS src/tests/shared/memory/manager.test.ts
  MemoryManager
    connection
      ✓ should connect to both systems (5 ms)
      ✓ should close both connections (1 ms)
      ✓ should auto-connect if configured (53 ms)
    episodic memory operations
      ✓ should store episodic event (8 ms)
      ✓ should query episodic events (23 ms)
      ✓ should get episodic event by ID (1 ms)
      ✓ should delete episodic event
    semantic memory operations
      ✓ should store semantic record (21 ms)
      ✓ should query semantic memory (5 ms)
      ✓ should get semantic record by ID (2 ms)
      ✓ should delete semantic record (2 ms)
    combined operations
      ✓ should store request memory in both systems (1 ms)
      ✓ should find similar requests (24 ms)
      ✓ should get request context (5 ms)
      ✓ should store tool execution (3 ms)
      ✓ should store tool execution without request ID (1 ms)
      ✓ should store insight (24 ms)
      ✓ should store insight without request ID (17 ms)
    getStats
      ✓ should get statistics from both systems (184 ms)
      ✓ should handle stats error gracefully (3 ms)

  console.error
    [ExecutorAgent] Tool test attempt 2/3 failed: Execution failed

      353 |       } catch (error: any) {
      354 |         lastError = error;
    > 355 |         console.error(
          |                 ^
      356 |           `[ExecutorAgent] Tool ${toolName} attempt ${attempt}/${this.config.maxRetries} failed:`,
      357 |           error.message
      358 |         );

      at ExecutorAgent.executeWithRetry (src/agents/executor.ts:355:17)
      at ExecutorAgent.executeStep (src/agents/executor.ts:196:22)
          at async Promise.all (index 0)
      at ExecutorAgent.execute (src/agents/executor.ts:55:28)
      at Object.<anonymous> (src/tests/agents/executor.test.ts:520:23)

PASS src/tests/shared/validation/schemas.test.ts
  Validation Schemas
    PlanSchema
      ✓ should validate valid plan (1 ms)
      ✓ should require at least one step
      ✓ should validate plan with minimal data
      ✓ should allow optional depends_on (1 ms)
      ✓ should reject invalid step
    ToolResultSchema
      ✓ should validate successful tool result (1 ms)
      ✓ should validate failed tool result
      ✓ should allow optional retries in metadata
      ✓ should require metadata fields (1 ms)
    AnalysisSchema
      ✓ should validate valid analysis (1 ms)
      ✓ should require non-empty summary
      ✓ should validate insight types
      ✓ should reject invalid insight type
      ✓ should validate confidence range
      ✓ should validate anomaly severity
    FinalResponseSchema
      ✓ should validate valid final response (1 ms)
      ✓ should allow optional data and analysis
      ✓ should require metadata fields (1 ms)
    ShipmentSchema
      ✓ should validate valid shipment
      ✓ should validate shipment with optional fields
      ✓ should enforce status enum (1 ms)
    FacilitySchema
      ✓ should validate valid facility
      ✓ should validate facility with coordinates
      ✓ should enforce type enum (1 ms)
    ContaminantSchema
      ✓ should validate valid contaminant (1 ms)
      ✓ should enforce risk level enum (2 ms)
      ✓ should validate chemical level enums
    InspectionSchema
      ✓ should validate valid inspection (1 ms)
      ✓ should validate inspection with all optional fields
      ✓ should enforce status enum (1 ms)
      ✓ should enforce inspection type enum (1 ms)
    EpisodicEventSchema
      ✓ should validate valid episodic event (1 ms)
      ✓ should validate event with relationships (1 ms)
      ✓ should enforce event type enum
    SemanticRecordSchema
      ✓ should validate valid semantic record (1 ms)
      ✓ should allow additional metadata properties
    Helper validation functions
      ✓ should validate using helper functions (1 ms)
      ✓ should throw on invalid data (27 ms)

PASS src/tests/shared/tokens/counter.test.ts
  TokenCounter
    countTokens
      ✓ should count tokens for GPT-3.5 (143 ms)
      ✓ should count tokens for GPT-4 (59 ms)
      ✓ should handle empty string
      ✓ should handle long text (68 ms)
      ✓ should use default model if not specified (59 ms)
    countMessages
      ✓ should count tokens in message array (61 ms)
      ✓ should include message formatting overhead (114 ms)
      ✓ should handle empty message array (1 ms)
    fitsInWindow
      ✓ should check if text fits in context window (115 ms)
      ✓ should use model-specific limits (950 ms)
    getModelMaxTokens
      ✓ should return max tokens for GPT-3.5 (12 ms)
      ✓ should return max tokens for GPT-4 (3 ms)
      ✓ should return max tokens for GPT-4 Turbo (2 ms)
      ✓ should have default for unknown models (4 ms)
    estimateCost
      ✓ should estimate cost for GPT-3.5 (1 ms)
      ✓ should estimate cost for GPT-4 (2 ms)
      ✓ should have different costs for different models (1 ms)
    getRemainingTokens
      ✓ should calculate remaining tokens in context window (119 ms)

  console.error
    Error executing query: Error: Test error
        at Object.<anonymous> (/Users/yab/Projects/clear-ai-v2/src/tests/graphql/mutation-resolvers.test.ts:157:58)
        at Promise.finally.completed (/Users/yab/Projects/clear-ai-v2/node_modules/jest-circus/build/jestAdapterInit.js:1557:28)
        at new Promise (<anonymous>)
        at callAsyncCircusFn (/Users/yab/Projects/clear-ai-v2/node_modules/jest-circus/build/jestAdapterInit.js:1497:10)
        at _callCircusTest (/Users/yab/Projects/clear-ai-v2/node_modules/jest-circus/build/jestAdapterInit.js:1007:40)
        at processTicksAndRejections (node:internal/process/task_queues:105:5)
        at _runTest (/Users/yab/Projects/clear-ai-v2/node_modules/jest-circus/build/jestAdapterInit.js:947:3)
        at /Users/yab/Projects/clear-ai-v2/node_modules/jest-circus/build/jestAdapterInit.js:849:7
        at _runTestsForDescribeBlock (/Users/yab/Projects/clear-ai-v2/node_modules/jest-circus/build/jestAdapterInit.js:862:11)
        at _runTestsForDescribeBlock (/Users/yab/Projects/clear-ai-v2/node_modules/jest-circus/build/jestAdapterInit.js:857:11)
        at _runTestsForDescribeBlock (/Users/yab/Projects/clear-ai-v2/node_modules/jest-circus/build/jestAdapterInit.js:857:11)
        at run (/Users/yab/Projects/clear-ai-v2/node_modules/jest-circus/build/jestAdapterInit.js:761:3)
        at runAndTransformResultsToJestFormat (/Users/yab/Projects/clear-ai-v2/node_modules/jest-circus/build/jestAdapterInit.js:1918:21)
        at jestAdapter (/Users/yab/Projects/clear-ai-v2/node_modules/jest-circus/build/runner.js:101:19)
        at runTestInternal (/Users/yab/Projects/clear-ai-v2/node_modules/jest-runner/build/testWorker.js:275:16)
        at runTest (/Users/yab/Projects/clear-ai-v2/node_modules/jest-runner/build/testWorker.js:343:7)
        at Object.worker (/Users/yab/Projects/clear-ai-v2/node_modules/jest-runner/build/testWorker.js:497:12)

      259 |         metrics.failedRequests++;
      260 |
    > 261 |         console.error('Error executing query:', error);
          |                 ^
      262 |
      263 |         return {
      264 |           requestId: '',

      at Object.executeQuery (src/graphql/resolvers.ts:261:17)
      at Object.<anonymous> (src/tests/graphql/mutation-resolvers.test.ts:161:22)

  console.error
    Error executing query: Error: Orchestrator failure
        at Object.<anonymous> (/Users/yab/Projects/clear-ai-v2/src/tests/graphql/mutation-resolvers.test.ts:177:9)
        at Promise.finally.completed (/Users/yab/Projects/clear-ai-v2/node_modules/jest-circus/build/jestAdapterInit.js:1557:28)
        at new Promise (<anonymous>)
        at callAsyncCircusFn (/Users/yab/Projects/clear-ai-v2/node_modules/jest-circus/build/jestAdapterInit.js:1497:10)
        at _callCircusTest (/Users/yab/Projects/clear-ai-v2/node_modules/jest-circus/build/jestAdapterInit.js:1007:40)
        at processTicksAndRejections (node:internal/process/task_queues:105:5)
        at _runTest (/Users/yab/Projects/clear-ai-v2/node_modules/jest-circus/build/jestAdapterInit.js:947:3)
        at /Users/yab/Projects/clear-ai-v2/node_modules/jest-circus/build/jestAdapterInit.js:849:7
        at _runTestsForDescribeBlock (/Users/yab/Projects/clear-ai-v2/node_modules/jest-circus/build/jestAdapterInit.js:862:11)
        at _runTestsForDescribeBlock (/Users/yab/Projects/clear-ai-v2/node_modules/jest-circus/build/jestAdapterInit.js:857:11)
        at _runTestsForDescribeBlock (/Users/yab/Projects/clear-ai-v2/node_modules/jest-circus/build/jestAdapterInit.js:857:11)
        at run (/Users/yab/Projects/clear-ai-v2/node_modules/jest-circus/build/jestAdapterInit.js:761:3)
        at runAndTransformResultsToJestFormat (/Users/yab/Projects/clear-ai-v2/node_modules/jest-circus/build/jestAdapterInit.js:1918:21)
        at jestAdapter (/Users/yab/Projects/clear-ai-v2/node_modules/jest-circus/build/runner.js:101:19)
        at runTestInternal (/Users/yab/Projects/clear-ai-v2/node_modules/jest-runner/build/testWorker.js:275:16)
        at runTest (/Users/yab/Projects/clear-ai-v2/node_modules/jest-runner/build/testWorker.js:343:7)
        at Object.worker (/Users/yab/Projects/clear-ai-v2/node_modules/jest-runner/build/testWorker.js:497:12)

      259 |         metrics.failedRequests++;
      260 |
    > 261 |         console.error('Error executing query:', error);
          |                 ^
      262 |
      263 |         return {
      264 |           requestId: '',

      at Object.executeQuery (src/graphql/resolvers.ts:261:17)
      at Object.<anonymous> (src/tests/graphql/mutation-resolvers.test.ts:180:22)

  console.log
    Cancelling request: test-req-id

      at Object.cancelQuery (src/graphql/resolvers.ts:281:15)

  console.log
    [dotenv@17.2.3] injecting env (49) from .env -- tip: 👥 sync secrets across teammates & machines: https://dotenvx.com/ops

      at _log (node_modules/dotenv/lib/main.js:142:11)

  console.log
    Cancelling request: non-existent

      at Object.cancelQuery (src/graphql/resolvers.ts:281:15)

  console.log
    Cancelling request: uuid-format

      at Object.cancelQuery (src/graphql/resolvers.ts:281:15)

  console.log
    Cancelling request: 123

      at Object.cancelQuery (src/graphql/resolvers.ts:281:15)

  console.log
    Cancelling request: test-id-with-dashes

      at Object.cancelQuery (src/graphql/resolvers.ts:281:15)

PASS src/tests/graphql/mutation-resolvers.test.ts
  GraphQL Mutation Resolvers
    executeQuery
      ✓ should execute query through orchestrator (3 ms)
      ✓ should store request in history
      ✓ should publish progress updates (1 ms)
      ✓ should update metrics on success
      ✓ should update metrics on error (57 ms)
      ✓ should handle orchestrator errors gracefully (8 ms)
      ✓ should convert analysis to GraphQL format (1 ms)
      ✓ should handle null analysis
      ✓ should work without userId (1 ms)
      ✓ should include metadata in response
      ✓ should handle very long queries (1 ms)
      ✓ should handle special characters in query (1 ms)
    cancelQuery
      ✓ should return true for cancellation (1 ms)
      ✓ should handle non-existent request IDs (6 ms)
      ✓ should work with any request ID format (2 ms)
    Concurrent Mutations
      ✓ should handle multiple concurrent executeQuery calls (1 ms)
      ✓ should maintain separate request histories

  console.log
    [dotenv@17.2.3] injecting env (49) from .env -- tip: ⚙️  override existing env vars with { override: true }

      at _log (node_modules/dotenv/lib/main.js:142:11)

  console.log
    [dotenv@17.2.3] injecting env (49) from .env -- tip: ⚙️  write to custom object with { processEnv: myObject }

      at _log (node_modules/dotenv/lib/main.js:142:11)

  console.log
    [dotenv@17.2.3] injecting env (49) from .env -- tip: 🛠️  run anywhere with `dotenvx run -- yourcommand`

      at _log (node_modules/dotenv/lib/main.js:142:11)

PASS src/tests/shared/memory/neo4j.test.ts
  Neo4jMemory
    connection
      ✓ should connect to Neo4j (1 ms)
      ✓ should close connection
      ✓ should throw error if operation before connect (8 ms)
    storeEvent
      ✓ should store event without relationships
      ✓ should store event with relationships
    queryEvents
      ✓ should query events without filters
      ✓ should query events with type filter
      ✓ should query events with date range
      ✓ should query events with limit
    getEvent
      ✓ should get event by ID
      ✓ should return null for non-existent event (1 ms)
    deleteEvent
      ✓ should delete event
    error handling
      ✓ should throw MemoryError on store failure (55 ms)

  console.log
    ✓ Connected to MongoDB: mongodb://localhost:27017/wasteer-test

      at connectDB (src/api/db/connection.ts:25:13)

  console.log
    ✓ Connected to MongoDB: mongodb://localhost:27017/wasteer-test

      at connectDB (src/api/db/connection.ts:25:13)

  console.log
    ✓ Connected to MongoDB: mongodb://localhost:27017/wasteer-test

      at connectDB (src/api/db/connection.ts:25:13)

  console.error
    Error loading memory context: Error: Memory error
        at Object.<anonymous> (/Users/yab/Projects/clear-ai-v2/src/tests/graphql/query-resolvers.test.ts:137:50)
        at Promise.finally.completed (/Users/yab/Projects/clear-ai-v2/node_modules/jest-circus/build/jestAdapterInit.js:1557:28)
        at new Promise (<anonymous>)
        at callAsyncCircusFn (/Users/yab/Projects/clear-ai-v2/node_modules/jest-circus/build/jestAdapterInit.js:1497:10)
        at _callCircusTest (/Users/yab/Projects/clear-ai-v2/node_modules/jest-circus/build/jestAdapterInit.js:1007:40)
        at processTicksAndRejections (node:internal/process/task_queues:105:5)
        at _runTest (/Users/yab/Projects/clear-ai-v2/node_modules/jest-circus/build/jestAdapterInit.js:947:3)
        at /Users/yab/Projects/clear-ai-v2/node_modules/jest-circus/build/jestAdapterInit.js:849:7
        at _runTestsForDescribeBlock (/Users/yab/Projects/clear-ai-v2/node_modules/jest-circus/build/jestAdapterInit.js:862:11)
        at _runTestsForDescribeBlock (/Users/yab/Projects/clear-ai-v2/node_modules/jest-circus/build/jestAdapterInit.js:857:11)
        at _runTestsForDescribeBlock (/Users/yab/Projects/clear-ai-v2/node_modules/jest-circus/build/jestAdapterInit.js:857:11)
        at run (/Users/yab/Projects/clear-ai-v2/node_modules/jest-circus/build/jestAdapterInit.js:761:3)
        at runAndTransformResultsToJestFormat (/Users/yab/Projects/clear-ai-v2/node_modules/jest-circus/build/jestAdapterInit.js:1918:21)
        at jestAdapter (/Users/yab/Projects/clear-ai-v2/node_modules/jest-circus/build/runner.js:101:19)
        at runTestInternal (/Users/yab/Projects/clear-ai-v2/node_modules/jest-runner/build/testWorker.js:275:16)
        at runTest (/Users/yab/Projects/clear-ai-v2/node_modules/jest-runner/build/testWorker.js:343:7)
        at Object.worker (/Users/yab/Projects/clear-ai-v2/node_modules/jest-runner/build/testWorker.js:497:12)

      129 |         };
      130 |       } catch (error) {
    > 131 |         console.error('Error loading memory context:', error);
          |                 ^
      132 |         return {
      133 |           semantic: [],
      134 |           episodic: [],

      at Object.getMemoryContext (src/graphql/resolvers.ts:131:17)
      at Object.<anonymous> (src/tests/graphql/query-resolvers.test.ts:140:22)

  console.log
    ✓ Connected to MongoDB: mongodb://localhost:27017/wasteer-test

      at connectDB (src/api/db/connection.ts:25:13)

PASS src/tests/graphql/query-resolvers.test.ts
  GraphQL Query Resolvers
    getRequestHistory
      ✓ should return empty array when no requests exist (1 ms)
      ✓ should respect limit parameter
      ✓ should use default limit of 10
      ✓ should filter by userId when provided (2 ms)
      ✓ should return requests sorted by timestamp (newest first)
    getMemoryContext
      ✓ should query semantic and episodic memory (2 ms)
      ✓ should extract entities from query (1 ms)
      ✓ should handle memory errors gracefully (29 ms)
      ✓ should return empty arrays when memory returns null (1 ms)
    getMetrics
      ✓ should return system metrics (9 ms)
      ✓ should calculate uptime correctly
      ✓ should calculate average duration correctly
      ✓ should handle zero requests
    getRequest
      ✓ should return null for non-existent request
      ✓ should return request by ID when it exists
    Query Input Validation
      ✓ should handle invalid limit values gracefully
      ✓ should handle empty query string (1 ms)
      ✓ should handle very long query strings

PASS src/tests/shared/progress/tracker.test.ts
  ProgressTracker
    startTask
      ✓ should start tracking a new task (6 ms)
      ✓ should initialize with timestamp (1 ms)
    updateStep
      ✓ should update current step (2 ms)
      ✓ should track multiple step updates
      ✓ should throw error for invalid task (30 ms)
    complete
      ✓ should mark task as completed (2 ms)
      ✓ should record completion time (2 ms)
    fail
      ✓ should mark task as failed (1 ms)
    getProgress
      ✓ should return null for non-existent task (1 ms)
      ✓ should return current progress (1 ms)
    estimateTimeRemaining
      ✓ should estimate time based on progress (205 ms)
      ✓ should return 0 when task not started
      ✓ should return 0 when task completed
    getAllTasks
      ✓ should return all tracked tasks (1 ms)
      ✓ should return empty array when no tasks
    clearTask
      ✓ should remove completed task from tracking

  console.log
    [2025-10-12T14:22:29.753Z] GET /api/inspections

      at src/api/server.ts:26:11

  console.log
    [2025-10-12T14:22:29.754Z] GET /api/facilities

      at src/api/server.ts:26:11

  console.log
    [2025-10-12T14:22:29.766Z] GET /api/contaminants-detected

      at src/api/server.ts:26:11

PASS src/tests/tools/shipments.test.ts
  ShipmentsTool
    ✓ should have correct tool metadata (1 ms)
    ✓ should fetch all shipments with default limit (42 ms)
    ✓ should fetch shipments with date filter (13 ms)
    ✓ should filter shipments with contaminants (12 ms)
    ✓ should filter shipments by facility (11 ms)
    ✓ should filter shipments by status (6 ms)
    ✓ should handle custom limit parameter (6 ms)
    ✓ should handle API errors gracefully (73 ms)
    ✓ should handle network errors gracefully (21 ms)
    ✓ should handle multiple filters simultaneously (26 ms)

  console.log
    [2025-10-12T14:22:29.793Z] GET /api/shipments

      at src/api/server.ts:26:11

  console.error
    Failed to auto-connect memory manager: [MemoryError: Memory operation failed: connect] {
      code: 'MEMORY_ERROR',
      details: {
        operation: 'connect',
        errorMessage: 'Failed to connect memory systems: Memory operation failed: connect',
        error: 'Memory operation failed: connect'
      }
    }

      30 |   
      31 |   /**
    > 32 |    * @param config - Memory system configuration
         |                         ^
      33 |    * @param mockNeo4j - Optional mock Neo4j instance for testing
      34 |    * @param mockPinecone - Optional mock Pinecone instance for testing
      35 |    * @param embeddingService - Optional embedding service (created from config if not provided)

      at src/shared/memory/manager.ts:32:25

  console.log
    [OrchestratorAgent][0315c1e4-4936-430a-ab01-a08bd57e39e9] Processing query: test query

      at OrchestratorAgent.handleQuery (src/agents/orchestrator.ts:45:13)

  console.log
    [OrchestratorAgent][0315c1e4-4936-430a-ab01-a08bd57e39e9] Loaded context: { semantic: [], episodic: [], entities: [] }

      at OrchestratorAgent.handleQuery (src/agents/orchestrator.ts:52:17)

  console.log
    [OrchestratorAgent][0315c1e4-4936-430a-ab01-a08bd57e39e9] Planning...

      at OrchestratorAgent.handleQuery (src/agents/orchestrator.ts:56:15)

  console.log
    [OrchestratorAgent][0315c1e4-4936-430a-ab01-a08bd57e39e9] Plan generated: { steps: [] }

      at OrchestratorAgent.handleQuery (src/agents/orchestrator.ts:58:15)

  console.log
    [OrchestratorAgent][0315c1e4-4936-430a-ab01-a08bd57e39e9] Executing plan...

      at OrchestratorAgent.handleQuery (src/agents/orchestrator.ts:61:15)

  console.log
    [OrchestratorAgent][0315c1e4-4936-430a-ab01-a08bd57e39e9] Execution complete. Results: 0

      at OrchestratorAgent.handleQuery (src/agents/orchestrator.ts:63:15)

  console.log
    [OrchestratorAgent][0315c1e4-4936-430a-ab01-a08bd57e39e9] Analyzing results...

      at OrchestratorAgent.handleQuery (src/agents/orchestrator.ts:66:15)

  console.log
    [OrchestratorAgent][0315c1e4-4936-430a-ab01-a08bd57e39e9] Analysis complete

      at OrchestratorAgent.handleQuery (src/agents/orchestrator.ts:68:15)

  console.log
    [OrchestratorAgent][0315c1e4-4936-430a-ab01-a08bd57e39e9] Generating summary...

      at OrchestratorAgent.handleQuery (src/agents/orchestrator.ts:71:15)

  console.log
    [OrchestratorAgent] Stored request 0315c1e4-4936-430a-ab01-a08bd57e39e9 in memory

      at OrchestratorAgent.storeInMemory (src/agents/orchestrator.ts:188:15)

  console.log
    [OrchestratorAgent][0315c1e4-4936-430a-ab01-a08bd57e39e9] Complete in 9ms

      at OrchestratorAgent.handleQuery (src/agents/orchestrator.ts:98:15)

  console.log
    [2025-10-12T14:22:29.836Z] GET /api/facilities

      at src/api/server.ts:26:11

  console.log
    [2025-10-12T14:22:29.838Z] GET /api/inspections

      at src/api/server.ts:26:11

  console.log
    [2025-10-12T14:22:29.840Z] GET /api/shipments

      at src/api/server.ts:26:11

  console.log
    [OrchestratorAgent][9d6cb717-6a21-4b4d-b5bc-62d5f45a1e92] Processing query: test

      at OrchestratorAgent.handleQuery (src/agents/orchestrator.ts:45:13)

  console.log
    [2025-10-12T14:22:29.840Z] GET /api/contaminants-detected

      at src/api/server.ts:26:11

  console.log
    [OrchestratorAgent][9d6cb717-6a21-4b4d-b5bc-62d5f45a1e92] Loaded context: { semantic: [], episodic: [], entities: [] }

      at OrchestratorAgent.handleQuery (src/agents/orchestrator.ts:52:17)

  console.log
    [OrchestratorAgent][9d6cb717-6a21-4b4d-b5bc-62d5f45a1e92] Planning...

      at OrchestratorAgent.handleQuery (src/agents/orchestrator.ts:56:15)

  console.log
    [OrchestratorAgent][9d6cb717-6a21-4b4d-b5bc-62d5f45a1e92] Plan generated: { steps: [] }

      at OrchestratorAgent.handleQuery (src/agents/orchestrator.ts:58:15)

  console.log
    [OrchestratorAgent][9d6cb717-6a21-4b4d-b5bc-62d5f45a1e92] Executing plan...

      at OrchestratorAgent.handleQuery (src/agents/orchestrator.ts:61:15)

  console.log
    [OrchestratorAgent][9d6cb717-6a21-4b4d-b5bc-62d5f45a1e92] Execution complete. Results: 0

      at OrchestratorAgent.handleQuery (src/agents/orchestrator.ts:63:15)

  console.log
    [OrchestratorAgent][9d6cb717-6a21-4b4d-b5bc-62d5f45a1e92] Analyzing results...

      at OrchestratorAgent.handleQuery (src/agents/orchestrator.ts:66:15)

  console.log
    [OrchestratorAgent][9d6cb717-6a21-4b4d-b5bc-62d5f45a1e92] Analysis complete

      at OrchestratorAgent.handleQuery (src/agents/orchestrator.ts:68:15)

  console.log
    [OrchestratorAgent][9d6cb717-6a21-4b4d-b5bc-62d5f45a1e92] Generating summary...

      at OrchestratorAgent.handleQuery (src/agents/orchestrator.ts:71:15)

  console.log
    [OrchestratorAgent] Stored request 9d6cb717-6a21-4b4d-b5bc-62d5f45a1e92 in memory

      at OrchestratorAgent.storeInMemory (src/agents/orchestrator.ts:188:15)

  console.log
    [OrchestratorAgent][9d6cb717-6a21-4b4d-b5bc-62d5f45a1e92] Complete in 5ms

      at OrchestratorAgent.handleQuery (src/agents/orchestrator.ts:98:15)

  console.log
    [OrchestratorAgent][61547938-90c4-4bed-bf07-18e8e20dc250] Processing query: test

      at OrchestratorAgent.handleQuery (src/agents/orchestrator.ts:45:13)

  console.log
    [OrchestratorAgent][61547938-90c4-4bed-bf07-18e8e20dc250] Loaded context: { semantic: [], episodic: [], entities: [] }

      at OrchestratorAgent.handleQuery (src/agents/orchestrator.ts:52:17)

  console.log
    [OrchestratorAgent][61547938-90c4-4bed-bf07-18e8e20dc250] Planning...

      at OrchestratorAgent.handleQuery (src/agents/orchestrator.ts:56:15)

  console.log
    [OrchestratorAgent][61547938-90c4-4bed-bf07-18e8e20dc250] Plan generated: { steps: [] }

      at OrchestratorAgent.handleQuery (src/agents/orchestrator.ts:58:15)

  console.log
    [OrchestratorAgent][61547938-90c4-4bed-bf07-18e8e20dc250] Executing plan...

      at OrchestratorAgent.handleQuery (src/agents/orchestrator.ts:61:15)

  console.log
    [OrchestratorAgent][61547938-90c4-4bed-bf07-18e8e20dc250] Execution complete. Results: 0

      at OrchestratorAgent.handleQuery (src/agents/orchestrator.ts:63:15)

  console.log
    [OrchestratorAgent][61547938-90c4-4bed-bf07-18e8e20dc250] Analyzing results...

      at OrchestratorAgent.handleQuery (src/agents/orchestrator.ts:66:15)

  console.log
    [OrchestratorAgent][61547938-90c4-4bed-bf07-18e8e20dc250] Analysis complete

      at OrchestratorAgent.handleQuery (src/agents/orchestrator.ts:68:15)

  console.log
    [OrchestratorAgent][61547938-90c4-4bed-bf07-18e8e20dc250] Generating summary...

      at OrchestratorAgent.handleQuery (src/agents/orchestrator.ts:71:15)

  console.log
    [OrchestratorAgent] Stored request 61547938-90c4-4bed-bf07-18e8e20dc250 in memory

      at OrchestratorAgent.storeInMemory (src/agents/orchestrator.ts:188:15)

  console.log
    [OrchestratorAgent][61547938-90c4-4bed-bf07-18e8e20dc250] Complete in 4ms

      at OrchestratorAgent.handleQuery (src/agents/orchestrator.ts:98:15)

  console.log
    [OrchestratorAgent][027f7af6-2ac3-49d4-b31a-b980b0057aaf] Processing query: test query

      at OrchestratorAgent.handleQuery (src/agents/orchestrator.ts:45:13)

  console.log
    [OrchestratorAgent][027f7af6-2ac3-49d4-b31a-b980b0057aaf] Loaded context: { semantic: [], episodic: [], entities: [] }

      at OrchestratorAgent.handleQuery (src/agents/orchestrator.ts:52:17)

  console.log
    [OrchestratorAgent][027f7af6-2ac3-49d4-b31a-b980b0057aaf] Planning...

      at OrchestratorAgent.handleQuery (src/agents/orchestrator.ts:56:15)

  console.log
    [OrchestratorAgent][027f7af6-2ac3-49d4-b31a-b980b0057aaf] Plan generated: { steps: [] }

      at OrchestratorAgent.handleQuery (src/agents/orchestrator.ts:58:15)

  console.log
    [OrchestratorAgent][027f7af6-2ac3-49d4-b31a-b980b0057aaf] Executing plan...

      at OrchestratorAgent.handleQuery (src/agents/orchestrator.ts:61:15)

  console.log
    [OrchestratorAgent][027f7af6-2ac3-49d4-b31a-b980b0057aaf] Execution complete. Results: 0

      at OrchestratorAgent.handleQuery (src/agents/orchestrator.ts:63:15)

  console.log
    [OrchestratorAgent][027f7af6-2ac3-49d4-b31a-b980b0057aaf] Analyzing results...

      at OrchestratorAgent.handleQuery (src/agents/orchestrator.ts:66:15)

  console.log
    [OrchestratorAgent][027f7af6-2ac3-49d4-b31a-b980b0057aaf] Analysis complete

      at OrchestratorAgent.handleQuery (src/agents/orchestrator.ts:68:15)

  console.log
    [OrchestratorAgent][027f7af6-2ac3-49d4-b31a-b980b0057aaf] Generating summary...

      at OrchestratorAgent.handleQuery (src/agents/orchestrator.ts:71:15)

  console.log
    [OrchestratorAgent] Stored request 027f7af6-2ac3-49d4-b31a-b980b0057aaf in memory

      at OrchestratorAgent.storeInMemory (src/agents/orchestrator.ts:188:15)

  console.log
    [OrchestratorAgent][027f7af6-2ac3-49d4-b31a-b980b0057aaf] Complete in 2ms

      at OrchestratorAgent.handleQuery (src/agents/orchestrator.ts:98:15)

  console.log
    [dotenv@17.2.3] injecting env (49) from .env -- tip: 🔐 prevent committing .env to code: https://dotenvx.com/precommit

      at _log (node_modules/dotenv/lib/main.js:142:11)

  console.log
    [OrchestratorAgent][fc243003-0213-4cbd-95da-c669789e7c5a] Processing query: test

      at OrchestratorAgent.handleQuery (src/agents/orchestrator.ts:45:13)

  console.log
    [OrchestratorAgent][fc243003-0213-4cbd-95da-c669789e7c5a] Planning...

      at OrchestratorAgent.handleQuery (src/agents/orchestrator.ts:56:15)

  console.log
    [OrchestratorAgent][fc243003-0213-4cbd-95da-c669789e7c5a] Plan generated: { steps: [] }

      at OrchestratorAgent.handleQuery (src/agents/orchestrator.ts:58:15)

  console.log
    [OrchestratorAgent][fc243003-0213-4cbd-95da-c669789e7c5a] Executing plan...

      at OrchestratorAgent.handleQuery (src/agents/orchestrator.ts:61:15)

  console.log
    [OrchestratorAgent][fc243003-0213-4cbd-95da-c669789e7c5a] Execution complete. Results: 0

      at OrchestratorAgent.handleQuery (src/agents/orchestrator.ts:63:15)

  console.log
    [OrchestratorAgent][fc243003-0213-4cbd-95da-c669789e7c5a] Analyzing results...

      at OrchestratorAgent.handleQuery (src/agents/orchestrator.ts:66:15)

  console.log
    [OrchestratorAgent][fc243003-0213-4cbd-95da-c669789e7c5a] Analysis complete

      at OrchestratorAgent.handleQuery (src/agents/orchestrator.ts:68:15)

  console.log
    [OrchestratorAgent][fc243003-0213-4cbd-95da-c669789e7c5a] Generating summary...

      at OrchestratorAgent.handleQuery (src/agents/orchestrator.ts:71:15)

  console.log
    [OrchestratorAgent][fc243003-0213-4cbd-95da-c669789e7c5a] Complete in 9ms

      at OrchestratorAgent.handleQuery (src/agents/orchestrator.ts:98:15)

  console.log
    [OrchestratorAgent][32018915-02b3-42d3-8143-2b674d64db6a] Processing query: test

      at OrchestratorAgent.handleQuery (src/agents/orchestrator.ts:45:13)

  console.log
    [OrchestratorAgent][32018915-02b3-42d3-8143-2b674d64db6a] Loaded context: {
      semantic: [ { text: 'context', score: 0.9, metadata: {} } ],
      episodic: [],
      entities: []
    }

      at OrchestratorAgent.handleQuery (src/agents/orchestrator.ts:52:17)

  console.log
    [OrchestratorAgent][32018915-02b3-42d3-8143-2b674d64db6a] Planning...

      at OrchestratorAgent.handleQuery (src/agents/orchestrator.ts:56:15)

  console.log
    [OrchestratorAgent][32018915-02b3-42d3-8143-2b674d64db6a] Plan generated: { steps: [] }

      at OrchestratorAgent.handleQuery (src/agents/orchestrator.ts:58:15)

  console.log
    [OrchestratorAgent][32018915-02b3-42d3-8143-2b674d64db6a] Executing plan...

      at OrchestratorAgent.handleQuery (src/agents/orchestrator.ts:61:15)

  console.log
    [OrchestratorAgent][32018915-02b3-42d3-8143-2b674d64db6a] Execution complete. Results: 0

      at OrchestratorAgent.handleQuery (src/agents/orchestrator.ts:63:15)

  console.log
    [OrchestratorAgent][32018915-02b3-42d3-8143-2b674d64db6a] Analyzing results...

      at OrchestratorAgent.handleQuery (src/agents/orchestrator.ts:66:15)

  console.log
    [OrchestratorAgent][32018915-02b3-42d3-8143-2b674d64db6a] Analysis complete

      at OrchestratorAgent.handleQuery (src/agents/orchestrator.ts:68:15)

  console.log
    [OrchestratorAgent][32018915-02b3-42d3-8143-2b674d64db6a] Generating summary...

      at OrchestratorAgent.handleQuery (src/agents/orchestrator.ts:71:15)

  console.log
    [OrchestratorAgent] Stored request 32018915-02b3-42d3-8143-2b674d64db6a in memory

      at OrchestratorAgent.storeInMemory (src/agents/orchestrator.ts:188:15)

  console.log
    [OrchestratorAgent][32018915-02b3-42d3-8143-2b674d64db6a] Complete in 2ms

      at OrchestratorAgent.handleQuery (src/agents/orchestrator.ts:98:15)

  console.log
    [OrchestratorAgent][999d87a8-467f-4d10-9aad-a843ed3e0a42] Processing query: test query

      at OrchestratorAgent.handleQuery (src/agents/orchestrator.ts:45:13)

  console.log
    [OrchestratorAgent][999d87a8-467f-4d10-9aad-a843ed3e0a42] Loaded context: { semantic: [], episodic: [], entities: [] }

      at OrchestratorAgent.handleQuery (src/agents/orchestrator.ts:52:17)

  console.log
    [OrchestratorAgent][999d87a8-467f-4d10-9aad-a843ed3e0a42] Planning...

      at OrchestratorAgent.handleQuery (src/agents/orchestrator.ts:56:15)

  console.log
    [OrchestratorAgent][999d87a8-467f-4d10-9aad-a843ed3e0a42] Plan generated: { steps: [] }

      at OrchestratorAgent.handleQuery (src/agents/orchestrator.ts:58:15)

  console.log
    [OrchestratorAgent][999d87a8-467f-4d10-9aad-a843ed3e0a42] Executing plan...

      at OrchestratorAgent.handleQuery (src/agents/orchestrator.ts:61:15)

  console.log
    [OrchestratorAgent][999d87a8-467f-4d10-9aad-a843ed3e0a42] Execution complete. Results: 0

      at OrchestratorAgent.handleQuery (src/agents/orchestrator.ts:63:15)

  console.log
    [OrchestratorAgent][999d87a8-467f-4d10-9aad-a843ed3e0a42] Analyzing results...

      at OrchestratorAgent.handleQuery (src/agents/orchestrator.ts:66:15)

  console.log
    [OrchestratorAgent][999d87a8-467f-4d10-9aad-a843ed3e0a42] Analysis complete

      at OrchestratorAgent.handleQuery (src/agents/orchestrator.ts:68:15)

  console.log
    [OrchestratorAgent][999d87a8-467f-4d10-9aad-a843ed3e0a42] Generating summary...

      at OrchestratorAgent.handleQuery (src/agents/orchestrator.ts:71:15)

  console.log
    [OrchestratorAgent] Stored request 999d87a8-467f-4d10-9aad-a843ed3e0a42 in memory

      at OrchestratorAgent.storeInMemory (src/agents/orchestrator.ts:188:15)

  console.log
    [OrchestratorAgent][999d87a8-467f-4d10-9aad-a843ed3e0a42] Complete in 1ms

      at OrchestratorAgent.handleQuery (src/agents/orchestrator.ts:98:15)

  console.log
    [OrchestratorAgent][db046d55-d246-419a-88b3-87b5619b5595] Processing query: test query

      at OrchestratorAgent.handleQuery (src/agents/orchestrator.ts:45:13)

  console.log
    [OrchestratorAgent][db046d55-d246-419a-88b3-87b5619b5595] Loaded context: { semantic: [], episodic: [], entities: [] }

      at OrchestratorAgent.handleQuery (src/agents/orchestrator.ts:52:17)

  console.log
    [OrchestratorAgent][db046d55-d246-419a-88b3-87b5619b5595] Planning...

      at OrchestratorAgent.handleQuery (src/agents/orchestrator.ts:56:15)

  console.log
    [OrchestratorAgent][db046d55-d246-419a-88b3-87b5619b5595] Plan generated: { steps: [] }

      at OrchestratorAgent.handleQuery (src/agents/orchestrator.ts:58:15)

  console.log
    [OrchestratorAgent][db046d55-d246-419a-88b3-87b5619b5595] Executing plan...

      at OrchestratorAgent.handleQuery (src/agents/orchestrator.ts:61:15)

  console.log
    [OrchestratorAgent][db046d55-d246-419a-88b3-87b5619b5595] Execution complete. Results: 0

      at OrchestratorAgent.handleQuery (src/agents/orchestrator.ts:63:15)

  console.log
    [OrchestratorAgent][db046d55-d246-419a-88b3-87b5619b5595] Analyzing results...

      at OrchestratorAgent.handleQuery (src/agents/orchestrator.ts:66:15)

  console.log
    [OrchestratorAgent][db046d55-d246-419a-88b3-87b5619b5595] Analysis complete

      at OrchestratorAgent.handleQuery (src/agents/orchestrator.ts:68:15)

  console.log
    [OrchestratorAgent][db046d55-d246-419a-88b3-87b5619b5595] Generating summary...

      at OrchestratorAgent.handleQuery (src/agents/orchestrator.ts:71:15)

  console.log
    [2025-10-12T14:22:29.873Z] GET /api/contaminants-detected

      at src/api/server.ts:26:11

  console.log
    [2025-10-12T14:22:29.873Z] GET /api/shipments

      at src/api/server.ts:26:11

  console.log
    [2025-10-12T14:22:29.876Z] GET /api/inspections

      at src/api/server.ts:26:11

  console.log
    [2025-10-12T14:22:29.880Z] GET /api/facilities

      at src/api/server.ts:26:11

  console.error
    [OrchestratorAgent] Failed to store in memory: Error: Storage failed
        at Object.<anonymous> (/Users/yab/Projects/clear-ai-v2/src/tests/agents/orchestrator.test.ts:255:50)
        at Promise.finally.completed (/Users/yab/Projects/clear-ai-v2/node_modules/jest-circus/build/jestAdapterInit.js:1557:28)
        at new Promise (<anonymous>)
        at callAsyncCircusFn (/Users/yab/Projects/clear-ai-v2/node_modules/jest-circus/build/jestAdapterInit.js:1497:10)
        at _callCircusTest (/Users/yab/Projects/clear-ai-v2/node_modules/jest-circus/build/jestAdapterInit.js:1007:40)
        at processTicksAndRejections (node:internal/process/task_queues:105:5)
        at _runTest (/Users/yab/Projects/clear-ai-v2/node_modules/jest-circus/build/jestAdapterInit.js:947:3)
        at /Users/yab/Projects/clear-ai-v2/node_modules/jest-circus/build/jestAdapterInit.js:849:7
        at _runTestsForDescribeBlock (/Users/yab/Projects/clear-ai-v2/node_modules/jest-circus/build/jestAdapterInit.js:862:11)
        at _runTestsForDescribeBlock (/Users/yab/Projects/clear-ai-v2/node_modules/jest-circus/build/jestAdapterInit.js:857:11)
        at _runTestsForDescribeBlock (/Users/yab/Projects/clear-ai-v2/node_modules/jest-circus/build/jestAdapterInit.js:857:11)
        at run (/Users/yab/Projects/clear-ai-v2/node_modules/jest-circus/build/jestAdapterInit.js:761:3)
        at runAndTransformResultsToJestFormat (/Users/yab/Projects/clear-ai-v2/node_modules/jest-circus/build/jestAdapterInit.js:1918:21)
        at jestAdapter (/Users/yab/Projects/clear-ai-v2/node_modules/jest-circus/build/runner.js:101:19)
        at runTestInternal (/Users/yab/Projects/clear-ai-v2/node_modules/jest-runner/build/testWorker.js:275:16)
        at runTest (/Users/yab/Projects/clear-ai-v2/node_modules/jest-runner/build/testWorker.js:343:7)
        at Object.worker (/Users/yab/Projects/clear-ai-v2/node_modules/jest-runner/build/testWorker.js:497:12)

      188 |       console.log(`[OrchestratorAgent] Stored request ${data.requestId} in memory`);
      189 |     } catch (error) {
    > 190 |       console.error('[OrchestratorAgent] Failed to store in memory:', error);
          |               ^
      191 |       // Don't fail the request if memory storage fails
      192 |     }
      193 |   }

      at OrchestratorAgent.storeInMemory (src/agents/orchestrator.ts:190:15)
      at OrchestratorAgent.handleQuery (src/agents/orchestrator.ts:81:9)
      at Object.<anonymous> (src/tests/agents/orchestrator.test.ts:257:24)

  console.log
    [OrchestratorAgent][db046d55-d246-419a-88b3-87b5619b5595] Complete in 20ms

      at OrchestratorAgent.handleQuery (src/agents/orchestrator.ts:98:15)

  console.log
    [OrchestratorAgent][2f00347a-858c-4e9d-9c28-1dd1ee34198d] Processing query: test query

      at OrchestratorAgent.handleQuery (src/agents/orchestrator.ts:45:13)

  console.log
    [OrchestratorAgent][2f00347a-858c-4e9d-9c28-1dd1ee34198d] Loaded context: { semantic: [], episodic: [], entities: [] }

      at OrchestratorAgent.handleQuery (src/agents/orchestrator.ts:52:17)

  console.log
    [OrchestratorAgent][2f00347a-858c-4e9d-9c28-1dd1ee34198d] Planning...

      at OrchestratorAgent.handleQuery (src/agents/orchestrator.ts:56:15)

  console.error
    [OrchestratorAgent][2f00347a-858c-4e9d-9c28-1dd1ee34198d] Error: Error: Planning failed
        at Object.<anonymous> (/Users/yab/Projects/clear-ai-v2/src/tests/agents/orchestrator.test.ts:267:42)
        at Promise.finally.completed (/Users/yab/Projects/clear-ai-v2/node_modules/jest-circus/build/jestAdapterInit.js:1557:28)
        at new Promise (<anonymous>)
        at callAsyncCircusFn (/Users/yab/Projects/clear-ai-v2/node_modules/jest-circus/build/jestAdapterInit.js:1497:10)
        at _callCircusTest (/Users/yab/Projects/clear-ai-v2/node_modules/jest-circus/build/jestAdapterInit.js:1007:40)
        at processTicksAndRejections (node:internal/process/task_queues:105:5)
        at _runTest (/Users/yab/Projects/clear-ai-v2/node_modules/jest-circus/build/jestAdapterInit.js:947:3)
        at /Users/yab/Projects/clear-ai-v2/node_modules/jest-circus/build/jestAdapterInit.js:849:7
        at _runTestsForDescribeBlock (/Users/yab/Projects/clear-ai-v2/node_modules/jest-circus/build/jestAdapterInit.js:862:11)
        at _runTestsForDescribeBlock (/Users/yab/Projects/clear-ai-v2/node_modules/jest-circus/build/jestAdapterInit.js:857:11)
        at _runTestsForDescribeBlock (/Users/yab/Projects/clear-ai-v2/node_modules/jest-circus/build/jestAdapterInit.js:857:11)
        at run (/Users/yab/Projects/clear-ai-v2/node_modules/jest-circus/build/jestAdapterInit.js:761:3)
        at runAndTransformResultsToJestFormat (/Users/yab/Projects/clear-ai-v2/node_modules/jest-circus/build/jestAdapterInit.js:1918:21)
        at jestAdapter (/Users/yab/Projects/clear-ai-v2/node_modules/jest-circus/build/runner.js:101:19)
        at runTestInternal (/Users/yab/Projects/clear-ai-v2/node_modules/jest-runner/build/testWorker.js:275:16)
        at runTest (/Users/yab/Projects/clear-ai-v2/node_modules/jest-runner/build/testWorker.js:343:7)
        at Object.worker (/Users/yab/Projects/clear-ai-v2/node_modules/jest-runner/build/testWorker.js:497:12)

      101 |
      102 |     } catch (error: any) {
    > 103 |       console.error(`[OrchestratorAgent][${requestId}] Error:`, error);
          |               ^
      104 |
      105 |       // Store error in memory for learning
      106 |       if (this.config.enableMemory) {

      at OrchestratorAgent.handleQuery (src/agents/orchestrator.ts:103:15)
      at Object.<anonymous> (src/tests/agents/orchestrator.test.ts:269:24)

  console.log
    [OrchestratorAgent][bc3d376e-7384-4e24-ab6f-0550972fe4b4] Processing query: test

      at OrchestratorAgent.handleQuery (src/agents/orchestrator.ts:45:13)

  console.log
    [OrchestratorAgent][bc3d376e-7384-4e24-ab6f-0550972fe4b4] Loaded context: { semantic: [], episodic: [], entities: [] }

      at OrchestratorAgent.handleQuery (src/agents/orchestrator.ts:52:17)

  console.log
    [OrchestratorAgent][bc3d376e-7384-4e24-ab6f-0550972fe4b4] Planning...

      at OrchestratorAgent.handleQuery (src/agents/orchestrator.ts:56:15)

  console.log
    [OrchestratorAgent][bc3d376e-7384-4e24-ab6f-0550972fe4b4] Plan generated: { steps: [] }

      at OrchestratorAgent.handleQuery (src/agents/orchestrator.ts:58:15)

  console.log
    [OrchestratorAgent][bc3d376e-7384-4e24-ab6f-0550972fe4b4] Executing plan...

      at OrchestratorAgent.handleQuery (src/agents/orchestrator.ts:61:15)

  console.error
    [OrchestratorAgent][bc3d376e-7384-4e24-ab6f-0550972fe4b4] Error: Error: Execution failed
        at Object.<anonymous> (/Users/yab/Projects/clear-ai-v2/src/tests/agents/orchestrator.test.ts:277:46)
        at Promise.finally.completed (/Users/yab/Projects/clear-ai-v2/node_modules/jest-circus/build/jestAdapterInit.js:1557:28)
        at new Promise (<anonymous>)
        at callAsyncCircusFn (/Users/yab/Projects/clear-ai-v2/node_modules/jest-circus/build/jestAdapterInit.js:1497:10)
        at _callCircusTest (/Users/yab/Projects/clear-ai-v2/node_modules/jest-circus/build/jestAdapterInit.js:1007:40)
        at processTicksAndRejections (node:internal/process/task_queues:105:5)
        at _runTest (/Users/yab/Projects/clear-ai-v2/node_modules/jest-circus/build/jestAdapterInit.js:947:3)
        at /Users/yab/Projects/clear-ai-v2/node_modules/jest-circus/build/jestAdapterInit.js:849:7
        at _runTestsForDescribeBlock (/Users/yab/Projects/clear-ai-v2/node_modules/jest-circus/build/jestAdapterInit.js:862:11)
        at _runTestsForDescribeBlock (/Users/yab/Projects/clear-ai-v2/node_modules/jest-circus/build/jestAdapterInit.js:857:11)
        at _runTestsForDescribeBlock (/Users/yab/Projects/clear-ai-v2/node_modules/jest-circus/build/jestAdapterInit.js:857:11)
        at run (/Users/yab/Projects/clear-ai-v2/node_modules/jest-circus/build/jestAdapterInit.js:761:3)
        at runAndTransformResultsToJestFormat (/Users/yab/Projects/clear-ai-v2/node_modules/jest-circus/build/jestAdapterInit.js:1918:21)
        at jestAdapter (/Users/yab/Projects/clear-ai-v2/node_modules/jest-circus/build/runner.js:101:19)
        at runTestInternal (/Users/yab/Projects/clear-ai-v2/node_modules/jest-runner/build/testWorker.js:275:16)
        at runTest (/Users/yab/Projects/clear-ai-v2/node_modules/jest-runner/build/testWorker.js:343:7)
        at Object.worker (/Users/yab/Projects/clear-ai-v2/node_modules/jest-runner/build/testWorker.js:497:12)

      101 |
      102 |     } catch (error: any) {
    > 103 |       console.error(`[OrchestratorAgent][${requestId}] Error:`, error);
          |               ^
      104 |
      105 |       // Store error in memory for learning
      106 |       if (this.config.enableMemory) {

      at OrchestratorAgent.handleQuery (src/agents/orchestrator.ts:103:15)
      at Object.<anonymous> (src/tests/agents/orchestrator.test.ts:279:24)

  console.log
    [OrchestratorAgent][539323d5-d3b9-40fe-aa15-6a2f389cb95d] Processing query: test

      at OrchestratorAgent.handleQuery (src/agents/orchestrator.ts:45:13)

  console.log
    [OrchestratorAgent][539323d5-d3b9-40fe-aa15-6a2f389cb95d] Loaded context: { semantic: [], episodic: [], entities: [] }

      at OrchestratorAgent.handleQuery (src/agents/orchestrator.ts:52:17)

  console.log
    [OrchestratorAgent][539323d5-d3b9-40fe-aa15-6a2f389cb95d] Planning...

      at OrchestratorAgent.handleQuery (src/agents/orchestrator.ts:56:15)

  console.error
    [OrchestratorAgent][539323d5-d3b9-40fe-aa15-6a2f389cb95d] Error: Error: Planning failed
        at Object.<anonymous> (/Users/yab/Projects/clear-ai-v2/src/tests/agents/orchestrator.test.ts:286:42)
        at Promise.finally.completed (/Users/yab/Projects/clear-ai-v2/node_modules/jest-circus/build/jestAdapterInit.js:1557:28)
        at new Promise (<anonymous>)
        at callAsyncCircusFn (/Users/yab/Projects/clear-ai-v2/node_modules/jest-circus/build/jestAdapterInit.js:1497:10)
        at _callCircusTest (/Users/yab/Projects/clear-ai-v2/node_modules/jest-circus/build/jestAdapterInit.js:1007:40)
        at processTicksAndRejections (node:internal/process/task_queues:105:5)
        at _runTest (/Users/yab/Projects/clear-ai-v2/node_modules/jest-circus/build/jestAdapterInit.js:947:3)
        at /Users/yab/Projects/clear-ai-v2/node_modules/jest-circus/build/jestAdapterInit.js:849:7
        at _runTestsForDescribeBlock (/Users/yab/Projects/clear-ai-v2/node_modules/jest-circus/build/jestAdapterInit.js:862:11)
        at _runTestsForDescribeBlock (/Users/yab/Projects/clear-ai-v2/node_modules/jest-circus/build/jestAdapterInit.js:857:11)
        at _runTestsForDescribeBlock (/Users/yab/Projects/clear-ai-v2/node_modules/jest-circus/build/jestAdapterInit.js:857:11)
        at run (/Users/yab/Projects/clear-ai-v2/node_modules/jest-circus/build/jestAdapterInit.js:761:3)
        at runAndTransformResultsToJestFormat (/Users/yab/Projects/clear-ai-v2/node_modules/jest-circus/build/jestAdapterInit.js:1918:21)
        at jestAdapter (/Users/yab/Projects/clear-ai-v2/node_modules/jest-circus/build/runner.js:101:19)
        at runTestInternal (/Users/yab/Projects/clear-ai-v2/node_modules/jest-runner/build/testWorker.js:275:16)
        at runTest (/Users/yab/Projects/clear-ai-v2/node_modules/jest-runner/build/testWorker.js:343:7)
        at Object.worker (/Users/yab/Projects/clear-ai-v2/node_modules/jest-runner/build/testWorker.js:497:12)

      101 |
      102 |     } catch (error: any) {
    > 103 |       console.error(`[OrchestratorAgent][${requestId}] Error:`, error);
          |               ^
      104 |
      105 |       // Store error in memory for learning
      106 |       if (this.config.enableMemory) {

      at OrchestratorAgent.handleQuery (src/agents/orchestrator.ts:103:15)
      at Object.<anonymous> (src/tests/agents/orchestrator.test.ts:288:7)

  console.log
    [OrchestratorAgent][665dc5de-757e-4fce-946e-744e2545de2c] Processing query: test

      at OrchestratorAgent.handleQuery (src/agents/orchestrator.ts:45:13)

  console.error
    [OrchestratorAgent] Failed to load context: Error: Memory failed
        at Object.<anonymous> (/Users/yab/Projects/clear-ai-v2/src/tests/agents/orchestrator.test.ts:298:50)
        at Promise.finally.completed (/Users/yab/Projects/clear-ai-v2/node_modules/jest-circus/build/jestAdapterInit.js:1557:28)
        at new Promise (<anonymous>)
        at callAsyncCircusFn (/Users/yab/Projects/clear-ai-v2/node_modules/jest-circus/build/jestAdapterInit.js:1497:10)
        at _callCircusTest (/Users/yab/Projects/clear-ai-v2/node_modules/jest-circus/build/jestAdapterInit.js:1007:40)
        at processTicksAndRejections (node:internal/process/task_queues:105:5)
        at _runTest (/Users/yab/Projects/clear-ai-v2/node_modules/jest-circus/build/jestAdapterInit.js:947:3)
        at /Users/yab/Projects/clear-ai-v2/node_modules/jest-circus/build/jestAdapterInit.js:849:7
        at _runTestsForDescribeBlock (/Users/yab/Projects/clear-ai-v2/node_modules/jest-circus/build/jestAdapterInit.js:862:11)
        at _runTestsForDescribeBlock (/Users/yab/Projects/clear-ai-v2/node_modules/jest-circus/build/jestAdapterInit.js:857:11)
        at _runTestsForDescribeBlock (/Users/yab/Projects/clear-ai-v2/node_modules/jest-circus/build/jestAdapterInit.js:857:11)
        at run (/Users/yab/Projects/clear-ai-v2/node_modules/jest-circus/build/jestAdapterInit.js:761:3)
        at runAndTransformResultsToJestFormat (/Users/yab/Projects/clear-ai-v2/node_modules/jest-circus/build/jestAdapterInit.js:1918:21)
        at jestAdapter (/Users/yab/Projects/clear-ai-v2/node_modules/jest-circus/build/runner.js:101:19)
        at runTestInternal (/Users/yab/Projects/clear-ai-v2/node_modules/jest-runner/build/testWorker.js:275:16)
        at runTest (/Users/yab/Projects/clear-ai-v2/node_modules/jest-runner/build/testWorker.js:343:7)
        at Object.worker (/Users/yab/Projects/clear-ai-v2/node_modules/jest-runner/build/testWorker.js:497:12)

      156 |       };
      157 |     } catch (error) {
    > 158 |       console.error('[OrchestratorAgent] Failed to load context:', error);
          |               ^
      159 |       return {};
      160 |     }
      161 |   }

      at OrchestratorAgent.loadContext (src/agents/orchestrator.ts:158:15)
      at OrchestratorAgent.handleQuery (src/agents/orchestrator.ts:51:19)
      at Object.<anonymous> (src/tests/agents/orchestrator.test.ts:315:24)

  console.log
    [OrchestratorAgent][665dc5de-757e-4fce-946e-744e2545de2c] Loaded context: {}

      at OrchestratorAgent.handleQuery (src/agents/orchestrator.ts:52:17)

  console.log
    [OrchestratorAgent][665dc5de-757e-4fce-946e-744e2545de2c] Planning...

      at OrchestratorAgent.handleQuery (src/agents/orchestrator.ts:56:15)

  console.log
    [OrchestratorAgent][665dc5de-757e-4fce-946e-744e2545de2c] Plan generated: { steps: [] }

      at OrchestratorAgent.handleQuery (src/agents/orchestrator.ts:58:15)

  console.log
    [OrchestratorAgent][665dc5de-757e-4fce-946e-744e2545de2c] Executing plan...

      at OrchestratorAgent.handleQuery (src/agents/orchestrator.ts:61:15)

  console.log
    [OrchestratorAgent][665dc5de-757e-4fce-946e-744e2545de2c] Execution complete. Results: 0

      at OrchestratorAgent.handleQuery (src/agents/orchestrator.ts:63:15)

PASS src/tests/shared/config/loader.test.ts
  Configuration Loader
    loadConfig
      ✓ should load configuration with defaults (3 ms)
      ✓ should load configuration from environment variables (1 ms)
      ✓ should load agent configurations (1 ms)
      ✓ should load memory configuration
      ✓ should load feature flags
    validateConfig
      ✓ should pass validation with valid config (1 ms)
      ✓ should fail validation without API URL (10 ms)
      ✓ should fail validation without Neo4j password when memory enabled
      ✓ should fail validation without Pinecone config when memory enabled (1 ms)
      ✓ should not require memory config when memory disabled
    loadAndValidateConfig
      ✓ should load and validate in production (12 ms)
      ✓ should skip validation in test environment (1 ms)
    getConfigValue
      ✓ should retrieve nested configuration value (1 ms)
      ✓ should retrieve deep nested value (1 ms)
      ✓ should return default value for missing path (1 ms)
      ✓ should throw for missing path without default (1 ms)
    LLM configuration
      ✓ should throw if no LLM providers configured (1 ms)
      ✓ should configure primary and fallbacks (1 ms)

  console.log
    [OrchestratorAgent][665dc5de-757e-4fce-946e-744e2545de2c] Analyzing results...

      at OrchestratorAgent.handleQuery (src/agents/orchestrator.ts:66:15)

  console.log
    [OrchestratorAgent][665dc5de-757e-4fce-946e-744e2545de2c] Analysis complete

      at OrchestratorAgent.handleQuery (src/agents/orchestrator.ts:68:15)

  console.log
    [OrchestratorAgent][665dc5de-757e-4fce-946e-744e2545de2c] Generating summary...

      at OrchestratorAgent.handleQuery (src/agents/orchestrator.ts:71:15)

  console.log
    [OrchestratorAgent] Stored request 665dc5de-757e-4fce-946e-744e2545de2c in memory

      at OrchestratorAgent.storeInMemory (src/agents/orchestrator.ts:188:15)

  console.log
    [OrchestratorAgent][665dc5de-757e-4fce-946e-744e2545de2c] Complete in 3ms

      at OrchestratorAgent.handleQuery (src/agents/orchestrator.ts:98:15)

PASS src/tests/agents/orchestrator.test.ts
  OrchestratorAgent
    End-to-End Query Processing
      ✓ should process query through all agents (12 ms)
      ✓ should include request_id in metadata (5 ms)
      ✓ should track execution duration (5 ms)
    Context Loading
      ✓ should load context from memory when enabled (2 ms)
      ✓ should not load context when disabled (10 ms)
      ✓ should pass context to planner (3 ms)
    Memory Storage
      ✓ should store results in memory when enabled (1 ms)
      ✓ should not fail if memory storage fails (21 ms)
    Error Handling
      ✓ should handle planning errors gracefully (1 ms)
      ✓ should handle execution errors (2 ms)
      ✓ should store errors in memory (1 ms)
      ✓ should continue on memory query failure (3 ms)
    Configuration
      ✓ should use custom configuration

  console.log
    [AnalyzerAgent] Analyzing 0 tool results

      at AnalyzerAgent.analyze (src/agents/analyzer.ts:33:13)

  console.log
    [AnalyzerAgent] Analyzing 1 tool results

      at AnalyzerAgent.analyze (src/agents/analyzer.ts:33:13)

  console.log
    [AnalyzerAgent] Analyzing 1 tool results

      at AnalyzerAgent.analyze (src/agents/analyzer.ts:33:13)

  console.log
    [AnalyzerAgent] Generating insights...

      at AnalyzerAgent.generateInsights (src/agents/analyzer.ts:85:13)

  console.log
    [2025-10-12T14:22:29.903Z] GET /api/facilities

      at src/api/server.ts:26:11

  console.log
    [2025-10-12T14:22:29.903Z] GET /api/contaminants-detected

      at src/api/server.ts:26:11

  console.log
    [2025-10-12T14:22:29.903Z] GET /api/shipments

      at src/api/server.ts:26:11

  console.log
    [AnalyzerAgent] Extracting entities...

      at AnalyzerAgent.extractEntities (src/agents/analyzer.ts:311:13)

  console.log
    [2025-10-12T14:22:29.905Z] GET /api/inspections

      at src/api/server.ts:26:11

  console.log
    [AnalyzerAgent] Detecting anomalies...

      at AnalyzerAgent.detectAnomalies (src/agents/analyzer.ts:373:13)

  console.log
    [AnalyzerAgent] Analyzing 1 tool results

      at AnalyzerAgent.analyze (src/agents/analyzer.ts:33:13)

  console.log
    [AnalyzerAgent] Generating insights...

      at AnalyzerAgent.generateInsights (src/agents/analyzer.ts:85:13)

  console.log
    [AnalyzerAgent] Extracting entities...

      at AnalyzerAgent.extractEntities (src/agents/analyzer.ts:311:13)

  console.log
    [AnalyzerAgent] Detecting anomalies...

      at AnalyzerAgent.detectAnomalies (src/agents/analyzer.ts:373:13)

  console.log
    [AnalyzerAgent] Analyzing 1 tool results

      at AnalyzerAgent.analyze (src/agents/analyzer.ts:33:13)

  console.log
    [AnalyzerAgent] Generating insights...

      at AnalyzerAgent.generateInsights (src/agents/analyzer.ts:85:13)

  console.log
    [AnalyzerAgent] Extracting entities...

      at AnalyzerAgent.extractEntities (src/agents/analyzer.ts:311:13)

  console.log
    [2025-10-12T14:22:29.926Z] GET /api/shipments/S1

      at src/api/server.ts:26:11

  console.log
    [2025-10-12T14:22:29.925Z] GET /api/contaminants-detected

      at src/api/server.ts:26:11

  console.log
    [AnalyzerAgent] Detecting anomalies...

      at AnalyzerAgent.detectAnomalies (src/agents/analyzer.ts:373:13)

  console.log
    [AnalyzerAgent] Analyzing 1 tool results

      at AnalyzerAgent.analyze (src/agents/analyzer.ts:33:13)

  console.log
    [AnalyzerAgent] Generating insights...

      at AnalyzerAgent.generateInsights (src/agents/analyzer.ts:85:13)

  console.log
    [AnalyzerAgent] Extracting entities...

      at AnalyzerAgent.extractEntities (src/agents/analyzer.ts:311:13)

  console.log
    [AnalyzerAgent] Detecting anomalies...

      at AnalyzerAgent.detectAnomalies (src/agents/analyzer.ts:373:13)

  console.log
    [AnalyzerAgent] Analyzing 1 tool results

      at AnalyzerAgent.analyze (src/agents/analyzer.ts:33:13)

  console.log
    [AnalyzerAgent] Generating insights...

      at AnalyzerAgent.generateInsights (src/agents/analyzer.ts:85:13)

  console.log
    [AnalyzerAgent] Extracting entities...

      at AnalyzerAgent.extractEntities (src/agents/analyzer.ts:311:13)

  console.log
    [AnalyzerAgent] Detecting anomalies...

      at AnalyzerAgent.detectAnomalies (src/agents/analyzer.ts:373:13)

  console.log
    [2025-10-12T14:22:29.929Z] GET /api/facilities

      at src/api/server.ts:26:11

  console.log
    [2025-10-12T14:22:29.929Z] GET /api/inspections

      at src/api/server.ts:26:11

  console.log
    [AnalyzerAgent] Analyzing 1 tool results

      at AnalyzerAgent.analyze (src/agents/analyzer.ts:33:13)

  console.log
    [AnalyzerAgent] Generating insights...

      at AnalyzerAgent.generateInsights (src/agents/analyzer.ts:85:13)

  console.log
    [AnalyzerAgent] Extracting entities...

      at AnalyzerAgent.extractEntities (src/agents/analyzer.ts:311:13)

  console.log
    [AnalyzerAgent] Detecting anomalies...

      at AnalyzerAgent.detectAnomalies (src/agents/analyzer.ts:373:13)

  console.log
    [AnalyzerAgent] Analyzing 1 tool results

      at AnalyzerAgent.analyze (src/agents/analyzer.ts:33:13)

  console.log
    [AnalyzerAgent] Generating insights...

      at AnalyzerAgent.generateInsights (src/agents/analyzer.ts:85:13)

  console.log
    [AnalyzerAgent] Extracting entities...

      at AnalyzerAgent.extractEntities (src/agents/analyzer.ts:311:13)

  console.log
    [AnalyzerAgent] Detecting anomalies...

      at AnalyzerAgent.detectAnomalies (src/agents/analyzer.ts:373:13)

PASS src/tests/shared/utils/formatting.test.ts
  Formatting Utilities
    formatNumber
      ✓ should format numbers with commas (43 ms)
      ✓ should handle small numbers
      ✓ should handle decimals (1 ms)
    formatPercentage
      ✓ should format percentages with default decimals
      ✓ should format percentages with custom decimals
      ✓ should handle small percentages
    formatDuration
      ✓ should format milliseconds
      ✓ should format seconds
      ✓ should format minutes (1 ms)
      ✓ should format hours
    truncate
      ✓ should truncate long strings
      ✓ should not truncate short strings
      ✓ should handle exact length
    capitalize
      ✓ should capitalize first letter
      ✓ should handle already capitalized
      ✓ should handle single character (2 ms)
      ✓ should handle empty string
    toTitleCase
      ✓ should convert to title case
      ✓ should handle single word
      ✓ should handle already title case
    formatBytes
      ✓ should format bytes (13 ms)
      ✓ should format kilobytes
      ✓ should format megabytes
      ✓ should format gigabytes
      ✓ should handle decimals (1 ms)
    prettyJSON
      ✓ should format JSON with indentation
      ✓ should handle nested objects (1 ms)

  console.log
    [AnalyzerAgent] Analyzing 1 tool results

      at AnalyzerAgent.analyze (src/agents/analyzer.ts:33:13)

  console.log
    [AnalyzerAgent] Generating insights...

      at AnalyzerAgent.generateInsights (src/agents/analyzer.ts:85:13)

  console.log
    [AnalyzerAgent] Extracting entities...

      at AnalyzerAgent.extractEntities (src/agents/analyzer.ts:311:13)

  console.log
    [AnalyzerAgent] Detecting anomalies...

      at AnalyzerAgent.detectAnomalies (src/agents/analyzer.ts:373:13)

  console.log
    [AnalyzerAgent] Analyzing 1 tool results

      at AnalyzerAgent.analyze (src/agents/analyzer.ts:33:13)

  console.log
    [AnalyzerAgent] Generating insights...

      at AnalyzerAgent.generateInsights (src/agents/analyzer.ts:85:13)

  console.log
    [AnalyzerAgent] Extracting entities...

      at AnalyzerAgent.extractEntities (src/agents/analyzer.ts:311:13)

  console.log
    [AnalyzerAgent] Detecting anomalies...

      at AnalyzerAgent.detectAnomalies (src/agents/analyzer.ts:373:13)

  console.log
    [AnalyzerAgent] Analyzing 2 tool results

      at AnalyzerAgent.analyze (src/agents/analyzer.ts:33:13)

  console.log
    [AnalyzerAgent] Generating insights...

      at AnalyzerAgent.generateInsights (src/agents/analyzer.ts:85:13)

  console.log
    [AnalyzerAgent] Extracting entities...

      at AnalyzerAgent.extractEntities (src/agents/analyzer.ts:311:13)

  console.log
    [AnalyzerAgent] Detecting anomalies...

      at AnalyzerAgent.detectAnomalies (src/agents/analyzer.ts:373:13)

  console.log
    [AnalyzerAgent] Analyzing 1 tool results

      at AnalyzerAgent.analyze (src/agents/analyzer.ts:33:13)

  console.log
    [AnalyzerAgent] Generating insights...

      at AnalyzerAgent.generateInsights (src/agents/analyzer.ts:85:13)

  console.log
    [AnalyzerAgent] Extracting entities...

      at AnalyzerAgent.extractEntities (src/agents/analyzer.ts:311:13)

  console.log
    [AnalyzerAgent] Detecting anomalies...

      at AnalyzerAgent.detectAnomalies (src/agents/analyzer.ts:373:13)

  console.log
    [AnalyzerAgent] Analyzing 1 tool results

      at AnalyzerAgent.analyze (src/agents/analyzer.ts:33:13)

  console.log
    [AnalyzerAgent] Generating insights...

      at AnalyzerAgent.generateInsights (src/agents/analyzer.ts:85:13)

  console.log
    [AnalyzerAgent] Extracting entities...

      at AnalyzerAgent.extractEntities (src/agents/analyzer.ts:311:13)

  console.log
    [AnalyzerAgent] Detecting anomalies...

      at AnalyzerAgent.detectAnomalies (src/agents/analyzer.ts:373:13)

  console.log
    [AnalyzerAgent] Analyzing 1 tool results

      at AnalyzerAgent.analyze (src/agents/analyzer.ts:33:13)

  console.log
    [2025-10-12T14:22:29.947Z] GET /api/shipments/NONEXISTENT

      at src/api/server.ts:26:11

  console.log
    [AnalyzerAgent] Generating insights...

      at AnalyzerAgent.generateInsights (src/agents/analyzer.ts:85:13)

  console.log
    [AnalyzerAgent] Extracting entities...

      at AnalyzerAgent.extractEntities (src/agents/analyzer.ts:311:13)

  console.log
    [AnalyzerAgent] Detecting anomalies...

      at AnalyzerAgent.detectAnomalies (src/agents/analyzer.ts:373:13)

  console.log
    [AnalyzerAgent] Analyzing 1 tool results

      at AnalyzerAgent.analyze (src/agents/analyzer.ts:33:13)

  console.log
    [AnalyzerAgent] Generating insights...

      at AnalyzerAgent.generateInsights (src/agents/analyzer.ts:85:13)

  console.log
    [AnalyzerAgent] Extracting entities...

      at AnalyzerAgent.extractEntities (src/agents/analyzer.ts:311:13)

  console.log
    [AnalyzerAgent] Detecting anomalies...

      at AnalyzerAgent.detectAnomalies (src/agents/analyzer.ts:373:13)

  console.log
    [AnalyzerAgent] Analyzing 1 tool results

      at AnalyzerAgent.analyze (src/agents/analyzer.ts:33:13)

  console.log
    [AnalyzerAgent] Generating insights...

      at AnalyzerAgent.generateInsights (src/agents/analyzer.ts:85:13)

  console.log
    [AnalyzerAgent] Extracting entities...

      at AnalyzerAgent.extractEntities (src/agents/analyzer.ts:311:13)

  console.log
    [AnalyzerAgent] Detecting anomalies...

      at AnalyzerAgent.detectAnomalies (src/agents/analyzer.ts:373:13)

  console.log
    [AnalyzerAgent] Analyzing 1 tool results

      at AnalyzerAgent.analyze (src/agents/analyzer.ts:33:13)

  console.log
    [AnalyzerAgent] Generating insights...

      at AnalyzerAgent.generateInsights (src/agents/analyzer.ts:85:13)

  console.log
    [AnalyzerAgent] Extracting entities...

      at AnalyzerAgent.extractEntities (src/agents/analyzer.ts:311:13)

  console.log
    [AnalyzerAgent] Detecting anomalies...

      at AnalyzerAgent.detectAnomalies (src/agents/analyzer.ts:373:13)

PASS src/tests/agents/analyzer.test.ts
  AnalyzerAgent
    Empty Results
      ✓ should handle empty results array (9 ms)
      ✓ should handle all failed results (1 ms)
    Shipment Analysis
      ✓ should detect high contamination rate (10 ms)
      ✓ should detect high rejection rate (7 ms)
      ✓ should not generate insights for low contamination (7 ms)
    Contaminant Analysis
      ✓ should detect high-risk contaminants (2 ms)
      ✓ should identify most common contaminant type (2 ms)
    Inspection Analysis
      ✓ should calculate inspection acceptance rate (5 ms)
    Facility Analysis
      ✓ should detect over-utilized facilities (1 ms)
    Entity Extraction
      ✓ should extract entities from shipments (2 ms)
      ✓ should extract relationships from entities (4 ms)
      ✓ should deduplicate entities (1 ms)
    Anomaly Detection
      ✓ should detect critical contaminants as anomalies (1 ms)
      ✓ should detect statistical outliers in contamination levels (2 ms)
      ✓ should detect rejected shipments without contaminants (5 ms)
    Configuration
      ✓ should use custom anomaly threshold (2 ms)
      ✓ should filter insights by minimum confidence (2 ms)
    Metadata
      ✓ should include analysis metadata (2 ms)

PASS src/tests/tools/facilities.test.ts
  FacilitiesTool
    ✓ should have correct tool metadata (1 ms)
    ✓ should fetch all facilities (45 ms)
    ✓ should filter facilities by location (15 ms)
    ✓ should filter facilities by type (20 ms)
    ✓ should filter facilities by minimum capacity (12 ms)
    ✓ should fetch specific facilities by IDs (13 ms)
    ✓ should handle API errors gracefully (63 ms)
    ✓ should handle network errors gracefully (29 ms)
    ✓ should handle multiple filters simultaneously (22 ms)

  console.log
    [2025-10-12T14:22:29.974Z] POST /api/shipments

      at src/api/server.ts:26:11

  console.log
    [2025-10-12T14:22:29.974Z] GET /api/inspections/I1

      at src/api/server.ts:26:11

  console.log
    [2025-10-12T14:22:29.980Z] GET /api/facilities/F1

      at src/api/server.ts:26:11

  console.log
    [2025-10-12T14:22:29.984Z] POST /api/shipments

      at src/api/server.ts:26:11

  console.log
    [2025-10-12T14:22:29.980Z] GET /api/contaminants-detected/C1

      at src/api/server.ts:26:11

  console.log
    [2025-10-12T14:22:29.991Z] POST /api/shipments

      at src/api/server.ts:26:11

  console.log
    [2025-10-12T14:22:30.009Z] POST /api/shipments

      at src/api/server.ts:26:11

  console.log
    [2025-10-12T14:22:30.017Z] PUT /api/shipments/S1

      at src/api/server.ts:26:11

  console.log
    [2025-10-12T14:22:30.018Z] GET /api/facilities/NONEXISTENT

      at src/api/server.ts:26:11

  console.log
    [2025-10-12T14:22:30.023Z] GET /api/inspections/NONEXISTENT

      at src/api/server.ts:26:11

  console.log
    [2025-10-12T14:22:30.021Z] GET /api/contaminants-detected/NONEXISTENT

      at src/api/server.ts:26:11

  console.log
    [2025-10-12T14:22:30.049Z] POST /api/inspections

      at src/api/server.ts:26:11

PASS src/tests/mcp/server.test.ts
  MCPServer
    ✓ should create a server instance
    ✓ should register a tool (1 ms)
    ✓ should register multiple tools
    ✓ should retrieve registered tool by name
    ✓ should return undefined for non-existent tool
    ✓ should handle tool replacement

  console.log
    [2025-10-12T14:22:30.053Z] POST /api/contaminants-detected

      at src/api/server.ts:26:11

  console.log
    [2025-10-12T14:22:30.052Z] POST /api/facilities

      at src/api/server.ts:26:11

PASS src/tests/shared/utils/circuit-breaker.test.ts
  CircuitBreaker
    initialization
      ✓ should start in CLOSED state (3 ms)
      ✓ should accept custom options
    circuit opening
      ✓ should open after reaching failure threshold (1 ms)
      ✓ should reject requests when OPEN (10 ms)
      ✓ should call onOpen callback
    circuit closing
      ✓ should reset failure count when transitioning to CLOSED (2 ms)
    half-open state
      ✓ should transition to HALF_OPEN after timeout
      ✓ should close after successful request in HALF_OPEN (1 ms)
      ✓ should reopen on failure in HALF_OPEN
      ✓ should call onHalfOpen callback
    manual control
      ✓ should allow manual reset (1 ms)
      ✓ should allow manual open
    time tracking
      ✓ should track time until reset
      ✓ should return 0 time until reset when closed
    success counter
      ✓ should track success count in HALF_OPEN
    edge cases
      ✓ should handle rapid successive failures (1 ms)
      ✓ should handle operation that throws non-Error
      ✓ should handle async operations correctly (22 ms)

PASS src/tests/shared/utils/logger.test.ts
  Logger
    initialization
      ✓ should create logger with default options (1 ms)
      ✓ should create logger with custom level
      ✓ should create logger with context
    log levels
      ✓ should log debug messages
      ✓ should log info messages
      ✓ should log warn messages (1 ms)
      ✓ should log error messages
      ✓ should include error object in error logs (4 ms)
    log level filtering
      ✓ should not log below minimum level
      ✓ should log all levels with DEBUG
      ✓ should allow changing log level (1 ms)
    output formats
      ✓ should output JSON format
      ✓ should output pretty format
    context
      ✓ should include global context in all logs
      ✓ should merge local context with global
      ✓ should allow creating child logger (1 ms)
    timestamp
      ✓ should include timestamp by default
      ✓ should allow disabling timestamp (1 ms)
    global logger
      ✓ should initialize global logger
      ✓ should auto-initialize global logger if not set
    error logging
      ✓ should handle Error objects (1 ms)
      ✓ should handle non-Error objects
      ✓ should handle error without error object

PASS src/tests/shared/memory/pinecone.test.ts
  PineconeMemory
    connection
      ✓ should connect to Pinecone (1 ms)
      ✓ should close connection (1 ms)
      ✓ should throw error with invalid embedding service (8 ms)
      ✓ should throw error if operation before connect (3 ms)
    store
      ✓ should store semantic record with embedding (1 ms)
      ✓ should use provided ID (1 ms)
      ✓ should generate ID if not provided
    search
      ✓ should search for similar records (1 ms)
      ✓ should use default top_k
      ✓ should apply filter (1 ms)
    get
      ✓ should get record by ID (7 ms)
      ✓ should return null for non-existent record
    delete
      ✓ should delete record by ID
      ✓ should delete multiple records (1 ms)
    getStats
      ✓ should get index statistics
    error handling
      ✓ should handle missing records gracefully

  console.log
    [2025-10-12T14:22:30.062Z] PUT /api/shipments/NONEXISTENT

      at src/api/server.ts:26:11

PASS src/tests/shared/utils/template.test.ts
  Template Resolver
    resolveTemplateParams
      ✓ should resolve basic template (1 ms)
      ✓ should resolve wildcard mapping
      ✓ should resolve array index (1 ms)
      ✓ should resolve nested property
      ✓ should handle multiple templates in same params
      ✓ should pass through non-template values (4 ms)
      ✓ should handle nested objects
      ✓ should handle arrays
      ✓ should throw error for missing step (12 ms)
      ✓ should throw error for failed step
      ✓ should throw error for undefined property
      ✓ should throw error for wildcard on non-array (1 ms)
      ✓ should handle empty array result from wildcard filter
    hasTemplates
      ✓ should detect template in string
      ✓ should detect template in object
      ✓ should detect template in array
      ✓ should detect template in nested structure
      ✓ should return false for no templates
      ✓ should return false for primitives (1 ms)
    extractTemplates
      ✓ should extract template from string
      ✓ should extract multiple templates from string
      ✓ should extract templates from object
      ✓ should extract templates from array
      ✓ should extract templates from nested structure
      ✓ should return empty array for no templates
    getStepDependencies
      ✓ should extract step dependencies (1 ms)
      ✓ should return unique dependencies
      ✓ should return sorted dependencies
      ✓ should handle nested templates
      ✓ should return empty array for no templates

  console.log
    [2025-10-12T14:22:30.064Z] POST /api/inspections

      at src/api/server.ts:26:11

  console.log
    [2025-10-12T14:22:30.083Z] POST /api/inspections

      at src/api/server.ts:26:11

  console.log
    [2025-10-12T14:22:30.083Z] POST /api/contaminants-detected

      at src/api/server.ts:26:11

  console.log
    [2025-10-12T14:22:30.084Z] POST /api/facilities

      at src/api/server.ts:26:11

  console.log
    [2025-10-12T14:22:30.088Z] DELETE /api/shipments/S1

      at src/api/server.ts:26:11

  console.log
    [2025-10-12T14:22:30.091Z] POST /api/contaminants-detected

      at src/api/server.ts:26:11

  console.log
    [2025-10-12T14:22:30.094Z] POST /api/facilities

      at src/api/server.ts:26:11

  console.log
    [dotenv@17.2.3] injecting env (49) from .env -- tip: ⚙️  specify custom .env file path with { path: '/custom/path/.env' }

      at _log (node_modules/dotenv/lib/main.js:142:11)

  console.log
    [2025-10-12T14:22:30.115Z] PUT /api/inspections/I1

      at src/api/server.ts:26:11

  console.log
    [2025-10-12T14:22:30.117Z] DELETE /api/shipments/NONEXISTENT

      at src/api/server.ts:26:11

  console.log
    [2025-10-12T14:22:30.119Z] PUT /api/facilities/F1

      at src/api/server.ts:26:11

  console.log
    [2025-10-12T14:22:30.122Z] PUT /api/contaminants-detected/C1

      at src/api/server.ts:26:11

  console.log
    ✓ Disconnected from MongoDB

      at disconnectDB (src/api/db/connection.ts:39:13)

PASS src/tests/api/shipments.test.ts
  Shipments API
    GET /api/shipments
      ✓ should return empty array when no shipments exist (106 ms)
      ✓ should return all shipments (40 ms)
      ✓ should filter shipments by date range (38 ms)
      ✓ should filter shipments by contamination status (16 ms)
    GET /api/shipments/:id
      ✓ should return a single shipment by id (32 ms)
      ✓ should return 404 for non-existent shipment (14 ms)
    POST /api/shipments
      ✓ should create a new shipment (24 ms)
      ✓ should return 409 for duplicate id (24 ms)
      ✓ should validate required fields (7 ms)
    PUT /api/shipments/:id
      ✓ should update a shipment (40 ms)
      ✓ should return 404 for non-existent shipment (29 ms)
    DELETE /api/shipments/:id
      ✓ should delete a shipment (21 ms)
      ✓ should return 404 for non-existent shipment (28 ms)

PASS src/tests/shared/utils/env.test.ts
  Environment Utilities
    getEnv
      ✓ should get environment variable
      ✓ should use default value when not set
      ✓ should throw when required var is missing (9 ms)
    getEnvOptional
      ✓ should get optional environment variable
      ✓ should return undefined when not set
      ✓ should return default value when not set
    getEnvNumber
      ✓ should parse number from env (1 ms)
      ✓ should parse float from env (1 ms)
      ✓ should use default when not set
      ✓ should throw on invalid number (2 ms)
      ✓ should throw when required number is missing (1 ms)
    getEnvBoolean
      ✓ should parse "true" as boolean (2 ms)
      ✓ should parse "TRUE" as boolean
      ✓ should parse "1" as true
      ✓ should parse "false" as boolean (1 ms)
      ✓ should parse "0" as false
      ✓ should use default when not set
      ✓ should throw when required boolean is missing
    environment checks
      ✓ should detect development environment
      ✓ should detect production environment
      ✓ should detect test environment
    getLLMEnvConfig
      ✓ should get LLM configuration from environment
      ✓ should use defaults for missing values
    getMemoryEnvConfig
      ✓ should get memory configuration from environment (1 ms)
      ✓ should use defaults for missing values
    validateEnv
      ✓ should pass when all required vars are present
      ✓ should throw when required vars are missing (1 ms)

  console.log
    [2025-10-12T14:22:30.148Z] PUT /api/facilities/NONEXISTENT

      at src/api/server.ts:26:11

  console.log
    [2025-10-12T14:22:30.149Z] PUT /api/inspections/NONEXISTENT

      at src/api/server.ts:26:11

PASS src/tests/shared/context/compression/prioritizer.test.ts
  MessagePrioritizer
    calculateImportance
      ✓ should give system messages highest importance (1 ms)
      ✓ should give sticky messages high importance
      ✓ should favor recent messages
      ✓ should give tool results moderate importance (1 ms)
      ✓ should consider message length (1 ms)
    prioritize
      ✓ should assign importance scores to all messages
      ✓ should sort by importance in descending order
      ✓ should preserve sticky messages at top
    selectTopN
      ✓ should select N most important messages
      ✓ should return all messages if N is greater than length
      ✓ should preserve message order in selection
    selectByTokenBudget
      ✓ should select messages within token budget
      ✓ should prioritize important messages within budget
      ✓ should return empty array if no messages fit budget

  console.log
    [2025-10-12T14:22:30.153Z] PUT /api/contaminants-detected/NONEXISTENT

      at src/api/server.ts:26:11

PASS src/tests/shared/context/compression/summarizer.test.ts
  MessageSummarizer
    summarize
      ✓ should summarize a list of messages (2 ms)
      ✓ should include key points in summary
      ✓ should return token count (1 ms)
      ✓ should preserve entities
    summarizeToMessage
      ✓ should convert summary to a system message (1 ms)
      ✓ should mark message as sticky (1 ms)
    canSummarize
      ✓ should return true for sufficient messages
      ✓ should return false for too few messages
      ✓ should return false for empty array (1 ms)
    error handling
      ✓ should handle LLM errors gracefully (7 ms)

PASS src/tests/shared/utils/validation.test.ts
  Validation Utilities
    validate
      ✓ should validate valid data (4 ms)
      ✓ should throw on invalid data (5 ms)
    safeValidate
      ✓ should return success for valid data
      ✓ should return error for invalid data (1 ms)
    isValidEmail
      ✓ should validate correct email addresses (2 ms)
      ✓ should reject invalid email addresses
    isValidUrl
      ✓ should validate correct URLs
      ✓ should reject invalid URLs
    isValidISODate
      ✓ should validate correct ISO date strings
      ✓ should reject invalid ISO date strings (1 ms)
    isValidUUID
      ✓ should validate correct UUIDs
      ✓ should reject invalid UUIDs

  console.log
    [2025-10-12T14:22:30.190Z] DELETE /api/facilities/F1

      at src/api/server.ts:26:11

PASS src/tests/shared/utils/statistics.test.ts
  Statistics Utilities
    mean
      ✓ should calculate mean correctly (1 ms)
      ✓ should handle empty array
      ✓ should handle single value
    median
      ✓ should calculate median for odd length array
      ✓ should calculate median for even length array
      ✓ should handle unsorted array
      ✓ should handle empty array
      ✓ should handle single value
    standardDeviation
      ✓ should calculate standard deviation
      ✓ should return 0 for empty array (1 ms)
      ✓ should return 0 for constant values
    variance
      ✓ should calculate variance
      ✓ should return 0 for empty array
    range
      ✓ should calculate min, max, and range (1 ms)
      ✓ should handle single value
      ✓ should handle empty array
    detectOutliersZScore
      ✓ should detect outliers using z-score
      ✓ should not detect outliers in normal data
      ✓ should handle different thresholds
      ✓ should return empty for arrays too small
      ✓ should return empty for constant values
    detectOutliersIQR
      ✓ should detect outliers using IQR
      ✓ should calculate bounds correctly
      ✓ should handle different multipliers
      ✓ should return empty for arrays too small
    percentile
      ✓ should calculate 50th percentile (median)
      ✓ should calculate 25th percentile
      ✓ should calculate 75th percentile (1 ms)
      ✓ should handle 0th percentile
      ✓ should handle 100th percentile
      ✓ should throw error for invalid percentile (23 ms)
      ✓ should return 0 for empty array
    detectTrend
      ✓ should detect increasing trend (1 ms)
      ✓ should detect decreasing trend
      ✓ should detect stable trend
      ✓ should handle single value
      ✓ should handle different stability thresholds
    correlation
      ✓ should calculate perfect positive correlation
      ✓ should calculate perfect negative correlation
      ✓ should calculate no correlation
      ✓ should return 0 for different length arrays
      ✓ should return 0 for empty arrays
    summarize
      ✓ should calculate comprehensive statistics (17 ms)
      ✓ should handle empty array
      ✓ should handle single value (1 ms)
    groupByAndSummarize
      ✓ should group and summarize data
      ✓ should handle single group
      ✓ should handle empty array

PASS src/tests/shared/utils/date.test.ts
  Date Utilities
    formatDate
      ✓ should format date to YYYY-MM-DD
      ✓ should handle dates with different months
    parseTemporalReference
      ✓ should parse "today"
      ✓ should parse "yesterday"
      ✓ should parse "last week"
      ✓ should parse "this week" (1 ms)
      ✓ should parse "this month"
      ✓ should parse "last month"
      ✓ should throw on invalid reference (7 ms)
      ✓ should be case insensitive
    getDaysAgo
      ✓ should get date N days ago (1 ms)
      ✓ should handle 0 days
    isDateInRange
      ✓ should return true for date within range
      ✓ should return false for date before range
      ✓ should return false for date after range
      ✓ should include boundary dates
    getCurrentTimestamp
      ✓ should return ISO timestamp string

PASS src/tests/shared/context/state/manager.test.ts
  StateManager
    initialization
      ✓ should create a new conversation state
      ✓ should initialize with user ID if provided
    state transitions
      ✓ should transition from idle to planning
      ✓ should track phase history
      ✓ should record transition timestamps
      ✓ should allow all valid transitions (1 ms)
    addMessage
      ✓ should add message to state
      ✓ should increment turn count
      ✓ should update lastUpdated timestamp
    addEntity
      ✓ should add entity to state
      ✓ should deduplicate entities
    getCurrentPhase
      ✓ should return current phase (1 ms)
      ✓ should return updated phase after transition
    getPhase Duration
      ✓ should calculate phase duration
      ✓ should return 0 for phase not in history
    getConversationDuration
      ✓ should calculate total conversation duration

PASS src/tests/shared/workflow/graph/builder.test.ts
  GraphBuilder
    addNode
      ✓ should add a node to the graph (2 ms)
      ✓ should add multiple nodes
      ✓ should throw error for duplicate node names (6 ms)
    addEdge
      ✓ should add an edge between nodes
      ✓ should add multiple edges from same node
      ✓ should throw error if source node does not exist (1 ms)
      ✓ should throw error if target node does not exist
    addConditionalEdge
      ✓ should add a conditional edge
      ✓ should throw error if condition targets do not exist
    setEntryPoint
      ✓ should set the entry point
      ✓ should throw error if entry point node does not exist
    build
      ✓ should build a valid graph
      ✓ should detect cycles in the graph (1 ms)
      ✓ should require entry point to be set

  console.log
    [2025-10-12T14:22:30.243Z] DELETE /api/inspections/I1

      at src/api/server.ts:26:11

PASS src/tests/shared/tokens/budget.test.ts
  TokenBudget
    initialization
      ✓ should create budget with limits
      ✓ should start with zero usage (6 ms)
    allocate
      ✓ should allocate tokens for an operation
      ✓ should reject allocation exceeding budget
      ✓ should track multiple allocations (1 ms)
      ✓ should enforce per-operation limit
    release
      ✓ should release allocated tokens
      ✓ should handle releasing non-existent operation
    getRemaining
      ✓ should calculate remaining tokens
      ✓ should return full budget when nothing allocated
    canAllocate
      ✓ should check if allocation is possible
      ✓ should account for current usage
    getStatus
      ✓ should provide budget status
      ✓ should calculate utilization percentage
    reset
      ✓ should reset all allocations
    getAllocations
      ✓ should return all active allocations

  console.log
    [2025-10-12T14:22:30.257Z] DELETE /api/facilities/NONEXISTENT

      at src/api/server.ts:26:11

PASS src/tests/shared/conversation/utilities.test.ts
  ConversationUtils
    isAffirmative
      ✓ should detect affirmative responses
      ✓ should be case insensitive (1 ms)
      ✓ should reject non-affirmative
    isNegative
      ✓ should detect negative responses
      ✓ should reject non-negative
    extractTimeframe
      ✓ should extract time references (1 ms)
      ✓ should extract date ranges (1 ms)
      ✓ should return empty object when no timeframe
    extractBusinessEntities
      ✓ should extract facility mentions
      ✓ should extract status keywords
      ✓ should extract waste types (1 ms)
      ✓ should extract dates
      ✓ should handle messages with no entities
    extractReferences
      ✓ should detect pronoun references
      ✓ should detect multiple references
      ✓ should return empty for no references (1 ms)
    isFollowUp
      ✓ should detect follow-up indicators (2 ms)
      ✓ should detect pronoun references as follow-ups
    simplifyForComparison
      ✓ should normalize text for comparison
      ✓ should remove punctuation (1 ms)

  console.log
    [2025-10-12T14:22:30.261Z] DELETE /api/contaminants-detected/C1

      at src/api/server.ts:26:11

PASS src/tests/shared/context/compression/compressor.test.ts
  ContextCompressor
    compress
      ✓ should compress messages when over token limit (2 ms)
      ✓ should use REMOVE_OLD strategy for simple compression
      ✓ should use SUMMARIZE strategy when appropriate
      ✓ should use PRIORITIZE strategy (1 ms)
      ✓ should preserve system messages in all strategies
    auto compression
      ✓ should automatically select best strategy
    needsCompression
      ✓ should detect when compression is needed
      ✓ should return false when under limit
    getCompressionStats
      ✓ should provide compression statistics

  console.log
    [2025-10-12T14:22:30.271Z] DELETE /api/inspections/NONEXISTENT

      at src/api/server.ts:26:11

  console.log
    [SummarizerAgent] Generating summary...

      at SummarizerAgent.summarize (src/agents/summarizer.ts:39:13)

  console.log
    [SummarizerAgent] Generating summary...

      at SummarizerAgent.summarize (src/agents/summarizer.ts:39:13)

  console.log
    [SummarizerAgent] Generating summary...

      at SummarizerAgent.summarize (src/agents/summarizer.ts:39:13)

  console.log
    [SummarizerAgent] Generating summary...

      at SummarizerAgent.summarize (src/agents/summarizer.ts:39:13)

  console.error
    [SummarizerAgent] Summarization failed: Error: LLM failed
        at Object.<anonymous> (/Users/yab/Projects/clear-ai-v2/src/tests/agents/summarizer.test.ts:115:42)
        at Promise.finally.completed (/Users/yab/Projects/clear-ai-v2/node_modules/jest-circus/build/jestAdapterInit.js:1557:28)
        at new Promise (<anonymous>)
        at callAsyncCircusFn (/Users/yab/Projects/clear-ai-v2/node_modules/jest-circus/build/jestAdapterInit.js:1497:10)
        at _callCircusTest (/Users/yab/Projects/clear-ai-v2/node_modules/jest-circus/build/jestAdapterInit.js:1007:40)
        at processTicksAndRejections (node:internal/process/task_queues:105:5)
        at _runTest (/Users/yab/Projects/clear-ai-v2/node_modules/jest-circus/build/jestAdapterInit.js:947:3)
        at /Users/yab/Projects/clear-ai-v2/node_modules/jest-circus/build/jestAdapterInit.js:849:7
        at _runTestsForDescribeBlock (/Users/yab/Projects/clear-ai-v2/node_modules/jest-circus/build/jestAdapterInit.js:862:11)
        at _runTestsForDescribeBlock (/Users/yab/Projects/clear-ai-v2/node_modules/jest-circus/build/jestAdapterInit.js:857:11)
        at _runTestsForDescribeBlock (/Users/yab/Projects/clear-ai-v2/node_modules/jest-circus/build/jestAdapterInit.js:857:11)
        at run (/Users/yab/Projects/clear-ai-v2/node_modules/jest-circus/build/jestAdapterInit.js:761:3)
        at runAndTransformResultsToJestFormat (/Users/yab/Projects/clear-ai-v2/node_modules/jest-circus/build/jestAdapterInit.js:1918:21)
        at jestAdapter (/Users/yab/Projects/clear-ai-v2/node_modules/jest-circus/build/runner.js:101:19)
        at runTestInternal (/Users/yab/Projects/clear-ai-v2/node_modules/jest-runner/build/testWorker.js:275:16)
        at runTest (/Users/yab/Projects/clear-ai-v2/node_modules/jest-runner/build/testWorker.js:343:7)
        at Object.worker (/Users/yab/Projects/clear-ai-v2/node_modules/jest-runner/build/testWorker.js:497:12)

      90 |
      91 |     } catch (error) {
    > 92 |       console.error('[SummarizerAgent] Summarization failed:', error);
         |               ^
      93 |
      94 |       // Fallback to template-based summary
      95 |       return this.generateTemplateSummary(query, analysis, toolsUsed);

      at SummarizerAgent.summarize (src/agents/summarizer.ts:92:15)
      at Object.<anonymous> (src/tests/agents/summarizer.test.ts:130:24)

  console.log
    [SummarizerAgent] Generating summary...

      at SummarizerAgent.summarize (src/agents/summarizer.ts:39:13)

  console.log
    [SummarizerAgent] Generating summary...

      at SummarizerAgent.summarize (src/agents/summarizer.ts:39:13)

  console.log
    [SummarizerAgent] Generating summary...

      at SummarizerAgent.summarize (src/agents/summarizer.ts:39:13)

  console.log
    [SummarizerAgent] Generating summary...

      at SummarizerAgent.summarize (src/agents/summarizer.ts:39:13)

PASS src/tests/agents/summarizer.test.ts
  SummarizerAgent
    Basic Summarization
      ✓ should generate summary from analysis (3 ms)
      ✓ should include insights in prompt
      ✓ should highlight critical anomalies (1 ms)
    Fallback to Template
      ✓ should use template when LLM fails (4 ms)
    Response Structure
      ✓ should include tools_used in response
      ✓ should include analysis data (1 ms)
      ✓ should include metadata
    Configuration
      ✓ should respect maxLength configuration (1 ms)

PASS src/tests/shared/workflow/checkpoint/manager.test.ts
  CheckpointManager
    createCheckpoint
      ✓ should create a checkpoint (10 ms)
      ✓ should auto-generate checkpoint ID (10 ms)
      ✓ should save checkpoint to storage (1 ms)
    loadCheckpoint
      ✓ should load an existing checkpoint (1 ms)
      ✓ should return null for non-existent checkpoint (3 ms)
    listCheckpoints
      ✓ should list all checkpoints for a workflow (1 ms)
      ✓ should return empty array for workflow with no checkpoints
      ✓ should return checkpoints sorted by timestamp (newest first) (44 ms)
    deleteCheckpoint
      ✓ should delete a checkpoint (1 ms)
    cleanup
      ✓ should delete all checkpoints for a workflow
      ✓ should not affect other workflows
    getLatestCheckpoint
      ✓ should get the most recent checkpoint for a workflow (101 ms)
      ✓ should return null if no checkpoints exist

  console.log
    [2025-10-12T14:22:30.319Z] DELETE /api/contaminants-detected/NONEXISTENT

      at src/api/server.ts:26:11

  console.log
    ✓ Disconnected from MongoDB

      at disconnectDB (src/api/db/connection.ts:39:13)

PASS src/tests/api/inspections.test.ts
  Inspections API
    GET /api/inspections
      ✓ should return empty array when no inspections exist (76 ms)
      ✓ should return all inspections (70 ms)
      ✓ should filter inspections by status (42 ms)
      ✓ should filter inspections by date range (16 ms)
      ✓ should filter inspections with risk contaminants (51 ms)
    GET /api/inspections/:id
      ✓ should return a single inspection by id (42 ms)
      ✓ should return 404 for non-existent inspection (31 ms)
    POST /api/inspections
      ✓ should create a new inspection (15 ms)
      ✓ should return 409 for duplicate id (36 ms)
    PUT /api/inspections/:id
      ✓ should update an inspection (41 ms)
      ✓ should return 404 for non-existent inspection (31 ms)
    DELETE /api/inspections/:id
      ✓ should delete an inspection (94 ms)
      ✓ should return 404 for non-existent inspection (28 ms)

  console.log
    ✓ Disconnected from MongoDB

      at disconnectDB (src/api/db/connection.ts:39:13)

PASS src/tests/api/facilities.test.ts
  Facilities API
    GET /api/facilities
      ✓ should return empty array when no facilities exist (61 ms)
      ✓ should return all facilities (82 ms)
      ✓ should filter facilities by location (38 ms)
      ✓ should filter facilities by type (13 ms)
      ✓ should filter facilities by minimum capacity (56 ms)
    GET /api/facilities/:id
      ✓ should return a single facility by id (37 ms)
      ✓ should return 404 for non-existent facility (35 ms)
    POST /api/facilities
      ✓ should create a new facility (32 ms)
      ✓ should return 409 for duplicate id (28 ms)
    PUT /api/facilities/:id
      ✓ should update a facility (31 ms)
      ✓ should return 404 for non-existent facility (23 ms)
    DELETE /api/facilities/:id
      ✓ should delete a facility (98 ms)
      ✓ should return 404 for non-existent facility (35 ms)

PASS src/tests/shared/context/message.test.ts
  MessageHandler
    addMessage
      ✓ should add a message to the list
      ✓ should add multiple messages in order (1 ms)
      ✓ should calculate token count for added message
    getMessages
      ✓ should return empty array initially
      ✓ should return all messages
      ✓ should return filtered messages by role
      ✓ should return limited number of messages (1 ms)
      ✓ should return most recent messages when limited
    getTotalTokens
      ✓ should return 0 for empty message list
      ✓ should sum token counts of all messages
    clear
      ✓ should remove all messages
    removeOldest
      ✓ should remove the oldest message (1 ms)
      ✓ should remove multiple oldest messages
      ✓ should not error when removing more than available
    getSystemMessages
      ✓ should return only system messages
    formatForLLM
      ✓ should format messages for LLM consumption (1 ms)
      ✓ should exclude tool messages by default
      ✓ should include tool messages when specified
    MessageList
      ✓ should create a message list from array

PASS src/tests/shared/context/manager.test.ts
  ContextManager
    initialization
      ✓ should create manager with default config (3 ms)
      ✓ should create manager with custom config
    addMessage
      ✓ should add a message to context
      ✓ should add multiple messages (1 ms)
      ✓ should calculate token counts for messages (3 ms)
    getMessages
      ✓ should return all messages
      ✓ should filter messages by role
      ✓ should limit number of messages returned
    compression
      ✓ should detect when compression is needed (1 ms)
      ✓ should not need compression when under threshold
      ✓ should return compression status
    getContextWindow
      ✓ should return context window with metadata
    clear
      ✓ should remove all messages
    formatForLLM
      ✓ should format messages for LLM (1 ms)
      ✓ should exclude tool messages by default
      ✓ should include tool messages when specified
    getSummary
      ✓ should provide context summary (1 ms)
      ✓ should calculate utilization percentage correctly
    token management
      ✓ should track total tokens accurately
      ✓ should respect max tokens limit

PASS src/tests/shared/context/compression/entity-extractor.test.ts
  EntityExtractor
    extractFromMessage
      ✓ should extract entities from a message (1 ms)
      ✓ should identify facility names
      ✓ should identify status keywords (1 ms)
      ✓ should extract dates (30 ms)
      ✓ should handle messages with no entities
    extractFromMessages
      ✓ should extract entities from multiple messages
      ✓ should deduplicate entities
      ✓ should track entity frequency (25 ms)
    getEntitiesByType
      ✓ should filter entities by type
    getMostFrequent
      ✓ should return most frequently mentioned entities (20 ms)
      ✓ should return all entities if n is greater than count
    toSummary
      ✓ should create a text summary of entities (1 ms)
      ✓ should return empty string for no entities

PASS src/tests/shared/response/builder.test.ts
  ResponseBuilder
    answer
      ✓ should create an answer response (1 ms)
      ✓ should include data in answer
      ✓ should include confidence score
    question
      ✓ should create a question response
      ✓ should work without options
    progress
      ✓ should create a progress response
      ✓ should calculate progress percentage in content (1 ms)
    acknowledge
      ✓ should create acknowledgment with default message
      ✓ should create acknowledgment with custom message
    withConfidence
      ✓ should add confidence to any response
      ✓ should add uncertainty disclaimer for low confidence
      ✓ should not add disclaimer for high confidence
    formatWithData
      ✓ should format response with data summary
    isAwaitingUserInput
      ✓ should detect responses that need user input

PASS src/tests/shared/workflow/execution/executor.test.ts
  WorkflowExecutor
    execute simple graph
      ✓ should execute a linear graph (4 ms)
      ✓ should track execution steps
    execute conditional graph
      ✓ should follow conditional paths (4 ms)
    error handling
      ✓ should handle node errors (9 ms)
      ✓ should record which node failed
    execution options
      ✓ should respect max steps limit (3 ms)
    execution metadata
      ✓ should track execution time

PASS src/tests/shared/intent/classifier.test.ts
  IntentClassifier
    classify
      ✓ should classify query intent (2 ms)
      ✓ should classify question intent (1 ms)
      ✓ should classify clarification intent
      ✓ should classify confirmation intent (1 ms)
      ✓ should classify follow-up intent
    isQuery
      ✓ should detect query patterns (1 ms)
      ✓ should reject non-query patterns
    isQuestion
      ✓ should detect question patterns (1 ms)
      ✓ should reject non-question patterns
    isConfirmation
      ✓ should detect affirmative confirmations (1 ms)
      ✓ should detect negative confirmations
      ✓ should return null for non-confirmations (1 ms)
      ✓ should be case insensitive
    isFollowUp
      ✓ should detect follow-up patterns
      ✓ should detect pronoun references (1 ms)
    extractTimeframe
      ✓ should extract relative time references
      ✓ should return null when no timeframe found
    extractAction
      ✓ should extract action verbs (1 ms)
      ✓ should return null when no clear action
    context-aware classification
      ✓ should use context when agent is awaiting clarification
      ✓ should detect follow-ups based on context

PASS src/tests/shared/utils/errors.test.ts
  Error Utilities
    ClearAIError
      ✓ should create base error (3 ms)
      ✓ should serialize to JSON (1 ms)
    ToolExecutionError
      ✓ should create tool execution error (1 ms)
    PlanGenerationError
      ✓ should create plan generation error (2 ms)
    LLMProviderError
      ✓ should create LLM provider error (1 ms)
    MemoryError
      ✓ should create memory error
    ValidationError
      ✓ should create validation error
    wrapError
      ✓ should pass through ClearAIError
      ✓ should wrap standard Error
      ✓ should wrap unknown errors
      ✓ should wrap null/undefined (1 ms)

  console.log
    ✓ Disconnected from MongoDB

      at disconnectDB (src/api/db/connection.ts:39:13)

PASS src/tests/api/contaminants.test.ts
  Contaminants API
    GET /api/contaminants-detected
      ✓ should return empty array when no contaminants exist (72 ms)
      ✓ should return all contaminants (70 ms)
      ✓ should filter contaminants by shipment_ids (43 ms)
      ✓ should filter contaminants by risk level (12 ms)
      ✓ should filter contaminants by type (41 ms)
    GET /api/contaminants-detected/:id
      ✓ should return a single contaminant by id (59 ms)
      ✓ should return 404 for non-existent contaminant (35 ms)
    POST /api/contaminants-detected
      ✓ should create a new contaminant detection (29 ms)
      ✓ should return 409 for duplicate id (28 ms)
    PUT /api/contaminants-detected/:id
      ✓ should update a contaminant (49 ms)
      ✓ should return 404 for non-existent contaminant (42 ms)
    DELETE /api/contaminants-detected/:id
      ✓ should delete a contaminant (123 ms)
      ✓ should return 404 for non-existent contaminant (20 ms)

PASS src/tests/shared/confidence/scorer.test.ts
  ConfidenceScorer
    scoreFromDataCount
      ✓ should give high confidence for sufficient data (1 ms)
      ✓ should give low confidence for insufficient data
      ✓ should give perfect score when meeting expectation
      ✓ should handle zero expected
    scoreFromDataCompleteness
      ✓ should give high score for complete data
      ✓ should give lower score for partial data (4 ms)
      ✓ should handle missing data gracefully
    scoreFromToolResults
      ✓ should give high score when all tools succeed (1 ms)
      ✓ should give lower score when some tools fail (1 ms)
      ✓ should give zero score when all tools fail (1 ms)
    combineScores
      ✓ should average multiple scores (1 ms)
      ✓ should handle single score
      ✓ should handle empty array
    getConfidenceLevel
      ✓ should classify very low confidence
      ✓ should classify low confidence
      ✓ should classify medium confidence (1 ms)
      ✓ should classify high confidence
      ✓ should classify very high confidence
    shouldExpressUncertainty
      ✓ should express uncertainty for low confidence
      ✓ should not express uncertainty for high confidence
      ✓ should have threshold at 0.7

PASS src/tests/shared/context/types.test.ts
  Context Types
    MessageRole
      ✓ should have correct role types (1 ms)
    isValidMessageRole
      ✓ should validate correct message roles
      ✓ should reject invalid message roles
    createMessage
      ✓ should create a valid user message
      ✓ should create a system message with metadata (1 ms)
      ✓ should create an assistant message
      ✓ should create a tool message with result
    isValidMessage
      ✓ should validate correct messages
      ✓ should reject messages with invalid role
      ✓ should reject messages with missing content
      ✓ should reject messages with invalid timestamp
      ✓ should accept messages with optional token count (1 ms)
    calculateMessageTokens
      ✓ should estimate tokens for a simple message
      ✓ should estimate more tokens for longer messages
      ✓ should account for role in token count
    ContextWindow
      ✓ should create a valid context window
    ConversationMetadata
      ✓ should create valid conversation metadata

  console.error
    [ExecutorAgent] Tool test attempt 3/3 failed: Execution failed

      353 |       } catch (error: any) {
      354 |         lastError = error;
    > 355 |         console.error(
          |                 ^
      356 |           `[ExecutorAgent] Tool ${toolName} attempt ${attempt}/${this.config.maxRetries} failed:`,
      357 |           error.message
      358 |         );

      at ExecutorAgent.executeWithRetry (src/agents/executor.ts:355:17)
      at ExecutorAgent.executeStep (src/agents/executor.ts:196:22)
          at async Promise.all (index 0)
      at ExecutorAgent.execute (src/agents/executor.ts:55:28)
      at Object.<anonymous> (src/tests/agents/executor.test.ts:520:23)

  console.error
    [ExecutorAgent] Step 0 (test) failed: Execution failed

      202 |
      203 |     } catch (error: any) {
    > 204 |       console.error(`[ExecutorAgent] Step ${index} (${step.tool}) failed:`, error.message);
          |               ^
      205 |
      206 |       return {
      207 |         success: false,

      at ExecutorAgent.executeStep (src/agents/executor.ts:204:15)
          at async Promise.all (index 0)
      at ExecutorAgent.execute (src/agents/executor.ts:55:28)
      at Object.<anonymous> (src/tests/agents/executor.test.ts:520:23)

  console.log
    [ExecutorAgent] Plan execution complete. 1 results

      at ExecutorAgent.execute (src/agents/executor.ts:79:13)

  console.log
    [ExecutorAgent] Executing plan with 2 steps

      at ExecutorAgent.execute (src/agents/executor.ts:35:13)

  console.log
    [ExecutorAgent] Executing 2 steps in parallel

      at ExecutorAgent.execute (src/agents/executor.ts:52:15)

  console.log
    [ExecutorAgent] Executing step 0: tool1

      at ExecutorAgent.executeStep (src/agents/executor.ts:177:13)
          at Array.map (<anonymous>)

  console.log
    [ExecutorAgent] Resolved params for tool1: {}

      at ExecutorAgent.executeStep (src/agents/executor.ts:193:15)
          at Array.map (<anonymous>)

  console.log
    [ExecutorAgent] Executing step 1: tool2

      at ExecutorAgent.executeStep (src/agents/executor.ts:177:13)
          at Array.map (<anonymous>)

  console.log
    [ExecutorAgent] Resolved params for tool2: {}

      at ExecutorAgent.executeStep (src/agents/executor.ts:193:15)
          at Array.map (<anonymous>)

  console.error
    [ExecutorAgent] Tool tool1 attempt 1/3 failed: Failed

      353 |       } catch (error: any) {
      354 |         lastError = error;
    > 355 |         console.error(
          |                 ^
      356 |           `[ExecutorAgent] Tool ${toolName} attempt ${attempt}/${this.config.maxRetries} failed:`,
      357 |           error.message
      358 |         );

      at ExecutorAgent.executeWithRetry (src/agents/executor.ts:355:17)
      at ExecutorAgent.executeStep (src/agents/executor.ts:196:22)
          at async Promise.all (index 0)
      at ExecutorAgent.execute (src/agents/executor.ts:55:28)
      at Object.<anonymous> (src/tests/agents/executor.test.ts:551:23)

  console.error
    [ExecutorAgent] Tool tool1 attempt 2/3 failed: Failed

      353 |       } catch (error: any) {
      354 |         lastError = error;
    > 355 |         console.error(
          |                 ^
      356 |           `[ExecutorAgent] Tool ${toolName} attempt ${attempt}/${this.config.maxRetries} failed:`,
      357 |           error.message
      358 |         );

      at ExecutorAgent.executeWithRetry (src/agents/executor.ts:355:17)
      at ExecutorAgent.executeStep (src/agents/executor.ts:196:22)
          at async Promise.all (index 0)
      at ExecutorAgent.execute (src/agents/executor.ts:55:28)
      at Object.<anonymous> (src/tests/agents/executor.test.ts:551:23)

  console.error
    [ExecutorAgent] Tool tool1 attempt 3/3 failed: Failed

      353 |       } catch (error: any) {
      354 |         lastError = error;
    > 355 |         console.error(
          |                 ^
      356 |           `[ExecutorAgent] Tool ${toolName} attempt ${attempt}/${this.config.maxRetries} failed:`,
      357 |           error.message
      358 |         );

      at ExecutorAgent.executeWithRetry (src/agents/executor.ts:355:17)
      at ExecutorAgent.executeStep (src/agents/executor.ts:196:22)
          at async Promise.all (index 0)
      at ExecutorAgent.execute (src/agents/executor.ts:55:28)
      at Object.<anonymous> (src/tests/agents/executor.test.ts:551:23)

  console.error
    [ExecutorAgent] Step 0 (tool1) failed: Failed

      202 |
      203 |     } catch (error: any) {
    > 204 |       console.error(`[ExecutorAgent] Step ${index} (${step.tool}) failed:`, error.message);
          |               ^
      205 |
      206 |       return {
      207 |         success: false,

      at ExecutorAgent.executeStep (src/agents/executor.ts:204:15)
          at async Promise.all (index 0)
      at ExecutorAgent.execute (src/agents/executor.ts:55:28)
      at Object.<anonymous> (src/tests/agents/executor.test.ts:551:23)

  console.log
    [ExecutorAgent] Plan execution complete. 2 results

      at ExecutorAgent.execute (src/agents/executor.ts:79:13)

  console.log
    [ExecutorAgent] Executing plan with 2 steps

      at ExecutorAgent.execute (src/agents/executor.ts:35:13)

  console.log
    [ExecutorAgent] Executing 2 steps in parallel

      at ExecutorAgent.execute (src/agents/executor.ts:52:15)

  console.log
    [ExecutorAgent] Executing step 0: tool1

      at ExecutorAgent.executeStep (src/agents/executor.ts:177:13)
          at Array.map (<anonymous>)

  console.log
    [ExecutorAgent] Resolved params for tool1: {}

      at ExecutorAgent.executeStep (src/agents/executor.ts:193:15)
          at Array.map (<anonymous>)

  console.log
    [ExecutorAgent] Executing step 1: tool2

      at ExecutorAgent.executeStep (src/agents/executor.ts:177:13)
          at Array.map (<anonymous>)

  console.log
    [ExecutorAgent] Resolved params for tool2: {}

      at ExecutorAgent.executeStep (src/agents/executor.ts:193:15)
          at Array.map (<anonymous>)

  console.error
    [ExecutorAgent] Tool tool1 attempt 1/3 failed: Failed

      353 |       } catch (error: any) {
      354 |         lastError = error;
    > 355 |         console.error(
          |                 ^
      356 |           `[ExecutorAgent] Tool ${toolName} attempt ${attempt}/${this.config.maxRetries} failed:`,
      357 |           error.message
      358 |         );

      at ExecutorAgent.executeWithRetry (src/agents/executor.ts:355:17)
      at ExecutorAgent.executeStep (src/agents/executor.ts:196:22)
          at async Promise.all (index 0)
      at ExecutorAgent.execute (src/agents/executor.ts:55:28)
      at Object.<anonymous> (src/tests/agents/executor.test.ts:587:7)

  console.error
    [ExecutorAgent] Tool tool1 attempt 2/3 failed: Failed

      353 |       } catch (error: any) {
      354 |         lastError = error;
    > 355 |         console.error(
          |                 ^
      356 |           `[ExecutorAgent] Tool ${toolName} attempt ${attempt}/${this.config.maxRetries} failed:`,
      357 |           error.message
      358 |         );

      at ExecutorAgent.executeWithRetry (src/agents/executor.ts:355:17)
      at ExecutorAgent.executeStep (src/agents/executor.ts:196:22)
          at async Promise.all (index 0)
      at ExecutorAgent.execute (src/agents/executor.ts:55:28)
      at Object.<anonymous> (src/tests/agents/executor.test.ts:587:7)

  console.error
    [ExecutorAgent] Tool tool1 attempt 3/3 failed: Failed

      353 |       } catch (error: any) {
      354 |         lastError = error;
    > 355 |         console.error(
          |                 ^
      356 |           `[ExecutorAgent] Tool ${toolName} attempt ${attempt}/${this.config.maxRetries} failed:`,
      357 |           error.message
      358 |         );

      at ExecutorAgent.executeWithRetry (src/agents/executor.ts:355:17)
      at ExecutorAgent.executeStep (src/agents/executor.ts:196:22)
          at async Promise.all (index 0)
      at ExecutorAgent.execute (src/agents/executor.ts:55:28)
      at Object.<anonymous> (src/tests/agents/executor.test.ts:587:7)

  console.error
    [ExecutorAgent] Step 0 (tool1) failed: Failed

      202 |
      203 |     } catch (error: any) {
    > 204 |       console.error(`[ExecutorAgent] Step ${index} (${step.tool}) failed:`, error.message);
          |               ^
      205 |
      206 |       return {
      207 |         success: false,

      at ExecutorAgent.executeStep (src/agents/executor.ts:204:15)
          at async Promise.all (index 0)
      at ExecutorAgent.execute (src/agents/executor.ts:55:28)
      at Object.<anonymous> (src/tests/agents/executor.test.ts:587:7)

  console.log
    [ExecutorAgent] Executing plan with 1 steps

      at ExecutorAgent.execute (src/agents/executor.ts:35:13)

  console.log
    [ExecutorAgent] Executing 1 steps in parallel

      at ExecutorAgent.execute (src/agents/executor.ts:52:15)

  console.log
    [ExecutorAgent] Executing step 0: test

      at ExecutorAgent.executeStep (src/agents/executor.ts:177:13)
          at Array.map (<anonymous>)

  console.log
    [ExecutorAgent] Resolved params for test: {}

      at ExecutorAgent.executeStep (src/agents/executor.ts:193:15)
          at Array.map (<anonymous>)

  console.error
    [ExecutorAgent] Tool test attempt 1/3 failed: Temporary failure

      353 |       } catch (error: any) {
      354 |         lastError = error;
    > 355 |         console.error(
          |                 ^
      356 |           `[ExecutorAgent] Tool ${toolName} attempt ${attempt}/${this.config.maxRetries} failed:`,
      357 |           error.message
      358 |         );

      at ExecutorAgent.executeWithRetry (src/agents/executor.ts:355:17)
      at ExecutorAgent.executeStep (src/agents/executor.ts:196:22)
          at async Promise.all (index 0)
      at ExecutorAgent.execute (src/agents/executor.ts:55:28)
      at Object.<anonymous> (src/tests/agents/executor.test.ts:615:23)

  console.error
    [ExecutorAgent] Tool test attempt 2/3 failed: Temporary failure

      353 |       } catch (error: any) {
      354 |         lastError = error;
    > 355 |         console.error(
          |                 ^
      356 |           `[ExecutorAgent] Tool ${toolName} attempt ${attempt}/${this.config.maxRetries} failed:`,
      357 |           error.message
      358 |         );

      at ExecutorAgent.executeWithRetry (src/agents/executor.ts:355:17)
      at ExecutorAgent.executeStep (src/agents/executor.ts:196:22)
          at async Promise.all (index 0)
      at ExecutorAgent.execute (src/agents/executor.ts:55:28)
      at Object.<anonymous> (src/tests/agents/executor.test.ts:615:23)

  console.log
    [ExecutorAgent] Plan execution complete. 1 results

      at ExecutorAgent.execute (src/agents/executor.ts:79:13)

  console.log
    [ExecutorAgent] Executing plan with 1 steps

      at ExecutorAgent.execute (src/agents/executor.ts:35:13)

  console.log
    [ExecutorAgent] Executing 1 steps in parallel

      at ExecutorAgent.execute (src/agents/executor.ts:52:15)

  console.log
    [ExecutorAgent] Executing step 0: test

      at ExecutorAgent.executeStep (src/agents/executor.ts:177:13)
          at Array.map (<anonymous>)

  console.log
    [ExecutorAgent] Resolved params for test: {}

      at ExecutorAgent.executeStep (src/agents/executor.ts:193:15)
          at Array.map (<anonymous>)

  console.error
    [ExecutorAgent] Tool test attempt 1/1 failed: Always fails

      353 |       } catch (error: any) {
      354 |         lastError = error;
    > 355 |         console.error(
          |                 ^
      356 |           `[ExecutorAgent] Tool ${toolName} attempt ${attempt}/${this.config.maxRetries} failed:`,
      357 |           error.message
      358 |         );

      at ExecutorAgent.executeWithRetry (src/agents/executor.ts:355:17)
      at ExecutorAgent.executeStep (src/agents/executor.ts:196:22)
          at async Promise.all (index 0)
      at ExecutorAgent.execute (src/agents/executor.ts:55:28)
      at Object.<anonymous> (src/tests/agents/executor.test.ts:636:7)

  console.error
    [ExecutorAgent] Step 0 (test) failed: Always fails

      202 |
      203 |     } catch (error: any) {
    > 204 |       console.error(`[ExecutorAgent] Step ${index} (${step.tool}) failed:`, error.message);
          |               ^
      205 |
      206 |       return {
      207 |         success: false,

      at ExecutorAgent.executeStep (src/agents/executor.ts:204:15)
          at async Promise.all (index 0)
      at ExecutorAgent.execute (src/agents/executor.ts:55:28)
      at Object.<anonymous> (src/tests/agents/executor.test.ts:636:7)

  console.log
    [ExecutorAgent] Plan execution complete. 1 results

      at ExecutorAgent.execute (src/agents/executor.ts:79:13)

  console.log
    [ExecutorAgent] Executing plan with 1 steps

      at ExecutorAgent.execute (src/agents/executor.ts:35:13)

  console.log
    [ExecutorAgent] Executing 1 steps in parallel

      at ExecutorAgent.execute (src/agents/executor.ts:52:15)

  console.log
    [ExecutorAgent] Executing step 0: test

      at ExecutorAgent.executeStep (src/agents/executor.ts:177:13)
          at Array.map (<anonymous>)

  console.log
    [ExecutorAgent] Resolved params for test: {}

      at ExecutorAgent.executeStep (src/agents/executor.ts:193:15)
          at Array.map (<anonymous>)

  console.error
    [ExecutorAgent] Tool test attempt 1/3 failed: Timeout after 100ms

      353 |       } catch (error: any) {
      354 |         lastError = error;
    > 355 |         console.error(
          |                 ^
      356 |           `[ExecutorAgent] Tool ${toolName} attempt ${attempt}/${this.config.maxRetries} failed:`,
      357 |           error.message
      358 |         );

      at ExecutorAgent.executeWithRetry (src/agents/executor.ts:355:17)
      at ExecutorAgent.executeStep (src/agents/executor.ts:196:22)
          at async Promise.all (index 0)
      at ExecutorAgent.execute (src/agents/executor.ts:55:28)
      at Object.<anonymous> (src/tests/agents/executor.test.ts:660:23)

  console.error
    [ExecutorAgent] Tool test attempt 2/3 failed: Timeout after 100ms

      353 |       } catch (error: any) {
      354 |         lastError = error;
    > 355 |         console.error(
          |                 ^
      356 |           `[ExecutorAgent] Tool ${toolName} attempt ${attempt}/${this.config.maxRetries} failed:`,
      357 |           error.message
      358 |         );

      at ExecutorAgent.executeWithRetry (src/agents/executor.ts:355:17)
      at ExecutorAgent.executeStep (src/agents/executor.ts:196:22)
          at async Promise.all (index 0)
      at ExecutorAgent.execute (src/agents/executor.ts:55:28)
      at Object.<anonymous> (src/tests/agents/executor.test.ts:660:23)

  console.error
    [ExecutorAgent] Tool test attempt 3/3 failed: Timeout after 100ms

      353 |       } catch (error: any) {
      354 |         lastError = error;
    > 355 |         console.error(
          |                 ^
      356 |           `[ExecutorAgent] Tool ${toolName} attempt ${attempt}/${this.config.maxRetries} failed:`,
      357 |           error.message
      358 |         );

      at ExecutorAgent.executeWithRetry (src/agents/executor.ts:355:17)
      at ExecutorAgent.executeStep (src/agents/executor.ts:196:22)
          at async Promise.all (index 0)
      at ExecutorAgent.execute (src/agents/executor.ts:55:28)
      at Object.<anonymous> (src/tests/agents/executor.test.ts:660:23)

  console.error
    [ExecutorAgent] Step 0 (test) failed: Timeout after 100ms

      202 |
      203 |     } catch (error: any) {
    > 204 |       console.error(`[ExecutorAgent] Step ${index} (${step.tool}) failed:`, error.message);
          |               ^
      205 |
      206 |       return {
      207 |         success: false,

      at ExecutorAgent.executeStep (src/agents/executor.ts:204:15)
          at async Promise.all (index 0)
      at ExecutorAgent.execute (src/agents/executor.ts:55:28)
      at Object.<anonymous> (src/tests/agents/executor.test.ts:660:23)

  console.log
    [ExecutorAgent] Plan execution complete. 1 results

      at ExecutorAgent.execute (src/agents/executor.ts:79:13)

PASS src/tests/agents/executor.test.ts (16.43 s)
  ExecutorAgent
    Simple Sequential Execution
      ✓ should execute a single-step plan (71 ms)
      ✓ should execute multiple steps sequentially (19 ms)
    Parallel Execution
      ✓ should execute independent steps in parallel (107 ms)
      ✓ should respect maxParallelExecutions limit (113 ms)
    Dependency Resolution
      ✓ should execute steps with dependencies in order (8 ms)
      ✓ should handle complex dependency graph (5 ms)
    Parameter Template Resolution
      ✓ should resolve simple field reference (2 ms)
      ✓ should resolve wildcard array mapping (8 ms)
      ✓ should resolve nested property (6 ms)
      ✓ should handle multiple templates in same params (3 ms)
    Circular Dependency Detection
      ✓ should detect direct circular dependency (23 ms)
      ✓ should detect indirect circular dependency (16 ms)
      ✓ should allow valid dependency chains (4 ms)
    Error Handling
      ✓ should handle tool not found error (2 ms)
      ✓ should handle tool execution error (3072 ms)
      ✓ should continue execution on partial failure (3018 ms)
      ✓ should fail fast when configured (3015 ms)
    Retry Logic
      ✓ should retry failed tool executions (3009 ms)
      ✓ should respect maxRetries configuration (6 ms)
    Timeout Handling
      ✓ should timeout slow tool executions (3324 ms)
    Configuration
      ✓ should use custom configuration (1 ms)

A worker process has failed to exit gracefully and has been force exited. This is likely caused by tests leaking due to improper teardown. Try running with --detectOpenHandles to find leaks. Active timers can also cause this, ensure that .unref() was called on them.
Summary of all failing tests
FAIL src/tests/agents/planner.test.ts
  ● PlannerAgent › Simple Query Planning › should generate valid plan for simple query

    Failed to generate valid plan after 3 attempts: Tool not available: shipments

      104 |
      105 |         if (attempts >= this.config.maxRetries) {
    > 106 |           throw new Error(`Failed to generate valid plan after ${attempts} attempts: ${error.message}`);
          |                 ^
      107 |         }
      108 |
      109 |         // Add error feedback to next attempt

      at PlannerAgent.plan (src/agents/planner.ts:106:17)
      at Object.<anonymous> (src/tests/agents/planner.test.ts:58:20)

  ● PlannerAgent › Simple Query Planning › should include query in metadata

    Failed to generate valid plan after 3 attempts: Tool not available: facilities

      104 |
      105 |         if (attempts >= this.config.maxRetries) {
    > 106 |           throw new Error(`Failed to generate valid plan after ${attempts} attempts: ${error.message}`);
          |                 ^
      107 |         }
      108 |
      109 |         // Add error feedback to next attempt

      at PlannerAgent.plan (src/agents/planner.ts:106:17)
      at Object.<anonymous> (src/tests/agents/planner.test.ts:84:20)

  ● PlannerAgent › Query with Dependencies › should handle nested queries with dependencies

    Failed to generate valid plan after 3 attempts: Tool not available: shipments

      104 |
      105 |         if (attempts >= this.config.maxRetries) {
    > 106 |           throw new Error(`Failed to generate valid plan after ${attempts} attempts: ${error.message}`);
          |                 ^
      107 |         }
      108 |
      109 |         // Add error feedback to next attempt

      at PlannerAgent.plan (src/agents/planner.ts:106:17)
      at Object.<anonymous> (src/tests/agents/planner.test.ts:117:20)

  ● PlannerAgent › Query with Dependencies › should validate dependency indices

    expect(received).rejects.toThrow(expected)

    Expected substring: "Invalid dependency index"
    Received message:   "Failed to generate valid plan after 3 attempts: Tool not available: shipments"

          104 |
          105 |         if (attempts >= this.config.maxRetries) {
        > 106 |           throw new Error(`Failed to generate valid plan after ${attempts} attempts: ${error.message}`);
              |                 ^
          107 |         }
          108 |
          109 |         // Add error feedback to next attempt

      at PlannerAgent.plan (src/agents/planner.ts:106:17)
      at Object.<anonymous> (src/tests/agents/planner.test.ts:150:7)
      at Object.toThrow (node_modules/expect/build/index.js:2155:20)
      at Object.<anonymous> (src/tests/agents/planner.test.ts:150:50)

  ● PlannerAgent › JSON Extraction › should extract JSON from markdown code blocks

    Failed to generate valid plan after 3 attempts: Tool not available: shipments

      104 |
      105 |         if (attempts >= this.config.maxRetries) {
    > 106 |           throw new Error(`Failed to generate valid plan after ${attempts} attempts: ${error.message}`);
          |                 ^
      107 |         }
      108 |
      109 |         // Add error feedback to next attempt

      at PlannerAgent.plan (src/agents/planner.ts:106:17)
      at Object.<anonymous> (src/tests/agents/planner.test.ts:171:20)

  ● PlannerAgent › JSON Extraction › should extract JSON from mixed text

    Failed to generate valid plan after 3 attempts: Tool not available: shipments

      104 |
      105 |         if (attempts >= this.config.maxRetries) {
    > 106 |           throw new Error(`Failed to generate valid plan after ${attempts} attempts: ${error.message}`);
          |                 ^
      107 |         }
      108 |
      109 |         // Add error feedback to next attempt

      at PlannerAgent.plan (src/agents/planner.ts:106:17)
      at Object.<anonymous> (src/tests/agents/planner.test.ts:192:20)

  ● PlannerAgent › JSON Extraction › should parse plain JSON

    Failed to generate valid plan after 3 attempts: Tool not available: shipments

      104 |
      105 |         if (attempts >= this.config.maxRetries) {
    > 106 |           throw new Error(`Failed to generate valid plan after ${attempts} attempts: ${error.message}`);
          |                 ^
      107 |         }
      108 |
      109 |         // Add error feedback to next attempt

      at PlannerAgent.plan (src/agents/planner.ts:106:17)
      at Object.<anonymous> (src/tests/agents/planner.test.ts:213:20)

  ● PlannerAgent › Retry Logic › should retry on invalid JSON

    Failed to generate valid plan after 3 attempts: Cannot read properties of undefined (reading 'content')

      104 |
      105 |         if (attempts >= this.config.maxRetries) {
    > 106 |           throw new Error(`Failed to generate valid plan after ${attempts} attempts: ${error.message}`);
          |                 ^
      107 |         }
      108 |
      109 |         // Add error feedback to next attempt

      at PlannerAgent.plan (src/agents/planner.ts:106:17)
      at Object.<anonymous> (src/tests/agents/planner.test.ts:243:20)

  ● PlannerAgent › Retry Logic › should include error feedback in retry prompt

    Failed to generate valid plan after 3 attempts: Cannot read properties of undefined (reading 'content')

      104 |
      105 |         if (attempts >= this.config.maxRetries) {
    > 106 |           throw new Error(`Failed to generate valid plan after ${attempts} attempts: ${error.message}`);
          |                 ^
      107 |         }
      108 |
      109 |         // Add error feedback to next attempt

      at PlannerAgent.plan (src/agents/planner.ts:106:17)
      at Object.<anonymous> (src/tests/agents/planner.test.ts:284:7)

  ● PlannerAgent › Context Handling › should include context in LLM prompt when provided

    Failed to generate valid plan after 3 attempts: Tool not available: shipments

      104 |
      105 |         if (attempts >= this.config.maxRetries) {
    > 106 |           throw new Error(`Failed to generate valid plan after ${attempts} attempts: ${error.message}`);
          |                 ^
      107 |         }
      108 |
      109 |         // Add error feedback to next attempt

      at PlannerAgent.plan (src/agents/planner.ts:106:17)
      at Object.<anonymous> (src/tests/agents/planner.test.ts:359:7)

  ● PlannerAgent › Context Handling › should work without context

    Failed to generate valid plan after 3 attempts: Tool not available: shipments

      104 |
      105 |         if (attempts >= this.config.maxRetries) {
    > 106 |           throw new Error(`Failed to generate valid plan after ${attempts} attempts: ${error.message}`);
          |                 ^
      107 |         }
      108 |
      109 |         // Add error feedback to next attempt

      at PlannerAgent.plan (src/agents/planner.ts:106:17)
      at Object.<anonymous> (src/tests/agents/planner.test.ts:382:20)

  ● PlannerAgent › Configuration › should use custom temperature

    Failed to generate valid plan after 3 attempts: Tool not available: shipments

      104 |
      105 |         if (attempts >= this.config.maxRetries) {
    > 106 |           throw new Error(`Failed to generate valid plan after ${attempts} attempts: ${error.message}`);
          |                 ^
      107 |         }
      108 |
      109 |         // Add error feedback to next attempt

      at PlannerAgent.plan (src/agents/planner.ts:106:17)
      at Object.<anonymous> (src/tests/agents/planner.test.ts:428:7)


Test Suites: 1 failed, 51 passed, 52 total
Tests:       12 failed, 840 passed, 852 total
Snapshots:   0 total
Time:        17.485 s
Ran all test suites.
