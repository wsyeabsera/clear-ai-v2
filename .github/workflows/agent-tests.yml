name: Agent System Tests

on:
  pull_request:
    branches: [main]
  push:
    branches: [main]

jobs:
  agent-tests:
    runs-on: ubuntu-latest
    timeout-minutes: 30

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22'

      - name: Enable Corepack
        run: corepack enable

      - name: Install dependencies
        run: yarn install --immutable

      - name: Build project
        run: yarn build

      - name: Run agent tests
        env:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          GRAPHQL_HTTP_ENDPOINT: ${{ secrets.STAGING_GRAPHQL_ENDPOINT }}
        run: |
          cd agent-tester
          yarn build
          node dist/index.js run --all --verbose --export ../test-results.json

      - name: Upload test results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: agent-test-results
          path: test-results.json
          retention-days: 30

      - name: Check test results
        if: always()
        run: |
          if [ -f test-results.json ]; then
            echo "Test results summary:"
            cat test-results.json | jq '.summary'
            
            FAILED=$(cat test-results.json | jq '.summary.failed')
            if [ "$FAILED" -gt 0 ]; then
              echo "❌ $FAILED tests failed"
              exit 1
            fi
          fi

      - name: Comment PR
        uses: actions/github-script@v7
        if: github.event_name == 'pull_request' && always()
        with:
          script: |
            const fs = require('fs');
            if (!fs.existsSync('test-results.json')) {
              return;
            }
            
            const results = JSON.parse(fs.readFileSync('test-results.json', 'utf8'));
            const summary = results.summary;
            
            const passRate = ((summary.passed / summary.total) * 100).toFixed(1);
            const status = summary.failed === 0 ? '✅' : '❌';
            
            const body = `## ${status} Agent System Test Results
            
**Summary**: ${summary.passed}/${summary.total} passed (${passRate}%)

- ✅ Passed: ${summary.passed}
- ❌ Failed: ${summary.failed}
- ⏭️ Skipped: ${summary.skipped}
- ⏱️ Duration: ${(summary.totalDurationMs / 1000).toFixed(2)}s

${summary.failed > 0 ? `
### ❌ Failed Tests

${results.scenarios.filter(s => !s.success).map(s => `- **${s.scenario.id}**: ${s.scenario.name}`).join('\n')}
` : ''}

[View full test results](https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }})
            `;
            
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: body
            });
